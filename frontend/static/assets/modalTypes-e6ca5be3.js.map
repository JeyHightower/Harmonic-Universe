{"version":3,"file":"modalTypes-e6ca5be3.js","sources":["../../src/constants/modalTypes.js"],"sourcesContent":["/**\n * All available modal types in the application.\n * Having these defined as constants ensures type safety and prevents typos.\n */\nexport const MODAL_TYPES = {\n    LOGIN: 'LOGIN',\n    REGISTER: 'REGISTER',\n    // Add any other modal types your app might need\n};\n\n/**\n * Check if a modal type is valid\n * @param {string} type - The modal type to check\n * @returns {boolean} - Whether the type is valid\n */\nexport const isValidModalType = (type) => {\n    return Object.values(MODAL_TYPES).includes(type);\n};\n\n/**\n * Get modal type metadata\n * @param {string} type - The modal type\n * @returns {object} - Metadata for the modal type\n */\nexport const getModalTypeMetadata = (type) => {\n    const metadata = {\n        [MODAL_TYPES.LOGIN]: {\n            title: 'Log In',\n            description: 'Log in to your account',\n            width: 'sm'\n        },\n        [MODAL_TYPES.REGISTER]: {\n            title: 'Sign Up',\n            description: 'Create a new account',\n            width: 'sm'\n        },\n        [MODAL_TYPES.FORGOT_PASSWORD]: {\n            title: 'Forgot Password',\n            description: 'Reset your password',\n            width: 'sm'\n        },\n        [MODAL_TYPES.RESET_PASSWORD]: {\n            title: 'Reset Password',\n            description: 'Enter your new password',\n            width: 'sm'\n        },\n        [MODAL_TYPES.CONFIRM]: {\n            title: 'Confirm',\n            description: 'Please confirm this action',\n            width: 'sm'\n        },\n        [MODAL_TYPES.ALERT]: {\n            title: 'Alert',\n            description: 'Important information',\n            width: 'sm'\n        },\n        [MODAL_TYPES.INFO]: {\n            title: 'Information',\n            description: 'Additional information',\n            width: 'sm'\n        },\n        [MODAL_TYPES.ERROR]: {\n            title: 'Error',\n            description: 'An error occurred',\n            width: 'sm'\n        },\n        [MODAL_TYPES.DEBUG]: {\n            title: 'Debug',\n            description: 'Debug information',\n            width: 'md'\n        }\n    };\n\n    return metadata[type] || {\n        title: type,\n        description: 'Modal',\n        width: 'md'\n    };\n};\n\nexport default MODAL_TYPES;\n"],"names":["MODAL_TYPES","isValidModalType","type","getModalTypeMetadata"],"mappings":"AAIY,MAACA,EAAc,CACvB,MAAO,QACP,SAAU,UAEd,EAOaC,EAAoBC,GACtB,OAAO,OAAOF,CAAW,EAAE,SAASE,CAAI,EAQtCC,EAAwBD,IAChB,CACb,CAACF,EAAY,KAAK,EAAG,CACjB,MAAO,SACP,YAAa,yBACb,MAAO,IACV,EACD,CAACA,EAAY,QAAQ,EAAG,CACpB,MAAO,UACP,YAAa,uBACb,MAAO,IACV,EACD,CAACA,EAAY,eAAe,EAAG,CAC3B,MAAO,kBACP,YAAa,sBACb,MAAO,IACV,EACD,CAACA,EAAY,cAAc,EAAG,CAC1B,MAAO,iBACP,YAAa,0BACb,MAAO,IACV,EACD,CAACA,EAAY,OAAO,EAAG,CACnB,MAAO,UACP,YAAa,6BACb,MAAO,IACV,EACD,CAACA,EAAY,KAAK,EAAG,CACjB,MAAO,QACP,YAAa,wBACb,MAAO,IACV,EACD,CAACA,EAAY,IAAI,EAAG,CAChB,MAAO,cACP,YAAa,yBACb,MAAO,IACV,EACD,CAACA,EAAY,KAAK,EAAG,CACjB,MAAO,QACP,YAAa,oBACb,MAAO,IACV,EACD,CAACA,EAAY,KAAK,EAAG,CACjB,MAAO,QACP,YAAa,oBACb,MAAO,IACV,CACT,GAEoBE,CAAI,GAAK,CACrB,MAAOA,EACP,YAAa,QACb,MAAO,IACf"}