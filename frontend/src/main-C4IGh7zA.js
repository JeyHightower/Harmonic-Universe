import{r as _e,a as Oe,g as Ae,c as I,b as i,d as Re,e as ce,P as Ie,R as Pe,f as Ue,h as ve}from"./vendor-EnwKVhIR.js";import{a as R}from"./utils-t--hEgTQ.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const t of o.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&a(t)}).observe(document,{childList:!0,subtree:!0});function s(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(n){if(n.ep)return;n.ep=!0;const o=s(n);fetch(n.href,o)}})();var x={exports:{}},U={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ue;function Te(){if(ue)return U;ue=1;var r=_e(),e=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,n=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function t(y,m,de){var _,j={},w=null,ie=null;de!==void 0&&(w=""+de),m.key!==void 0&&(w=""+m.key),m.ref!==void 0&&(ie=m.ref);for(_ in m)a.call(m,_)&&!o.hasOwnProperty(_)&&(j[_]=m[_]);if(y&&y.defaultProps)for(_ in m=y.defaultProps,m)j[_]===void 0&&(j[_]=m[_]);return{$$typeof:e,type:y,key:w,ref:ie,props:j,_owner:n.current}}return U.Fragment=s,U.jsx=t,U.jsxs=t,U}var pe;function je(){return pe||(pe=1,x.exports=Te()),x.exports}var c=je(),C={},fe;function Ce(){if(fe)return C;fe=1;var r=Oe();return C.createRoot=r.createRoot,C.hydrateRoot=r.hydrateRoot,C}var be=Ce();const he=Ae(be),Ne={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},g=(r,e=void 0,s=null)=>{const a=Ne[r]??e;if(a===void 0)throw new Error(`Missing required environment variable: ${r}`);if(s&&!s(a))throw new Error(`Invalid value for environment variable: ${r}`);return a},h=r=>r==="true",b=r=>r.split(",").map(e=>e.trim()),v=(r,e=void 0)=>{const s=Number(r);return isNaN(s)?e:s},te={BASE_URL:g("VITE_API_BASE_URL","http://localhost:5000"),TIMEOUT:v(g("VITE_API_TIMEOUT","30000")),CORS:{ALLOWED_ORIGINS:b(g("VITE_CORS_ALLOWED_ORIGINS","http://localhost:3000,http://localhost:5173")),ALLOWED_METHODS:b(g("VITE_CORS_ALLOWED_METHODS","GET,POST,PUT,DELETE,PATCH")),ALLOWED_HEADERS:b(g("VITE_CORS_ALLOWED_HEADERS","Content-Type,Authorization")),EXPOSED_HEADERS:b(g("VITE_CORS_EXPOSE_HEADERS","Content-Length,Content-Type")),MAX_AGE:v(g("VITE_CORS_MAX_AGE","600"))},HEALTH_CHECK:{INTERVAL:v(g("VITE_HEALTH_CHECK_INTERVAL","30000"))},ERROR_HANDLING:{RETRY_ATTEMPTS:v(g("VITE_API_RETRY_ATTEMPTS","3")),RETRY_DELAY:v(g("VITE_API_RETRY_DELAY","1000")),NETWORK_ERROR_THRESHOLD:v(g("VITE_NETWORK_ERROR_THRESHOLD","5000"))}},S={TOKEN_EXPIRY:v(g("VITE_AUTH_TOKEN_EXPIRY","86400000")),REFRESH_TOKEN_EXPIRY:v(g("VITE_REFRESH_TOKEN_EXPIRY","604800000")),COOKIE_DOMAIN:g("VITE_AUTH_COOKIE_DOMAIN","localhost"),COOKIE_SECURE:h(g("VITE_AUTH_COOKIE_SECURE","false")),COOKIE_SAMESITE:validateVar("VITE_AUTH_COOKIE_SAMESITE","strict")};h(validateVar("VITE_ENABLE_HTTPS","false")),v(validateVar("VITE_RATE_LIMIT_WINDOW","900000")),v(validateVar("VITE_RATE_LIMIT_MAX_REQUESTS","100")),v(validateVar("VITE_PASSWORD_MIN_LENGTH","8")),v(validateVar("VITE_PASSWORD_MAX_LENGTH","128")),h(validateVar("VITE_PASSWORD_REQUIRE_UPPERCASE","true")),h(validateVar("VITE_PASSWORD_REQUIRE_LOWERCASE","true")),h(validateVar("VITE_PASSWORD_REQUIRE_NUMBERS","true")),h(validateVar("VITE_PASSWORD_REQUIRE_SYMBOLS","true"));h(validateVar("VITE_ENABLE_MFA","false")),h(validateVar("VITE_ENABLE_PASSWORD_RESET","true")),h(validateVar("VITE_ENABLE_ACCOUNT_LOCKOUT","true")),h(validateVar("VITE_ENABLE_DEBUG_LOGGING","false")),h(validateVar("VITE_MOCK_AUTH_IN_DEV","false"));v(validateVar("VITE_SESSION_TIMEOUT","3600000")),h(validateVar("VITE_ENABLE_SESSION_KEEPALIVE","true")),v(validateVar("VITE_SESSION_RENEW_THRESHOLD","300000"));h(validateVar("VITE_ENABLE_PERFORMANCE_MONITORING","false")),h(validateVar("VITE_ENABLE_ERROR_MONITORING","false")),parseFloat(validateVar("VITE_MONITORING_SAMPLE_RATE","0.1"));const me=r=>{if(!r)return!1;try{return JSON.parse(atob(r.split(".")[1])).exp*1e3>Date.now()}catch{return!1}},Le=()=>{console.debug("Initializing auth state");const r=localStorage.getItem(S.TOKEN_KEY),e=localStorage.getItem(S.USER_KEY);return r?me(r)?(console.debug("Valid token found during initialization"),{isAuthenticated:!0,user:e?JSON.parse(e):null,loading:!1,error:null,networkError:!1,offlineMode:!1}):(console.debug("Invalid token found during initialization"),localStorage.removeItem(S.TOKEN_KEY),localStorage.removeItem(S.USER_KEY),{isAuthenticated:!1,user:null,loading:!1,error:null,networkError:!1,offlineMode:!1}):(console.debug("No token found during initialization"),{isAuthenticated:!1,user:null,loading:!1,error:null,networkError:!1,offlineMode:!1})},$e=I({name:"auth",initialState:Le(),reducers:{loginStart:r=>{r.loading=!0,r.error=null,r.networkError=!1},loginSuccess:(r,e)=>{r.isAuthenticated=!0,r.user=e.payload,r.loading=!1,r.error=null,r.networkError=!1,r.offlineMode=e.payload.offlineMode||!1},loginFailure:(r,e)=>{var s;r.isAuthenticated=!1,r.user=null,r.loading=!1,r.error=e.payload,(s=e.payload)!=null&&s.isNetworkError&&(r.networkError=!0),localStorage.removeItem(S.TOKEN_KEY),localStorage.removeItem(S.USER_KEY)},logout:r=>{localStorage.removeItem(S.TOKEN_KEY),localStorage.removeItem(S.USER_KEY),r.isAuthenticated=!1,r.user=null,r.loading=!1,r.error=null},clearError:r=>{r.error=null},updateUser:(r,e)=>{r.user=e.payload},setLoading:(r,e)=>{r.loading=e.payload},checkAuthState:r=>{console.debug("Checking auth state...");const e=localStorage.getItem(S.TOKEN_KEY);if(!e){console.debug("No token found during check"),r.isAuthenticated=!1,r.loading=!1;return}if(me(e)){console.debug("Valid token found during check"),r.isAuthenticated=!0,r.loading=!1;return}console.debug("Invalid token found during check"),r.isAuthenticated=!1,r.loading=!1,localStorage.removeItem(S.TOKEN_KEY)},setNetworkError:(r,e)=>{r.networkError=e.payload},setOfflineMode:(r,e)=>{r.offlineMode=e.payload}}}),we=$e.reducer,xe={modalType:null,modalProps:{}},Ve=I({name:"modal",initialState:xe,reducers:{openModal:(r,e)=>{const{modalType:s,modalProps:a={}}=e.payload;r.modalType=s,r.modalProps=a},closeModal:r=>{r.modalType=null,r.modalProps={}}}}),Me=Ve.reducer,De=r=>!1,l=R.create({baseURL:"/api",timeout:te.TIMEOUT||1e4,headers:{"Content-Type":"application/json",Accept:"application/json"},withCredentials:!0});l.interceptors.request.use(r=>r,r=>(console.error("Request Error:",r),Promise.reject(r)));l.interceptors.response.use(r=>(r.data=r.data||{},r.data),async r=>{var s,a,n,o;await De()&&console.warn("Using fallback mode due to API error");const e={message:((a=(s=r.response)==null?void 0:s.data)==null?void 0:a.message)||r.message||"An unknown error occurred",status:(n=r.response)==null?void 0:n.status,data:(o=r.response)==null?void 0:o.data};return Promise.reject(e)});const d={auth:{login:"/auth/login",register:"/auth/register",logout:"/auth/logout",demoLogin:"/auth/demo-login"},user:{profile:"/user/profile",settings:"/user/settings"},universes:{list:"/universes",create:"/universes",get:r=>`/universes/${r}`,update:r=>`/universes/${r}`,delete:r=>`/universes/${r}`,scenes:r=>`/universes/${r}/scenes`},scenes:{list:"/scenes",create:"/scenes",get:r=>`/scenes/${r}`,update:r=>`/scenes/${r}`,delete:r=>`/scenes/${r}`,reorder:"/scenes/reorder"},physicsObjects:{list:"/physics-objects",create:"/physics-objects",get:r=>`/physics-objects/${r}`,update:r=>`/physics-objects/${r}`,delete:r=>`/physics-objects/${r}`,forScene:r=>`/scenes/${r}/physics-objects`}},L={login:r=>l.post(d.auth.login,r),register:r=>l.post(d.auth.register,r),logout:()=>l.post(d.auth.logout),demoLogin:(r={})=>l.post(d.auth.demoLogin,{},r),getUserProfile:()=>l.get(d.user.profile),updateUserProfile:r=>l.put(d.user.profile,r),updateUserSettings:r=>l.put(d.user.settings,r),getUniverses:(r={})=>{const e=new URLSearchParams;return r.includePublic&&e.append("public","true"),l.get(`${d.universes.list}?${e.toString()}`)},createUniverse:r=>l.post(d.universes.create,r),getUniverse:(r,e={})=>{const s=new URLSearchParams;return e.includeScenes&&s.append("include_scenes","true"),l.get(`${d.universes.get(r)}?${s.toString()}`)},updateUniverse:(r,e)=>l.put(d.universes.update(r),e),deleteUniverse:r=>l.delete(d.universes.delete(r)),getUniverseScenes:r=>l.get(d.universes.scenes(r)),updateUniversePhysics:(r,e)=>l.put(`/api/universes/${r}/physics`,{physics_params:e}),updateUniverseHarmony:(r,e)=>l.put(`/api/universes/${r}/harmony`,{harmony_params:e}),getScenes:(r={})=>{const e=new URLSearchParams;return r.universeId&&e.append("universe_id",r.universeId),l.get(`${d.scenes.list}?${e.toString()}`)},getScene:r=>l.get(d.scenes.get(r)),createScene:r=>l.post(d.scenes.create,r),updateScene:(r,e)=>l.put(d.scenes.update(r),e),deleteScene:r=>l.delete(d.scenes.delete(r)),reorderScenes:r=>l.post(d.scenes.reorder,r),updateScenePhysicsParams:(r,e)=>l.put(`${d.scenes.get(r)}/physics_parameters`,e),updateSceneHarmonyParams:(r,e)=>l.put(`${d.scenes.get(r)}/harmony_parameters`,e),getPhysicsObjects:()=>l.get(d.physicsObjects.list),createPhysicsObject:r=>l.post(d.physicsObjects.create,r),getPhysicsObject:r=>l.get(d.physicsObjects.get(r)),updatePhysicsObject:(r,e)=>l.put(d.physicsObjects.update(r),e),deletePhysicsObject:r=>l.delete(d.physicsObjects.delete(r)),getPhysicsObjectsForScene:r=>l.get(d.physicsObjects.forScene(r))},$=r=>{var e,s,a,n;return console.error("API Error:",r),{message:((s=(e=r.response)==null?void 0:e.data)==null?void 0:s.message)||r.message||"An error occurred",status:(a=r.response)==null?void 0:a.status,data:(n=r.response)==null?void 0:n.data}},V=i("physicsObjects/fetchPhysicsObjects",async(r,{rejectWithValue:e})=>{try{console.debug(`Fetching physics objects for scene ${r}`);const s=await L.getPhysicsObjectsForScene(r);return console.debug("Physics objects fetched:",s),s.data||[]}catch(s){return console.error("Failed to fetch physics objects:",s),e($(s))}}),M=i("physicsObjects/createPhysicsObject",async(r,{rejectWithValue:e})=>{try{console.debug("Creating physics object:",r);const s=await L.createPhysicsObject(r);return console.debug("Physics object created:",s),s.data}catch(s){return console.error("Failed to create physics object:",s),e($(s))}}),D=i("physicsObjects/updatePhysicsObject",async({id:r,data:e},{rejectWithValue:s})=>{try{console.debug(`Updating physics object ${r}:`,e);const a=await L.updatePhysicsObject(r,e);return console.debug("Physics object updated:",a),a.data}catch(a){return console.error("Failed to update physics object:",a),s($(a))}}),F=i("physicsObjects/deletePhysicsObject",async(r,{rejectWithValue:e})=>{try{return console.debug(`Deleting physics object ${r}`),await L.deletePhysicsObject(r),r}catch(s){return console.error("Failed to delete physics object:",s),e($(s))}}),ye={physicsObjects:[],currentPhysicsObject:null,loading:!1,error:null},Fe=I({name:"physicsObjects",initialState:ye,reducers:{setCurrentPhysicsObject:(r,e)=>{r.currentPhysicsObject=e.payload},clearCurrentPhysicsObject:r=>{r.currentPhysicsObject=null},clearError:r=>{r.error=null},resetState:()=>ye},extraReducers:r=>{r.addCase(V.pending,e=>{e.loading=!0,e.error=null}).addCase(V.fulfilled,(e,s)=>{e.loading=!1,e.physicsObjects=s.payload,e.error=null}).addCase(V.rejected,(e,s)=>{e.loading=!1,e.error=s.payload}).addCase(M.pending,e=>{e.loading=!0,e.error=null}).addCase(M.fulfilled,(e,s)=>{e.loading=!1,e.physicsObjects.push(s.payload),e.currentPhysicsObject=s.payload,e.error=null}).addCase(M.rejected,(e,s)=>{e.loading=!1,e.error=s.payload}).addCase(D.pending,e=>{e.loading=!0,e.error=null}).addCase(D.fulfilled,(e,s)=>{var n;e.loading=!1;const a=e.physicsObjects.findIndex(o=>o.id===s.payload.id);a!==-1&&(e.physicsObjects[a]=s.payload),((n=e.currentPhysicsObject)==null?void 0:n.id)===s.payload.id&&(e.currentPhysicsObject=s.payload),e.error=null}).addCase(D.rejected,(e,s)=>{e.loading=!1,e.error=s.payload}).addCase(F.pending,e=>{e.loading=!0,e.error=null}).addCase(F.fulfilled,(e,s)=>{var a;e.loading=!1,e.physicsObjects=e.physicsObjects.filter(n=>n.id!==s.payload),((a=e.currentPhysicsObject)==null?void 0:a.id)===s.payload&&(e.currentPhysicsObject=null),e.error=null}).addCase(F.rejected,(e,s)=>{e.loading=!1,e.error=s.payload})}}),He=Fe.reducer,T=`${te.BASE_URL}${te.API_PREFIX}/physics-parameters`,H=i("physicsParameters/fetchAll",async r=>(await R.get(`${T}/universe/${r}`)).data),B=i("physicsParameters/create",async r=>(await R.post(T,r)).data),K=i("physicsParameters/update",async({id:r,...e})=>(await R.put(`${T}/${r}`,e)).data),k=i("physicsParameters/delete",async r=>(await R.delete(`${T}/${r}`),r)),G=i("physicsParameters/validate",async r=>(await R.post(`${T}/validate`,r)).data),Be=I({name:"physicsParameters",initialState:{parameters:[],loading:!1,error:null,validationStatus:null},reducers:{clearError:r=>{r.error=null},clearValidationStatus:r=>{r.validationStatus=null}},extraReducers:r=>{r.addCase(H.pending,e=>{e.loading=!0,e.error=null}).addCase(H.fulfilled,(e,s)=>{e.loading=!1,e.parameters=s.payload}).addCase(H.rejected,(e,s)=>{e.loading=!1,e.error=s.error.message}).addCase(B.pending,e=>{e.loading=!0,e.error=null}).addCase(B.fulfilled,(e,s)=>{e.loading=!1,e.parameters.push(s.payload)}).addCase(B.rejected,(e,s)=>{e.loading=!1,e.error=s.error.message}).addCase(K.pending,e=>{e.loading=!0,e.error=null}).addCase(K.fulfilled,(e,s)=>{e.loading=!1;const a=e.parameters.findIndex(n=>n.id===s.payload.id);a!==-1&&(e.parameters[a]=s.payload)}).addCase(K.rejected,(e,s)=>{e.loading=!1,e.error=s.error.message}).addCase(k.pending,e=>{e.loading=!0,e.error=null}).addCase(k.fulfilled,(e,s)=>{e.loading=!1,e.parameters=e.parameters.filter(a=>a.id!==s.payload)}).addCase(k.rejected,(e,s)=>{e.loading=!1,e.error=s.error.message}).addCase(G.pending,e=>{e.loading=!0,e.error=null,e.validationStatus=null}).addCase(G.fulfilled,(e,s)=>{e.loading=!1,e.validationStatus=s.payload}).addCase(G.rejected,(e,s)=>{e.loading=!1,e.error=s.error.message,e.validationStatus={valid:!1,message:s.error.message}})}}),Ke=Be.reducer,p=R.create({baseURL:"http://localhost:5001",timeout:1e4,headers:{"Content-Type":"application/json",Accept:"application/json"}});p.interceptors.request.use(r=>{var s;const e=localStorage.getItem(S.TOKEN_KEY);return e&&(r.headers.Authorization=`Bearer ${e}`),console.log("API Request:",{method:(s=r.method)==null?void 0:s.toUpperCase(),url:r.url,data:r.data}),r},r=>(console.error("Request Error:",r),Promise.reject(r)));p.interceptors.response.use(r=>(console.log("API Response:",{status:r.status,data:r.data}),r.data),r=>{var s,a,n,o,t,y;console.error("API Error:",{message:r.message,status:(s=r.response)==null?void 0:s.status,data:(a=r.response)==null?void 0:a.data});const e={message:((o=(n=r.response)==null?void 0:n.data)==null?void 0:o.message)||r.message||"An unknown error occurred",status:(t=r.response)==null?void 0:t.status,data:(y=r.response)==null?void 0:y.data};return Promise.reject(e)});const u={login:r=>p.post("/api/auth/login",r),register:r=>p.post("/api/auth/register",r),logout:()=>p.post("/api/auth/logout"),demoLogin:()=>p.post("/auth/demo-login"),getUniverses:()=>p.get("/api/universes"),createUniverse:r=>p.post("/api/universes",r),getUniverse:r=>p.get(`/api/universes/${r}`),updateUniverse:(r,e)=>p.put(`/api/universes/${r}`,e),deleteUniverse:r=>p.delete(`/api/universes/${r}`),getScenes:r=>p.get(`/api/scenes?universe_id=${r}`),createScene:r=>p.post("/api/scenes",r),getScene:r=>p.get(`/api/scenes/${r}`),updateScene:(r,e)=>p.put(`/api/scenes/${r}`,e),deleteScene:r=>p.delete(`/api/scenes/${r}`)},P=r=>{var e,s,a,n;return console.error("API Error:",r),{message:((s=(e=r.response)==null?void 0:e.data)==null?void 0:s.message)||r.message||"An error occurred",status:(a=r.response)==null?void 0:a.status,data:(n=r.response)==null?void 0:n.data}},f=r=>r?{...r,created_at:r.created_at?r.created_at.toString():null,updated_at:r.updated_at?r.updated_at.toString():null}:null,O=r=>!r||!Array.isArray(r)?[]:r.map(f),W=i("scenes/fetchScenes",async(r,{rejectWithValue:e})=>{var s;try{console.log(`Fetching scenes for universe ${r}`);const a=await u.getScenes(r);console.log("Got scenes response:",a);let n=[];return a&&a.data&&Array.isArray(a.data.scenes)?n=O(a.data.scenes):a&&Array.isArray(a.scenes)?n=O(a.scenes):a&&typeof a=="object"&&a.status==="success"?n=O(((s=a.data)==null?void 0:s.scenes)||[]):Array.isArray(a)?n=O(a):(console.error("Unexpected scenes response format:",a),n=[]),{...a,scenes:n}}catch(a){return console.error(`Error fetching scenes for universe ${r}:`,a),e(P(a))}}),Y=i("scenes/fetchSceneById",async(r,{rejectWithValue:e})=>{try{console.log(`Fetching scene ${r}`);const s=await u.getScene(r);if(console.log("Got scene response:",s),s&&s.data&&s.data.scene)s.data.scene=f(s.data.scene);else if(s&&s.scene)s.scene=f(s.scene);else if(s&&s.id)return f(s);return s.data||s}catch(s){return console.error(`Error fetching scene ${r}:`,s),e(P(s))}}),q=i("scenes/createScene",async(r,{rejectWithValue:e})=>{try{console.log("Creating scene with data:",r);const s=await u.createScene(r);if(console.log("Created scene response:",s),s&&s.data&&s.data.scene)s.data.scene=f(s.data.scene);else if(s&&s.scene)s.scene=f(s.scene);else if(s&&s.id)return f(s);return s.data||s}catch(s){return console.error("Error creating scene:",s),e(P(s))}}),z=i("scenes/updateScene",async({id:r,...e},{rejectWithValue:s})=>{try{console.log(`Updating scene ${r} with data:`,e);const a=await u.updateScene(r,e);if(console.log("Updated scene response:",a),a&&a.data&&a.data.scene)a.data.scene=f(a.data.scene);else if(a&&a.scene)a.scene=f(a.scene);else if(a&&a.id)return f(a);return a.data||a}catch(a){return console.error(`Error updating scene ${r}:`,a),s(P(a))}}),X=i("scenes/deleteScene",async(r,{rejectWithValue:e})=>{try{return console.log(`Deleting scene ${r}`),await u.deleteScene(r),console.log(`Scene ${r} deleted successfully`),r}catch(s){return console.error(`Error deleting scene ${r}:`,s),e(P(s))}}),Q=i("scenes/reorderScenes",async({universeId:r,sceneOrders:e},{rejectWithValue:s})=>{var a;try{console.log(`Reordering scenes for universe ${r}:`,e);const n=e.map(({id:y,order:m})=>u.updateScene(y,{order:m}));await Promise.all(n);const o=await u.getScenes(r);console.log("Got updated scenes after reordering:",o);let t=[];return o&&o.data&&Array.isArray(o.data.scenes)?t=O(o.data.scenes):o&&Array.isArray(o.scenes)?t=O(o.scenes):o&&typeof o=="object"&&o.status==="success"?t=O(((a=o.data)==null?void 0:a.scenes)||[]):Array.isArray(o)?t=O(o):(console.error("Unexpected scenes response format after reordering:",o),t=[]),{...o,scenes:t}}catch(n){return console.error(`Error reordering scenes for universe ${r}:`,n),s(P(n))}});i("scenes/updatePhysicsParams",async({sceneId:r,physicsParams:e},{rejectWithValue:s})=>{try{const a=await u.updateScenePhysicsParams(r,e);if(a&&a.data&&a.data.scene)a.data.scene=f(a.data.scene);else if(a&&a.scene)a.scene=f(a.scene);else if(a&&a.id)return f(a);return a}catch(a){return s(a)}});i("scenes/updateHarmonyParams",async({sceneId:r,harmonyParams:e},{rejectWithValue:s})=>{try{const a=await u.updateSceneHarmonyParams(r,e);if(a&&a.data&&a.data.scene)a.data.scene=f(a.data.scene);else if(a&&a.scene)a.scene=f(a.scene);else if(a&&a.id)return f(a);return a}catch(a){return s(a)}});const ge={scenes:[],currentScene:null,loading:!1,error:null,success:!1,universeScenes:{}},ke=I({name:"scenes",initialState:ge,reducers:{clearSceneError(r){r.error=null},clearSceneSuccess(r){r.success=!1},resetSceneState(r){return ge}},extraReducers:r=>{r.addCase(W.pending,e=>{e.loading=!0,e.error=null}).addCase(W.fulfilled,(e,s)=>{var n;e.loading=!1;let a=[];s.payload&&s.payload.data&&Array.isArray(s.payload.data.scenes)?a=s.payload.data.scenes:s.payload&&Array.isArray(s.payload.scenes)?a=s.payload.scenes:s.payload&&typeof s.payload=="object"&&s.payload.status==="success"?a=((n=s.payload.data)==null?void 0:n.scenes)||[]:Array.isArray(s.payload)?a=s.payload:(console.error("Unexpected scenes response format:",s.payload),a=[]),e.scenes=a,a.forEach(o=>{const t=o.universe_id;e.universeScenes[t]||(e.universeScenes[t]=[]),e.universeScenes[t].some(y=>y.id===o.id)||e.universeScenes[t].push(o)})}).addCase(W.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to fetch scenes"}).addCase(Y.pending,e=>{e.loading=!0,e.error=null}).addCase(Y.fulfilled,(e,s)=>{e.loading=!1,e.currentScene=s.payload.scene}).addCase(Y.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to fetch scene"}).addCase(q.pending,e=>{e.loading=!0,e.error=null,e.success=!1}).addCase(q.fulfilled,(e,s)=>{e.loading=!1,e.success=!0;let a;if(s.payload&&typeof s.payload=="object"?s.payload.status==="success"&&s.payload.data&&s.payload.data.scene?a=s.payload.data.scene:s.payload.scene&&typeof s.payload.scene=="object"?a=s.payload.scene:s.payload.data&&s.payload.data.scene?a=s.payload.data.scene:s.payload.id?a=s.payload:(console.error("Unexpected response format in createScene.fulfilled:",s.payload),a=null):(console.error("Invalid payload in createScene.fulfilled:",s.payload),a=null),a){e.scenes.push(a),e.currentScene=a;const n=a.universe_id;e.universeScenes[n]||(e.universeScenes[n]=[]),e.universeScenes[n].push(a)}else console.error("Failed to extract scene data from response:",s.payload);e.error=null}).addCase(q.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to create scene",e.success=!1}).addCase(z.pending,e=>{e.loading=!0,e.error=null,e.success=!1}).addCase(z.fulfilled,(e,s)=>{e.loading=!1,e.success=!0;const a=s.payload.scene,n=e.scenes.findIndex(t=>t.id===a.id);n!==-1&&(e.scenes[n]=a);const o=a.universe_id;if(e.universeScenes[o]){const t=e.universeScenes[o].findIndex(y=>y.id===a.id);t!==-1&&(e.universeScenes[o][t]=a)}e.currentScene&&e.currentScene.id===a.id&&(e.currentScene=a)}).addCase(z.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to update scene",e.success=!1}).addCase(X.pending,e=>{e.loading=!0,e.error=null,e.success=!1}).addCase(X.fulfilled,(e,s)=>{e.loading=!1,e.success=!0;const a=s.meta.arg,n=e.scenes.find(t=>t.id===a),o=n==null?void 0:n.universe_id;e.scenes=e.scenes.filter(t=>t.id!==a),o&&e.universeScenes[o]&&(e.universeScenes[o]=e.universeScenes[o].filter(t=>t.id!==a)),e.currentScene&&e.currentScene.id===a&&(e.currentScene=null)}).addCase(X.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to delete scene",e.success=!1}).addCase(Q.pending,e=>{e.loading=!0,e.error=null}).addCase(Q.fulfilled,(e,s)=>{e.loading=!1;const{universeId:a}=s.meta.arg,n=s.payload.scenes;if(e.universeScenes[a]=n,e.scenes=e.scenes.map(o=>o.universe_id===a&&n.find(y=>y.id===o.id)||o),e.currentScene&&e.currentScene.universe_id===a){const o=n.find(t=>t.id===e.currentScene.id);o&&(e.currentScene=o)}}).addCase(Q.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to reorder scenes"})}}),Ge=ke.reducer,A=r=>{var e,s,a,n;return console.error("API Error:",r),{message:((s=(e=r.response)==null?void 0:e.data)==null?void 0:s.message)||r.message||"An error occurred",status:(a=r.response)==null?void 0:a.status,data:(n=r.response)==null?void 0:n.data}},E=r=>r?{...r,created_at:r.created_at?r.created_at.toString():null,updated_at:r.updated_at?r.updated_at.toString():null}:null,N=r=>!r||!Array.isArray(r)?[]:r.map(E),J=i("universe/fetchUniverses",async(r={},{rejectWithValue:e})=>{var s;try{console.log("Fetching universes with params:",r);const a=await u.getUniverses();console.log("Got universes response:",a);let n=[];return a&&a.data&&Array.isArray(a.data.universes)?n=N(a.data.universes):a&&Array.isArray(a.universes)?n=N(a.universes):a&&typeof a=="object"&&a.status==="success"?n=N(((s=a.data)==null?void 0:s.universes)||[]):Array.isArray(a)?n=N(a):(console.error("Unexpected universes response format:",a),n=[]),{...a,universes:n}}catch(a){return console.error("Error fetching universes:",a),e(A(a))}}),Z=i("universe/fetchUniverseById",async({id:r,includeScenes:e=!1},{rejectWithValue:s})=>{try{console.log(`Fetching universe ${r} with includeScenes=${e}`);const a=await u.getUniverse(r);return console.log("Got universe response:",a),a&&a.data&&a.data.universe?a.data.universe=E(a.data.universe):a&&a.universe&&(a.universe=E(a.universe)),a.data||a}catch(a){return console.error(`Error fetching universe ${r}:`,a),s(A(a))}}),ee=i("universe/createUniverse",async(r,{rejectWithValue:e})=>{try{console.log("Creating universe with data:",r);const s=await u.createUniverse(r);if(console.log("Created universe response:",s),s&&s.data&&s.data.universe)s.data.universe=E(s.data.universe);else if(s&&s.universe)s.universe=E(s.universe);else if(s&&s.id)return E(s);return s.data||s}catch(s){return console.error("Error creating universe:",s),e(A(s))}}),re=i("universe/updateUniverse",async({id:r,...e},{rejectWithValue:s})=>{try{console.log(`Updating universe ${r} with data:`,e);const a=await u.updateUniverse(r,e);if(console.log("Updated universe response:",a),a&&a.data&&a.data.universe)a.data.universe=E(a.data.universe);else if(a&&a.universe)a.universe=E(a.universe);else if(a&&a.id)return E(a);return a.data||a}catch(a){return console.error(`Error updating universe ${r}:`,a),s(A(a))}}),se=i("universe/deleteUniverse",async(r,{rejectWithValue:e})=>{try{return console.log(`Deleting universe ${r}`),await u.deleteUniverse(r),console.log(`Universe ${r} deleted successfully`),r}catch(s){return console.error(`Error deleting universe ${r}:`,s),e(A(s))}});i("universe/fetchScenesForUniverse",async(r,{rejectWithValue:e})=>{try{console.log(`Fetching scenes for universe ${r}`);const s=await u.getScenes(r);return console.log("Got scenes response:",s),s.data||s}catch(s){return console.error(`Error fetching scenes for universe ${r}:`,s),e(A(s))}});const ae=i("universe/updatePhysicsParams",async({universeId:r,physicsParams:e},{rejectWithValue:s})=>{try{console.log(`Updating physics params for universe ${r}:`,e);const a=await u.updateUniverse(r,{physics_params:e});if(console.log("Updated physics params response:",a),a&&a.data&&a.data.universe)a.data.universe=E(a.data.universe);else if(a&&a.universe)a.universe=E(a.universe);else if(a&&a.id)return E(a);return a.data||a}catch(a){return console.error(`Error updating physics params for universe ${r}:`,a),s(A(a))}}),ne=i("universe/updateHarmonyParams",async({universeId:r,harmonyParams:e},{rejectWithValue:s})=>{try{console.log(`Updating harmony params for universe ${r}:`,e);const a=await u.updateUniverse(r,{harmony_params:e});if(console.log("Updated harmony params response:",a),a&&a.data&&a.data.universe)a.data.universe=E(a.data.universe);else if(a&&a.universe)a.universe=E(a.universe);else if(a&&a.id)return E(a);return a.data||a}catch(a){return console.error(`Error updating harmony params for universe ${r}:`,a),s(A(a))}}),oe={universes:[],loading:!1,error:null,currentUniverse:null,lastFetched:null,authError:!1,sortBy:"updated_at",sortOrder:"desc",success:!1},We=I({name:"universe",initialState:oe,reducers:{setCurrentUniverse:(r,e)=>{if(r.currentUniverse=e.payload,r.universes.length>0){const s=r.universes.findIndex(a=>a.id===e.payload.id);s!==-1&&(r.universes[s]=e.payload)}},clearError:r=>{r.error=null,r.authError=!1},resetState:()=>oe,clearAuthError:r=>{r.authError=!1},setSortBy:(r,e)=>{r.sortBy=e.payload},setSortOrder:(r,e)=>{r.sortOrder=e.payload},sortUniverses:r=>{const e=r.sortBy,s=r.sortOrder;r.universes.sort((a,n)=>{let o=0;switch(e){case"name":o=a.name.localeCompare(n.name);break;case"created_at":o=new Date(a.created_at)-new Date(n.created_at);break;case"updated_at":o=new Date(a.updated_at)-new Date(n.updated_at);break;case"is_public":o=a.is_public===n.is_public?0:a.is_public?-1:1;break;default:o=0}return s==="desc"?-o:o})},clearUniverseError(r){r.error=null},clearUniverseSuccess(r){r.success=!1},resetUniverseState(r){return oe}},extraReducers:r=>{r.addCase(J.pending,e=>{console.debug("Fetching universes..."),e.loading=!0,e.error=null,e.authError=!1}).addCase(J.fulfilled,(e,s)=>{var a;console.debug("Universes fetched successfully:",s.payload),e.loading=!1,s.payload&&s.payload.data&&Array.isArray(s.payload.data.universes)?e.universes=s.payload.data.universes:s.payload&&Array.isArray(s.payload.universes)?e.universes=s.payload.universes:s.payload&&typeof s.payload=="object"&&s.payload.status==="success"?e.universes=((a=s.payload.data)==null?void 0:a.universes)||[]:Array.isArray(s.payload)?e.universes=s.payload:(console.error("Unexpected universes response format:",s.payload),e.universes=[]),e.lastFetched=Date.now(),e.error=null,e.authError=!1}).addCase(J.rejected,(e,s)=>{var a,n;console.error("Failed to fetch universes:",s.payload),e.loading=!1,e.error=s.payload||"Failed to fetch universes",e.authError=((a=s.payload)==null?void 0:a.status)===401||((n=s.payload)==null?void 0:n.status)===403,e.authError&&(e.universes=[])}).addCase(Z.pending,e=>{e.loading=!0,e.error=null}).addCase(Z.fulfilled,(e,s)=>{var a;e.loading=!1,e.currentUniverse=(a=s.payload)==null?void 0:a.universe}).addCase(Z.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to fetch universe"}).addCase(ee.pending,e=>{e.loading=!0,e.error=null,e.success=!1}).addCase(ee.fulfilled,(e,s)=>{console.debug("Universe created:",s.payload),e.loading=!1,e.success=!0;let a;s.payload&&typeof s.payload=="object"?s.payload.status==="success"&&s.payload.data&&s.payload.data.universe?a=s.payload.data.universe:s.payload.universe&&typeof s.payload.universe=="object"?a=s.payload.universe:s.payload.data&&s.payload.data.universe?a=s.payload.data.universe:s.payload.id?a=s.payload:(console.error("Unexpected response format in createUniverse.fulfilled:",s.payload),a=null):(console.error("Invalid payload in createUniverse.fulfilled:",s.payload),a=null),a?(e.universes=[...e.universes||[],a],e.currentUniverse=a,console.debug("New universe added to store:",a)):console.error("Failed to extract universe data from response:",s.payload),e.error=null,e.authError=!1}).addCase(ee.rejected,(e,s)=>{console.error("Failed to create universe:",s.payload),e.loading=!1,e.error=s.payload||"Failed to create universe",e.success=!1}).addCase(re.pending,e=>{e.loading=!0,e.error=null,e.success=!1}).addCase(re.fulfilled,(e,s)=>{var n,o;console.debug("Universe updated:",s.payload),e.loading=!1,e.success=!0;const a=(n=s.payload)==null?void 0:n.universe;a?(e.universes=e.universes.map(t=>t.id===a.id?a:t),((o=e.currentUniverse)==null?void 0:o.id)===a.id&&(e.currentUniverse=a)):console.error("Missing universe data in update response:",s.payload),e.error=null,e.authError=!1}).addCase(re.rejected,(e,s)=>{console.error("Failed to update universe:",s.payload),e.loading=!1,e.error=s.payload||"Failed to update universe",e.success=!1}).addCase(se.pending,e=>{e.loading=!0,e.error=null,e.success=!1}).addCase(se.fulfilled,(e,s)=>{var n;console.debug("Universe deleted successfully:",s.meta.arg),e.loading=!1,e.success=!0;const a=s.meta.arg;e.universes=e.universes.filter(o=>o.id!==a),((n=e.currentUniverse)==null?void 0:n.id)===a&&(e.currentUniverse=null),e.error=null,e.authError=!1}).addCase(se.rejected,(e,s)=>{console.error("Failed to delete universe:",s.payload),e.loading=!1,e.error=s.payload||"Failed to delete universe",e.success=!1}).addCase(ae.pending,e=>{e.loading=!0,e.error=null}).addCase(ae.fulfilled,(e,s)=>{var n;if(e.loading=!1,e.error=null,!s.payload||!s.payload.physics_params){console.error("Invalid payload received:",s.payload);return}const a=s.payload;((n=e.currentUniverse)==null?void 0:n.id)===a.id&&(e.currentUniverse=a),e.universes=e.universes.map(o=>o.id===a.id?a:o),console.debug("Physics params updated in store:",{id:a.id,params:a.physics_params})}).addCase(ae.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to update physics parameters",console.error("Physics update failed:",s.payload)}).addCase(ne.pending,e=>{e.loading=!0,e.error=null}).addCase(ne.fulfilled,(e,s)=>{var n;if(e.loading=!1,e.error=null,!s.payload||!s.payload.harmony_params){console.error("Invalid payload received:",s.payload);return}const a=s.payload;((n=e.currentUniverse)==null?void 0:n.id)===a.id&&(e.currentUniverse=a),e.universes=e.universes.map(o=>o.id===a.id?a:o),console.debug("Harmony params updated in store:",{id:a.id,params:a.harmony_params})}).addCase(ne.rejected,(e,s)=>{e.loading=!1,e.error=s.payload||"Failed to update harmony parameters",console.error("Harmony update failed:",s.payload)})}}),Ye=We.reducer,qe=Re({reducer:{auth:we,modal:Me,universe:Ye,scenes:Ge,physicsParameters:Ke,physicsObjects:He}}),le=()=>c.jsxs("div",{style:{padding:"2rem",margin:"2rem auto",maxWidth:"600px",textAlign:"center",backgroundColor:"#f8f9fa",borderRadius:"8px",boxShadow:"0 2px 10px rgba(0,0,0,0.1)"},children:[c.jsx("h1",{children:"Something went wrong"}),c.jsx("p",{children:"We're having trouble loading the application. Please try again later."})]}),ze=()=>{try{return c.jsx(Router,{children:c.jsxs("div",{className:"App",children:[c.jsx("header",{className:"App-header",children:c.jsx("h1",{children:"Harmonic Universe"})}),c.jsx("main",{children:c.jsx(Pe,{children:c.jsx(Ue,{path:"/",element:c.jsx("div",{children:"Welcome to Harmonic Universe"})})})}),c.jsx("footer",{className:"App-footer",children:c.jsxs("p",{children:["© ",new Date().getFullYear()," Harmonic Universe"]})})]})})}catch(r){return console.error("Error rendering app content:",r),c.jsx(le,{})}};function Se(){const[r,e]=ce.useState(!1);if(ce.useEffect(()=>(console.log("App component mounted successfully"),()=>{console.log("App component unmounted")}),[]),r)return c.jsx(le,{});try{return c.jsx(Ie,{store:qe,children:c.jsx(ze,{})})}catch(s){return console.error("Error in App component:",s),e(!0),c.jsx(le,{})}}try{["./styles/index.css","./styles/main.css","./styles/global.css","./styles/app.css","./styles.css","./index.css"].forEach(e=>{try{require(e)}catch{}})}catch(r){console.warn("Could not import CSS files:",r)}document.addEventListener("DOMContentLoaded",()=>{console.log("Initializing Harmonic Universe application...");const r=document.getElementById("root");r?(he.createRoot(r).render(c.jsx(ve.StrictMode,{children:c.jsx(Se,{})})),console.log("Application mounted successfully")):console.error("Root element not found. Application cannot start.")});const Ee=document.getElementById("root");Ee&&he.createRoot(Ee).render(c.jsx(ve.StrictMode,{children:c.jsx(Se,{})}));
//# sourceMappingURL=main-C4IGh7zA.js.map
