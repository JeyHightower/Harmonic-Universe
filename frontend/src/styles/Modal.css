/* EMERGENCY FIX - Add these styles at the top to ensure they take precedence */
/* These styles will forcibly make modals and form elements interactive */

.modal-overlay,
[role='dialog'],
.ant-modal-root,
.ant-modal,
.modal-content,
.modal-body,
.modal-footer,
.modal-backdrop {
  pointer-events: auto !important;
}

.modal-content {
  z-index: 9999 !important;
  position: relative !important;
}

/* Form elements inside modals need special treatment */
.modal-content input,
.modal-content textarea,
.modal-content select,
.modal-content button,
.modal-body input,
.modal-body textarea,
.modal-body select,
.modal-body button,
.modal-footer button,
input,
textarea,
select,
button,
[role='button'],
.form-control,
.btn,
.button,
.ant-input,
.ant-select,
.ant-btn {
  pointer-events: auto !important;
  z-index: 10000 !important;
  position: relative !important;
  touch-action: auto !important;
  cursor: auto !important;
}

/* Special styling for buttons to ensure they're clickable */
button,
[role='button'],
.btn,
.button,
input[type='button'],
input[type='submit'],
input[type='reset'] {
  cursor: pointer !important;
}

/* Special styling for text inputs */
input[type='text'],
input[type='email'],
input[type='password'],
input[type='search'],
input[type='number'],
textarea {
  cursor: text !important;
}

/* Aggressive fix for logout and action buttons */
.logout-button,
.login-button,
.signup-button,
.auth-button,
[data-action='logout'] {
  pointer-events: auto !important;
  z-index: 100000 !important;
  position: relative !important;
  cursor: pointer !important;
}

/* End of emergency fixes */

/* Consolidated Modal Styles
   This file replaces all other modal-related CSS to avoid conflicts */

/* ===== Modal Base ===== */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1050;
  opacity: 1;
  transition: opacity 0.3s ease;
  pointer-events: auto !important;
}

.modal-overlay.closing {
  opacity: 0;
  pointer-events: auto !important;
}

.modal-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: auto !important;
}

.modal-wrapper {
  position: relative;
  z-index: calc(var(--z-index-modal, 1000) + 1);
  pointer-events: auto !important;
  max-width: 90vw;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
}

.modal-container {
  overflow-y: auto;
  pointer-events: auto !important;
  display: flex;
  flex-direction: column;
  max-height: 90vh;
}

.modal-content {
  position: relative;
  background-color: var(--surface, var(--bg-primary, white));
  border-radius: var(--border-radius-lg, 8px);
  box-shadow: var(--shadow-lg, 0 10px 15px rgba(0, 0, 0, 0.1));
  overflow: hidden;
  animation: modalZoomIn 300ms ease-in-out;
  pointer-events: auto !important;
  min-width: 300px;
  /* Ensure this creates a stacking context */
  isolation: isolate;
  z-index: 1051 !important;
}

.modal-content:focus {
  outline: none;
}

/* ===== Modal Header ===== */
.modal-header {
  padding: var(--spacing-md, 1rem);
  border-bottom: 1px solid var(--border-color, #e2e8f0);
  display: flex;
  align-items: center;
  justify-content: space-between;
  pointer-events: auto !important;
  position: relative;
  z-index: 1;
}

.modal-title {
  margin: 0;
  font-size: var(--font-size-lg, 1.25rem);
  font-weight: 600;
  color: var(--text-primary, #1a1a2e);
  pointer-events: auto !important;
}

.modal-close-button {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--text-secondary, #666);
  padding: 0.5rem;
  line-height: 1;
  pointer-events: auto !important;
  z-index: 10;
  position: relative;
}

.modal-close-button:hover {
  color: var(--text-primary, #333);
}

.modal-close-button:focus {
  outline: none;
}

/* ===== Modal Body ===== */
.modal-body {
  padding: var(--spacing-md, 1rem);
  overflow-y: auto;
  pointer-events: auto !important;
  max-height: 75vh;
  position: relative;
  z-index: 2;
}

.modal-body.centered {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
}

/* Updated styles for SceneForm in modal */
.scene-form-container {
  padding: 8px 0;
  overflow-y: auto;
  max-height: 75vh;
  pointer-events: auto !important;
}

.modal-body .scene-form-container {
  max-height: 100%;
}

/* ===== Modal Footer ===== */
.modal-footer {
  padding: var(--spacing-md, 1rem);
  border-top: 1px solid var(--border-color, #e2e8f0);
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-sm, 0.5rem);
  pointer-events: auto !important;
  position: relative;
  z-index: 3;
}

/* ===== Modal Sizes ===== */
.modal-small {
  width: 400px;
}

.modal-medium {
  width: 600px;
}

.modal-large {
  width: 800px;
}

.modal-full {
  width: 100%;
  height: 100%;
  max-width: none;
  max-height: none;
  border-radius: 0;
}

/* ===== Modal Types ===== */
.modal-default {
  border-top: 4px solid var(--primary-color, #4361ee);
}

.modal-alert {
  border-top: 4px solid var(--warning-color, #f59e0b);
}

.modal-confirm {
  border-top: 4px solid var(--success-color, #10b981);
}

.modal-error {
  border-top: 4px solid var(--danger-color, #ef4444);
}

/* ===== Modal Actions ===== */
.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spacing-sm, 0.5rem);
  margin-top: var(--spacing-md, 1rem);
  pointer-events: auto !important;
  position: relative;
  z-index: 3;
}

/* Make sure all modal buttons are clickable */
.modal-actions button,
.modal-footer button,
.modal button,
.modal-content button,
.modal-body button,
button.logout-button,
button.login-button,
button.signup-button,
button.auth-button,
.logout-button,
.login-button,
.signup-button,
.auth-button,
[data-action='logout'] {
  pointer-events: auto !important;
  position: relative;
  z-index: 5 !important;
  cursor: pointer !important;
  touch-action: auto !important;
}

/* ===== Modal Content Types ===== */
/* Alert Modal */
.alert-modal-content {
  padding: var(--spacing-lg, 1.5rem);
  pointer-events: auto !important;
}

.alert-modal-content p {
  margin-bottom: var(--spacing-lg, 1.5rem);
  color: var(--text-primary);
  font-size: var(--font-size-md);
  line-height: 1.6;
  text-align: center;
}

/* Confirm Modal */
.confirm-modal-content {
  padding: var(--spacing-lg, 1.5rem);
  pointer-events: auto !important;
}

.confirm-modal-content p {
  margin-bottom: var(--spacing-lg, 1.5rem);
  color: var(--text-primary);
  font-size: var(--font-size-md);
  line-height: 1.6;
}

/* Form Modal */
.form-modal-content {
  padding: var(--spacing-lg, 1.5rem);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md, 1rem);
  pointer-events: auto !important;
}

/* ===== Draggable Modal ===== */
.draggable-modal .modal-header {
  cursor: move;
  user-select: none;
}

.modal-content.dragging {
  opacity: 0.9;
  box-shadow: var(--shadow-xl, 0 20px 25px rgba(0, 0, 0, 0.15));
}

/* Form elements inside modals */
.modal-body input,
.modal-body textarea,
.modal-body select,
.modal-content input,
.modal-content textarea,
.modal-content select,
.modal-content form input,
.modal-content form textarea,
.modal-content form select,
form.modal-form input,
form.modal-form textarea,
form.modal-form select {
  pointer-events: auto !important;
  position: relative;
  z-index: 4 !important;
  touch-action: auto !important;
}

/* Create a higher specificity rule for forms inside modals */
.modal-content form,
.modal-body form,
form.modal-form {
  pointer-events: auto !important;
  position: relative;
  z-index: 3;
}

/* Make buttons in forms explicitly clickable */
form button,
.form-control button,
.input-group button,
.modal form button,
.modal-content form button,
.modal-form button {
  pointer-events: auto !important;
  cursor: pointer !important;
  position: relative;
  z-index: 5 !important;
}

/* Specific targeting for auth buttons */
.auth-button,
.logout-button,
.login-button,
.signup-button,
[data-action='logout'] {
  pointer-events: auto !important;
  cursor: pointer !important;
  position: relative;
  z-index: 1000 !important; /* Very high z-index to ensure it's on top */
}

/* Extra fix for form inputs to ensure they're interactive */
input[type='text'],
input[type='email'],
input[type='password'],
input[type='number'],
input[type='search'],
textarea,
select {
  pointer-events: auto !important;
  touch-action: auto !important;
  cursor: text !important;
  position: relative;
  z-index: 5 !important;
}

/* Extra fix for buttons to ensure they're interactive */
button,
[role='button'],
.btn,
.button,
input[type='button'],
input[type='submit'] {
  pointer-events: auto !important;
  touch-action: auto !important;
  cursor: pointer !important;
  position: relative;
  z-index: 5 !important;
}

/* Portal root adjustments for better event handling */
#portal-root {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1050;
  pointer-events: none !important; /* Allow clicks to pass through to content */
  isolation: isolate; /* Create a new stacking context */
  overflow: hidden;
}

/* Direct children of portal root should capture pointer events */
#portal-root > div,
#portal-root > .portal-container,
#portal-root > .modal-portal {
  pointer-events: auto !important; /* Direct children capture events */
  position: relative;
  z-index: 1;
}

/* Special class for interactive components inside modals */
.modal-interactive {
  pointer-events: auto !important;
  touch-action: auto !important;
}

/* ===== Modal Animations ===== */
@keyframes modalZoomIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* ===== Mobile Adjustments ===== */
@media (max-width: 600px) {
  .modal-small,
  .modal-medium,
  .modal-large {
    width: 95%;
  }
}

/* Ensure modal actions have pointer events */
.modal-actions {
  pointer-events: auto !important;
}

/* Ensure all buttons in modals are clickable */
.modal-actions button {
  pointer-events: auto !important;
  position: relative;
  z-index: 2;
}

/* Ensuring modal positioning works correctly */
.modal-center {
  align-items: center;
  justify-content: center;
}

.modal-top {
  align-items: flex-start;
  justify-content: center;
}

.modal-bottom {
  align-items: flex-end;
  justify-content: center;
}

/* Additional animations - ensure they don't interfere with pointer events */
@keyframes modalFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes modalFadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes modalSlideOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Ensure ARIA roles don't interfere with pointer events */
.modal-content[role='dialog'] {
  pointer-events: auto !important;
  position: relative;
  z-index: 1051;
}

/* Body styles for when modal is open - don't block interactions */
body.modal-open {
  overflow: hidden;
  padding-right: var(--scrollbar-width, 0);
  pointer-events: auto !important;
}

/* Dark mode adjustments - maintain pointer events */
@media (prefers-color-scheme: dark) {
  .modal-overlay {
    background-color: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(6px);
  }

  .modal-content {
    background-color: var(--surface-dark, var(--bg-primary-dark, #1f2937));
    box-shadow: var(--shadow-lg-dark, 0 10px 25px rgba(0, 0, 0, 0.3));
  }

  .modal-header {
    border-bottom-color: var(--border-color-dark, #374151);
  }

  .modal-footer {
    border-top-color: var(--border-color-dark, #374151);
  }

  .modal-title {
    color: var(--text-primary-dark, #f3f4f6);
  }

  .modal-close-button {
    color: var(--text-secondary-dark, #9ca3af);
  }

  .modal-close-button:hover {
    color: var(--text-primary-dark, #f3f4f6);
  }
}

/* Loading indicator - ensure interaction is possible with loading content */
.modal-loading {
  display: inline-block;
  width: 40px;
  height: 40px;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top-color: var(--primary-color, #3498db);
  animation: spin 1s ease-in-out infinite;
}

.modal-loading::after {
  content: '';
  display: block;
  width: 40px;
  height: 40px;
  border: 4px solid transparent;
  border-radius: 50%;
  border-top-color: rgba(52, 152, 219, 0.2);
  animation: spin 2s linear infinite;
  position: absolute;
  top: -4px;
  left: -4px;
}

/* Make sure labels are clickable for checkboxes and radios */
.modal-body label,
.modal-body .form-label,
.modal-body .checkbox-label,
.modal-body .radio-label {
  pointer-events: auto !important;
  position: relative;
  z-index: 1;
}

/* Add a specific class for dashboards and other interactive components */
.interactive-component {
  pointer-events: auto !important;
}

/* Dashboard-specific overrides */
.dashboard-container button,
.dashboard-actions button,
.universe-card-button,
.universe-card-actions button {
  pointer-events: auto !important;
  position: relative;
  z-index: 5;
}

/* Fixes for dialog content and actions */
.MuiDialogContent-root,
.MuiDialogActions-root,
.ant-modal-body,
.ant-modal-footer {
  pointer-events: auto !important;
  position: relative !important;
  z-index: 10 !important;
}

/* Make sure that input labels are clickable */
label {
  pointer-events: auto !important;
  position: relative !important;
  z-index: 100 !important;
}

/* Make sure that the checkbox group inside universe form is clickable */
.checkbox-group {
  pointer-events: auto !important;
  z-index: 100 !important;
  position: relative !important;
}

/* Make sure dialog close buttons are always clickable */
.MuiDialogTitle-root .MuiIconButton-root,
.ant-modal-close,
.modal-close-button {
  pointer-events: auto !important;
  z-index: 10001 !important;
  position: relative !important;
  cursor: pointer !important;
}

/* Add !important to all existing pointer-events styles to ensure they override any other styles */
