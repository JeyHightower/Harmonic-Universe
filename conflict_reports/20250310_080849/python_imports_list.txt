import logging
import os
from database import get_db
from fastapi import APIRouter, Depends, HTTPException, status, UploadFile, File, Form
from middleware.auth import get_current_user
from models.audio_file import AudioFile
from models.user import User
from pathlib import Path
from schemas.audio_file import AudioFileCreate, AudioFileResponse, AudioFileUpdate
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List, Optional
from uuid import UUID
import os
import shutil
from database import get_db
from fastapi import APIRouter, Depends, HTTPException, status
from middleware.auth import get_current_user
from models.physics_parameter import PhysicsParameter
from models.user import User
from schemas.physics_parameter import PhysicsParameterCreate, PhysicsParameterResponse, PhysicsParameterUpdate
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List
from uuid import UUID
from database import get_db
from fastapi import APIRouter, Depends, HTTPException, status
from middleware.auth import get_current_user
from models.audio_track import AudioTrack
from models.user import User
from schemas.audio_track import AudioTrackCreate, AudioTrackResponse, AudioTrackUpdate
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List
from uuid import UUID
from fastapi import APIRouter, Depends, HTTPException, status
from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm
from fastapi import APIRouter
from fastapi import APIRouter
from database import get_db
from fastapi import APIRouter, Depends, HTTPException, status
from middleware.auth import get_current_user
from models.midi_sequence import MidiSequence
from models.user import User
from schemas.midi_sequence import MidiSequenceCreate, MidiSequenceResponse, MidiSequenceUpdate
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List
from uuid import UUID
from database import get_db
from fastapi import APIRouter, Depends, HTTPException, status
from middleware.auth import get_current_user
from models.user import User
from models.visualization import Visualization
from schemas.visualization import VisualizationCreate, VisualizationResponse, VisualizationUpdate
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List
from uuid import UUID
from database import get_db
from fastapi import APIRouter, Depends, HTTPException, status
from middleware.auth import get_current_user
from models.ai_model import AiModel
from models.user import User
from schemas.ai_model import AiModelCreate, AiModelResponse, AiModelUpdate
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List
from uuid import UUID
from fastapi import APIRouter
from flask import Blueprint, request, jsonify, current_app
from functools import wraps
from models import User, db
from werkzeug.security import generate_password_hash, check_password_hash
import datetime
import jwt
import os
import uuid
from flask import jsonify
from flask_swagger_ui import get_swaggerui_blueprint
from sqlalchemy.exc import SQLAlchemyError
import logging
import os
import sys
import logging
import os
import sys
from alembic import op
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
import uuid
import importlib
import logging
import os
import sqlite3
import sys
import logging
import os
import sys
from flask import Flask
import logging
import os
import socket
import sys
import logging
import os
import sys
import traceback
from alembic import command
from alembic.config import Config
from flask_migrate import current
from sqlalchemy import create_engine, text
import logging
import os
import sys
from dotenv import load_dotenv
import os
from email.mime.text import MIMEText
import os
import requests
import smtplib
import time
from http.server import HTTPServer, BaseHTTPRequestHandler
import logging
import os
from app.auth import get_current_user
from app.database import get_db
from app.models import Universe
from app.schemas import UniverseCreate, UniverseResponse
from fastapi import APIRouter, Depends, HTTPException, status
from sqlalchemy.orm import Session
from typing import List
from app import db
from app.models import User
from flask import Blueprint, request, jsonify, current_app
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import datetime
import jwt
import os
import uuid
from app import db
from datetime import datetime
from sqlalchemy.sql import func
from werkzeug.security import generate_password_hash, check_password_hash
import uuid
from dotenv import load_dotenv
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
import os
from app import routes
from flask import Flask, send_from_directory, jsonify, current_app, redirect, url_for, request, Response
from flask_cors import CORS
from flask_migrate import Migrate
import logging
import os
import sys
from app.core.database import Base
from sqlalchemy import Column, String, Boolean, DateTime
from sqlalchemy.sql import func
import uuid
from app.core.database import Base
from sqlalchemy import Column, String, Boolean, DateTime, JSON, ForeignKey
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func
import uuid
from pydantic import BaseModel, EmailStr
from typing import Optional
from datetime import datetime
from pydantic import BaseModel
from typing import Optional, Dict, Any
from datetime import datetime
from pydantic import BaseModel
from typing import Optional, Dict, Any
from app.models.physics.parameters import PhysicsParameters
from app.models.physics.parameters import PhysicsParameters  # noqa
from app.core.config import settings
from app.core.database import get_db
from app.core.security import create_access_token
from app.models.user import User
from app.schemas.auth import Token, UserCreate, User as UserSchema
from datetime import timedelta
from fastapi import APIRouter, Depends, HTTPException, status
from fastapi.security import OAuth2PasswordRequestForm
from sqlalchemy.orm import Session
from typing import Any
import bcrypt
from app.core.database import get_db
from app.core.security import get_current_user
from app.models.universe import Universe
from app.schemas.universe import Universe as UniverseSchema, UniverseCreate, UniverseUpdate
from fastapi import APIRouter, Depends, HTTPException, status
from sqlalchemy.orm import Session
from typing import Any, List
from app.api.endpoints import auth, universes, scenes, physics_parameters, audio
from fastapi import APIRouter
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import os
from app.models.physics.parameters import PhysicsParameters
from datetime import datetime
from flask import Blueprint, jsonify, current_app, send_from_directory, abort, make_response
import logging
import os
import platform
import psycopg2
import sys
import logging
import os
import sys
from datetime import datetime
import logging
import os
import coverage
import os
import sys
import unittest
import importlib.util
import logging
import os
import sys
from pathlib import Path
import logging
import os
import shutil
import sys
from datetime import datetime
from pprint import pprint
import argparse
import json
import os
import requests
import sys
import time
import uuid
from pathlib import Path
import importlib.util
import json
import logging
import os
import subprocess
import sys
from auth import token_required
from datetime import datetime
from flask import Blueprint, request, jsonify, current_app
from models import Scene, Universe, db
from sqlalchemy.exc import SQLAlchemyError
import app
import json
import os
import sys
from app import create_app
from http.server import HTTPServer, BaseHTTPRequestHandler
from urllib.parse import urlparse, parse_qs
import logging
import os
import socket
import sys
import time
from alembic import op
from datetime import datetime
import json
import logging
import os
import re
import socket
import sqlalchemy as sa
import sys
import threading
import time
import urllib.parse
from app import create_app
import os
import sys
from datetime import datetime
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import logging
import os
import psycopg2
import sys
import time
import logging
import os
import sys
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
import os
from alembic import command
from alembic.config import Config
from sqlalchemy import inspect, create_engine, text
import logging
import os
import sys
import logging
import os
import sys
import os
import sys
import traceback
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import importlib
import logging
import os
import psycopg2
import sys
import os
import subprocess
import sys
from collections import defaultdict
import argparse
import concurrent.futures
import matplotlib.pyplot as plt
import numpy as np
import random
import requests
import time
from datetime import datetime
import json
import logging
import os
import platform
import requests
import subprocess
import sys
from app import create_app
import pytest
from app import create_app
import json
import os
import sys
import unittest
import glob
import logging
import os
import re
import sys
from flask import request, jsonify
from functools import wraps
import jwt
from flask import Flask, jsonify
import logging
import os
import sys
import importlib
import os
import subprocess
import sys
from datetime import datetime
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import argparse
import logging
import os
import psycopg2
import sys
import time
from app.db.session import get_db
from app.models.user import User
from werkzeug.security import generate_password_hash
from port import get_port
import logging
import os
from alembic import context
from backend.app.core.config import settings
from backend.app.db.base import Base
from flask import current_app
from logging.config import fileConfig
import logging
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op
from sqlalchemy import inspect
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa
from alembic import op
import sqlalchemy as sa
from backend.app import create_app
from contextlib import closing
import os
import socket
import sys
from backend.app.celery import celery
from backend.app.db.session import get_db
from backend.app.models.audio import AudioFile
from backend.app.models.core.universe import Universe
from datetime import datetime, timedelta
import logging
import os
from .audio import process_audio_file, generate_audio_track
from backend.app.celery import celery
from backend.app.db.session import get_db
from backend.app.models.audio import AudioFile, AudioTrack
from backend.app.models.core.universe import Universe
from typing import Optional, Dict, Any
import librosa
import logging
import numpy as np
import os
import soundfile as sf
from .demo_protection import protect_demo_user
from flask import request, Response, current_app
import logging
import os
from backend.app.core.errors import AuthorizationError
from backend.app.db.session import get_db
from backend.app.models.user import User
from flask import jsonify
from flask_jwt_extended import get_jwt_identity
from functools import wraps
from ..core.errors import NotFoundError, AuthorizationError, WebSocketError
from ..models.universe.universe import Universe
from ..models.user import User
from backend.app import socketio
from dataclasses import dataclass, asdict
from datetime import datetime
from flask_jwt_extended import jwt_required, get_jwt_identity
from flask_socketio import emit, join_room, leave_room
from typing import Dict, List, Optional, Set, Any
import json
import logging
from .handler import init_socketio
from backend.app.core.audio.processor import AudioProcessor
from backend.app.models.visualization import Timeline, Keyframe, Animation
from datetime import datetime
from typing import Dict, Any, List, Optional, Callable
import asyncio
import bisect
from backend.app.models.visualization import RenderingMode, SceneObjectType
from flask_socketio import emit
from pathlib import Path
from typing import Dict, Any, Optional, List
import asyncio
import json
import numpy as np
from PIL import Image
from backend.app.core.visualization.renderer import Renderer
from backend.app.core.visualization.timeline import TimelineManager
from backend.app.models.visualization import Export
from datetime import datetime
from pathlib import Path
from typing import Dict, Any, Optional, List
import asyncio
import base64
import ffmpeg
import io
import json
import numpy as np
from .errors import AuthenticationError, AuthorizationError
from backend.app.db.session import get_db
from backend.app.models.user import User
from flask import current_app, g
from flask_jwt_extended import get_jwt_identity, verify_jwt_in_request
from functools import wraps
from typing import Optional
import os
from datetime import datetime
from typing import Dict, Any
import logging
import logging.config
import os
import structlog
from .error_handling import error_handler, ErrorCategory, ErrorSeverity
from .logging import get_logger
from dataclasses import dataclass
from datetime import datetime, timedelta
from functools import wraps
from redis import Redis
from typing import Dict, Any, Optional, Tuple
import threading
import time
from datetime import timedelta
from typing import Optional, List
import os
from .settings import Config, config, settings
from datetime import timedelta
from pathlib import Path
from pydantic import AnyHttpUrl, validator, Field
from pydantic_settings import BaseSettings
from typing import Optional, List, Union
import os
from .settings import Settings
from pathlib import Path
from .logging import get_logger
from contextlib import contextmanager
from dataclasses import dataclass, asdict
from datetime import datetime, timedelta
from typing import Dict, Any, Optional, List
import json
import os
import psutil
import threading
import time
from .pwd_context import verify_password, get_password_hash
from datetime import datetime, timedelta
from flask_jwt_extended import create_access_token as jwt_create_access_token
from flask_jwt_extended import create_refresh_token as jwt_create_refresh_token
from flask_jwt_extended import decode_token
from typing import Optional, Union
from .auth import get_current_user, get_current_active_user
from .config import Config, config
from .error_handling import (
from .errors import (
from .logging import configure_logging, get_logger
from .monitoring import (
from .rate_limiting import (
from .security import create_access_token, verify_access_token
from .logging import get_logger
from dataclasses import dataclass, asdict
from datetime import datetime
from enum import Enum
from typing import Dict, Any, Optional, Type
import json
import os
import traceback
from backend.app.models.midi_event import MIDIEventType, MIDIEvent
from backend.app.schemas.midi_event import MIDIEventCreate
from pathlib import Path
from typing import Dict, Any, List, Optional, Tuple
import midiutil
import numpy as np
import pretty_midi
from backend.app.core.config import settings
from backend.app.models.audio.audio_format import AudioFormat
import os
from scipy import signal
from typing import Dict, Any, List, Optional
import numpy as np
import pretty_midi
import sounddevice as sd
from backend.app.models.ai_model import AIModel
from typing import Dict, Any
import openai
from backend.app.models.ai_model import AIModel
from typing import Dict, Any
import openai
from .music_generation import generate_music
from .parameter_generation import generate_parameters
from .process import process_generation
from .visualization_generation import generate_visualization
from .music_generation import generate_music
from .parameter_generation import generate_parameters
from .visualization_generation import generate_visualization
from backend.app import crud, schemas
from backend.app.models.ai_generation import GenerationStatus
from backend.app.models.ai_model import AIModelType
from sqlalchemy.orm import Session
from typing import Optional
from uuid import UUID
from backend.app.models.ai_model import AIModel
from typing import Dict, Any
import openai
from enum import Enum
from typing import Any, Dict, List, Optional
from .errors import AppError, ValidationError, AuthenticationError, AuthorizationError, NotFoundError, UserAlreadyExistsError
from flask import jsonify, current_app
from werkzeug.exceptions import HTTPException
import logging
from typing import Dict, Any, List
import numpy as np
from passlib.context import CryptContext
from backend.app.core.errors import AuthenticationError
from backend.app.models.user import User
from flask import request, g, current_app
from flask_jwt_extended import verify_jwt_in_request, get_jwt_identity
from functools import wraps
import time
import uuid
from datetime import datetime
from flask_jwt_extended import get_jwt
import logging
from datetime import datetime
from functools import wraps
from pathlib import Path
from typing import Optional, Dict, Any, Union, List, Tuple
import json
import logging
import os
import sys
import time
import traceback
from backend.app.db.base import Base
from datetime import datetime
from sqlalchemy import text
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import Any, Dict, List, Optional, Type, TypeVar, Union
from collections import defaultdict
from dataclasses import dataclass
from datetime import datetime
from functools import wraps
from typing import Dict, Optional, Tuple, Union
import logging
import threading
import time
from dotenv import load_dotenv
from pathlib import Path
from typing import Any, Dict, Optional, Union
import json
import os
import yaml
from collections import deque
from dataclasses import dataclass, field
from datetime import datetime
from functools import wraps
from typing import Dict, List, Optional, Union
import json
import logging
import psutil
import threading
import time
import traceback
from base64 import b64encode, b64decode
from datetime import datetime, timedelta
from passlib.context import CryptContext
from typing import Optional, Tuple
import jwt
import re
import secrets
import string
from .caching import (
from .common import (
from .config import (
from .db import (
from .error_handling import (
from .file_handling import (
from .logging import (
from .monitoring import (
from .rate_limiting import (
from .security import (
from .testing import (
from .validation import (
from datetime import datetime, timedelta
from functools import wraps
from pathlib import Path
from typing import Any, Callable, Dict, Optional, Tuple, TypeVar, Union
import hashlib
import json
import logging
import pickle
import threading
import time
from datetime import datetime, timedelta
from typing import Any, Dict, List, Optional, Union
import random
import string
from backend.app.core.config import settings
from backend.app.extensions import mail
from flask_mail import Message
from backend.app.core.config import get_settings
from backend.app.db.base import Base
from datetime import datetime, timedelta
from pathlib import Path
from sqlalchemy.orm import Session
from typing import Any, Dict, List, Optional, Type, Union
from unittest.mock import MagicMock, patch
import contextlib
import json
import logging
import pytest
import random
import shutil
import string
import tempfile
from datetime import datetime
from pathlib import Path
from typing import Optional, List, Tuple
import hashlib
import magic
import os
import shutil
import tempfile
from datetime import datetime
from typing import Any, Dict, List, Optional, Union
import re
from ..base import BaseModel
from sqlalchemy import (
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
import enum
from .organization import (
from .visualization import Visualization
from ..base import BaseModel
from sqlalchemy import Column, String, JSON, ForeignKey
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from .base import BaseModel
from backend.app.core.pwd_context import get_password_hash, verify_password
from sqlalchemy import Column, String, Boolean, DateTime
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from sqlalchemy import Column, DateTime
from sqlalchemy.sql import func
from backend.app.models.storyboard.story_point import StoryPoint
from backend.app.models.storyboard.storyboard import Storyboard
from backend.app.models.base import Base
from datetime import datetime
from sqlalchemy import Column, String, ForeignKey, Text, DateTime, Float
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
import uuid
from backend.app.models.base import Base
from datetime import datetime
from sqlalchemy import Column, String, ForeignKey, Text, DateTime, Float
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
import uuid
from .audio.audio_track import AudioTrack
from .base import BaseModel
from .physics.parameters import PhysicsParameters
from .physics.physics_constraint import PhysicsConstraint
from .physics.physics_object import PhysicsObject
from .universe.scene import Scene
from .universe.universe import Universe
from .user import User
from .visualization.visualization import Visualization
from ..base import BaseModel
from sqlalchemy import Column, String, Boolean, Float, ForeignKey, JSON, Integer
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from ..base import BaseModel
from sqlalchemy import Column, String, Float, ForeignKey
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from enum import Enum
from backend.app.models.audio.audio_track import AudioTrack
from backend.app.models.audio.harmony_parameter import HarmonyParameter
from ..base import BaseModel
from sqlalchemy import Column, Integer, Float, String, ForeignKey, JSON
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from ..base import BaseModel
from sqlalchemy import Column, Integer, String, Float, ForeignKey, JSON, Boolean
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from ..base import BaseModel
from sqlalchemy import Column, Integer, String, Float, ForeignKey, JSON, Enum, Boolean
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
import enum
from ..base import BaseModel
from sqlalchemy import Column, Integer, String, Float, JSON, ForeignKey, Enum, Boolean
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
import enum
from .ai_model import AIModel
from .parameters import PhysicsParameters
from .physics_constraint import PhysicsConstraint
from .physics_object import PhysicsObject
from ..base import BaseModel
from sqlalchemy import Column, String, ForeignKey
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from backend.app.db.base_class import Base
from backend.app.models.mixins import TimestampMixin
from sqlalchemy import Column, Integer, Float, ForeignKey, String, JSON
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from uuid import uuid4
from ..base import BaseModel
from sqlalchemy import Column, String, ForeignKey, Float
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from .universe import Universe
from ..base import BaseModel
from sqlalchemy import Column, String, Text, ForeignKey, Boolean, Integer, DateTime, Float
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func
from ...db.database import Base
from ..base import BaseModel
from sqlalchemy import Column, String, Integer, Text, ForeignKey, DateTime, Boolean
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func
from typing import Dict, Optional
from ..base import BaseModel
from __future__ import annotations
from sqlalchemy import String, Text, Boolean, Integer, ForeignKey
from sqlalchemy.dialects.postgresql import JSONB, UUID as PGUUID
from sqlalchemy.orm import Mapped, mapped_column, relationship
from typing import TYPE_CHECKING, Any, Dict, List, Optional
from uuid import UUID
from backend.app.db.base_class import Base
from datetime import datetime
from sqlalchemy import Column, DateTime
from sqlalchemy.dialects.postgresql import UUID
import uuid
from ..base import BaseAppModel, NameDescriptionModel, MetadataModel
from datetime import datetime
from pydantic import BaseModel, Field, validator
from typing import Dict, List, Optional, Union
from ..base import BaseAppModel, NameDescriptionModel, MetadataModel
from datetime import datetime
from pydantic import BaseModel, Field, validator
from typing import Dict, List, Optional
from .midi import MIDISequence
from backend.app.models.audio.audio_control import AutomationType
from pydantic import BaseModel, Field
from typing import Dict, List, Optional, Union
from pydantic import BaseModel, Field
from typing import Dict, List, Optional, Union
from ..base import BaseAppModel, MetadataModel
from datetime import datetime
from pydantic import BaseModel, Field, validator
from typing import Dict, List, Optional
from .physics_constraint import (
from .physics_object import (
from .physics_parameter import (
from pydantic import BaseModel, Field, validator
from typing import Any, Dict, Optional, List
from uuid import UUID
from .physics_object import Vector3D
from pydantic import BaseModel, Field, validator
from typing import Optional, Dict, Any
from pydantic import BaseModel, Field
from typing import Dict, Optional
from datetime import datetime
from marshmallow import Schema, fields, validates, ValidationError, pre_load, post_dump
from typing import Dict, Any
from backend.app.db.init_db import init_db
from backend.app.db.session import get_db
import logging
from backend.app.db.session import get_db
from backend.app.models.universe import Universe
from backend.app.models.universe.scene import Scene
from backend.app.models.user import User
from sqlalchemy.exc import IntegrityError
import logging
from sqlalchemy.ext.declarative import as_declarative, declared_attr
from contextlib import contextmanager
from flask import current_app
from pathlib import Path
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, Session, scoped_session
import json
import os
from .base_class import Base
from .management import db_manager
from .session import engine, SessionLocal, get_db
from backend.app.core.errors import NotFoundError
from backend.app.models.audio.harmony_parameter import HarmonyParameter
from sqlalchemy.orm import Session
from typing import List, Optional
from uuid import UUID
from .physics_parameter import PhysicsParameterRepository
from .scene import SceneRepository
from .universe import UniverseRepository
from backend.app.core.errors import NotFoundError
from backend.app.models.universe.scene import Scene
from sqlalchemy.orm import Session
from typing import List, Optional
from uuid import UUID
from backend.app.core.errors import NotFoundError
from backend.app.models.universe.universe import Universe
from typing import List, Optional
from uuid import UUID
from backend.app.core.errors import NotFoundError
from backend.app.models.physics.parameters import PhysicsParameters
from sqlalchemy.orm import Session
from typing import List, Optional
from uuid import UUID
from ..core.logging import get_logger
from datetime import datetime
from sqlalchemy import text, inspect, create_engine
from sqlalchemy.engine import Engine
from sqlalchemy.orm import Session
from typing import Optional, List, Dict, Any
import json
import os
from backend.app.db.base_class import Base  # noqa
from backend.app.models.audio.audio_track import AudioTrack  # noqa
from backend.app.models.physics.parameters import PhysicsParameters  # noqa
from backend.app.models.physics.physics_constraint import PhysicsConstraint  # noqa
from backend.app.models.physics.physics_object import PhysicsObject  # noqa
from backend.app.models.universe.scene import Scene  # noqa
from backend.app.models.universe.universe import Universe  # noqa
from backend.app.models.user import User  # noqa
from backend.app.core.config import settings
from backend.app.db.session import engine as default_engine, init_engine, Base
from backend.app.models.core.user import User
from backend.app.models.organization.organization import Organization, Role, Workspace, Permission
from backend.app.seeds.demo_user import create_demo_user
from sqlalchemy import text
from sqlalchemy.exc import ProgrammingError, OperationalError
from sqlalchemy.orm import Session
from typing import Optional
import logging
from .routes.auth import auth_bp
from .routes.music_generation import audio_bp, physics_bp, ai_bp
from .routes.physics_objects import physics_objects_bp
from .routes.universe import universe_bp
from .routes.visualization import visualization_bp
from flask import Blueprint
from fastapi import FastAPI
from flask import Flask
from starlette.middleware.wsgi import WSGIMiddleware
import logging
import nest_asyncio
from backend.app.core.errors import ValidationError, NotFoundError, AuthorizationError
from backend.app.db.session import get_db
from backend.app.models.audio.audio_track import AudioTrack
from backend.app.models.universe.scene import Scene
from backend.app.models.universe.universe import Universe
from flask import Blueprint, request, jsonify, send_file
from flask_jwt_extended import jwt_required, get_jwt_identity
from uuid import UUID
import os
from backend.app.core.errors import ValidationError, NotFoundError, AuthorizationError
from backend.app.db.session import get_db
from backend.app.models.physics.parameters import PhysicsParameters
from backend.app.models.universe.universe import Universe
from flask import Blueprint, request, jsonify
from flask_jwt_extended import jwt_required, get_jwt_identity
import logging
from backend.app.core.config import settings
from backend.app.core.errors import (
from backend.app.core.security import (
from backend.app.db.session import get_db
from backend.app.models.user import User
from datetime import timedelta
from flask import Blueprint, request, jsonify
from flask_jwt_extended import (
import logging
from backend.app.core.errors import ValidationError, NotFoundError
from backend.app.core.jwt import add_token_to_blocklist
from backend.app.db.session import get_db
from backend.app.models.user import User
from flask import Blueprint, jsonify, request
from flask_jwt_extended import jwt_required, get_jwt_identity, get_jwt
from flask import Blueprint, jsonify
from .auth import auth_bp
from .health import health_bp  # Import from health.py
from .music_flask import music_bp
from .music_generation import audio_bp, physics_bp, ai_bp
from .physics_objects import physics_objects_bp
from .physics_parameters import physics_parameters_bp
from .scenes import scenes_bp
from .universe import universe_bp
from .users import users_bp
from .visualization import visualization_bp
from flask import Blueprint
from backend.app.core.errors import ValidationError, NotFoundError, AuthorizationError
from backend.app.db.session import get_db
from backend.app.models.universe.scene import Scene
from backend.app.models.visualization.visualization import Visualization
from flask import Blueprint, request, jsonify
from flask_jwt_extended import jwt_required, get_jwt_identity
from uuid import UUID
import json
from backend.app.api.dependencies.auth import get_current_user
from backend.app.api.dependencies.database import get_repository
from backend.app.db.repositories.universe import UniverseRepository
from backend.app.services.music_generator import generate_music_from_params
from fastapi import APIRouter, Depends, HTTPException, status
from typing import Dict, Any
from ...db.database import db_session
from ...middlewares.auth import auth_required
from ...models.universe.scene import Scene
from backend.app import socketio
from backend.app.core.auth import require_auth
from backend.app.core.errors import ValidationError, AuthenticationError, AuthorizationError, NotFoundError
from backend.app.db.repositories.universe import UniverseRepository
from backend.app.db.session import get_db
from backend.app.models.universe.universe import Universe
from backend.app.models.user import User
from datetime import datetime
from flask import Blueprint, request, jsonify, g
from flask_jwt_extended import jwt_required, get_jwt_identity
from sqlalchemy.exc import SQLAlchemyError
from uuid import UUID
import logging
from backend.app.core.auth import get_current_user
from backend.app.core.errors import ValidationError, NotFoundError
from backend.app.db.repositories.harmony_parameter import HarmonyParameterRepository
from backend.app.db.repositories.physics_parameter import PhysicsParameterRepository
from backend.app.db.repositories.scene import SceneRepository
from backend.app.db.repositories.universe import UniverseRepository
from backend.app.db.session import get_db
from backend.app.middlewares.auth import auth_required
from backend.app.models.universe.scene import Scene
from backend.app.models.universe.universe import Universe
from flask import Blueprint, request, jsonify, g
from flask_jwt_extended import jwt_required, get_jwt_identity
from pydantic import BaseModel
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.orm import Session
from typing import List, Optional
from .auth import auth_bp
from .health import health_bp
from .music_flask import music_bp
from .music_generation import audio_bp, physics_bp, ai_bp
from .physics_constraints import physics_constraints_bp
from .physics_objects import physics_objects_bp
from .physics_parameters import physics_parameters_bp
from .scenes import scenes_bp
from .universe import universe_bp
from .users import users_bp
from .visualization import visualization_bp
from flask import Flask
from backend.app.db.session import db_session
from backend.app.models.physics.physics_constraint import PhysicsConstraint
from backend.app.models.physics.physics_object import PhysicsObject
from backend.app.models.universe.scene import Scene
from flask import Blueprint, request, jsonify
from flask_jwt_extended import get_jwt_identity, jwt_required
from sqlalchemy.exc import SQLAlchemyError
from uuid import UUID
import json
import logging
from backend.app.core.errors import ValidationError, NotFoundError, AuthorizationError
from backend.app.db.session import get_db
from backend.app.models.physics.physics_object import PhysicsObject
from backend.app.models.universe.scene import Scene
from backend.app.models.universe.universe import Universe
from flask import Blueprint, request, jsonify
from flask_jwt_extended import jwt_required, get_jwt_identity
from uuid import UUID
import logging
import traceback
from backend.app.core.errors import NotFoundError, AuthorizationError
from backend.app.db.repositories.universe import UniverseRepository
from backend.app.db.session import get_db
from backend.app.services.ai_music_generator import generate_ai_music
from backend.app.services.music_generator import generate_music_from_params
from flask import Blueprint, jsonify, request, send_file
from flask_jwt_extended import jwt_required, get_jwt_identity
from pydub import AudioSegment
from pydub.generators import Sine
import io
import logging
import numpy as np
from backend.app.api.endpoints import (
from flask import Blueprint
from backend.app.core.errors import AppError
from backend.app import create_app
from backend.app.core.config import settings
from backend.app.core.errors import AppError
from flask import Flask, jsonify
import os
from backend.app.core.config import settings
from backend.app.core.security import create_access_token
from backend.app.models.user import User
from backend.app.utils.email import send_verification_email, send_password_reset_email
from datetime import datetime
from sqlalchemy.orm import Session
from typing import Optional
from backend.app.services.music_generator import generate_music_from_params
from typing import Dict, Any, List
import logging
import math
import random
from ..core.logging import get_logger
from contextlib import contextmanager
from typing import Dict, Type, Any
import threading
from backend.app.core.config import settings
from scipy import signal
from typing import Tuple, Optional
import librosa
import numpy as np
import soundfile as sf
from backend.app.models.universe import Universe
from scipy.io import wavfile
from typing import Dict, Any
import json
import numpy as np
import os
import tempfile
from typing import Dict, Any, List
import logging
import math
import random
from backend.app.crud.base import CRUDBase
from backend.app.models.physics.physics_object import PhysicsObject
from backend.app.schemas.physics_object import PhysicsObjectCreate, PhysicsObjectUpdate
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List, Optional, Dict, Any
from backend.app.crud.base import CRUDBase
from backend.app.models.physics.parameters import PhysicsParameters
from backend.app.schemas.physics.physics_parameter import PhysicsParameterCreate, PhysicsParameterUpdate
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List, Optional, Dict, Any
from .crud_physics_constraint import physics_constraint
from .crud_physics_object import physics_object
from .crud_physics_parameter import physics_parameter
from backend.app.crud.base import CRUDBase
from backend.app.models.physics.physics_constraint import PhysicsConstraint
from backend.app.schemas.physics_constraint import PhysicsConstraintCreate, PhysicsConstraintUpdate
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List, Optional, Dict, Any
import os
import pytest
import sys
from ..factories import UniverseFactory, UserFactory
from backend.app.exceptions import (
from backend.app.models import Universe, Scene, User
import pytest
from backend.app.db import SessionLocal
from backend.app.models import User
import pytest
from backend.app.models.collaborator import Collaborator
from backend.app.models.universe import Universe
from backend.app.models.user import User
from datetime import datetime
import pytest
from backend.app.models import Storyboard
from datetime import datetime, timezone
from tests.factories import StoryboardFactory, UniverseFactory, SceneFactory
import pytest
from backend.app.models import Scene
from datetime import datetime, timezone
from tests.factories import SceneFactory, StoryboardFactory, VisualEffectFactory, AudioTrackFactory
import pytest
from backend.app.models import Universe, User
from backend.app.models.db import db
import pytest
from backend.app.models.universe import Universe
from backend.app.models.user import User
from datetime import datetime
from sqlalchemy.exc import IntegrityError
import pytest
from backend.app.extensions import db
from backend.app.models import Universe, User
from datetime import datetime, timezone
from tests.factories import UniverseFactory, UserFactory
import pytest
from backend.app.models import User
import pytest
from backend.app import db
from backend.app.models.profile import Profile
from backend.app.models.user import User
from flask_jwt_extended import decode_token
import json
import pytest
from backend.app import create_app, socketio, db
from backend.app.models.universe import Universe
from backend.app.models.user import User
from flask_socketio import SocketIOTestClient
import pytest
from backend.app.models.profile import Profile
from backend.app.models.user import User
from datetime import datetime
import pytest
from backend.app.models import VisualEffect, AudioTrack
from datetime import datetime, timezone
from tests.factories import VisualEffectFactory, AudioTrackFactory, SceneFactory
import pytest
from ..factories import UniverseFactory, UserFactory
from backend.app.models import Universe
import pytest
from backend.app.models import User
from flask import url_for
import pytest
from backend.app.exceptions import UniverseNotFoundError, UnauthorizedError
from backend.app.models import Universe, User
from backend.app.services.universe_service import UniverseService
import pytest
from backend.app.exceptions import PhysicsObjectNotFoundError
from backend.app.models import PhysicsObject, PhysicsConstraint
from backend.app.services.physics_service import PhysicsService
import pytest
from backend.app.exceptions import AudioTrackNotFoundError
from backend.app.models import AudioTrack, Scene
from backend.app.services.audio_service import AudioService
import pytest
from backend.app import create_app, socketio
from backend.app.core.config import Config
from backend.app.db.session import db_session, Base, engine
from backend.app.models import (
from backend.app.models.visualization.visualization import Visualization
from collections import deque
from datetime import datetime, timedelta
from flask_jwt_extended import create_access_token
from flask_socketio import SocketIO, SocketIOTestClient
from sqlalchemy.orm import scoped_session, sessionmaker
import eventlet
import jwt
import os
import pytest
import sys
import threading
import traceback
from .factories import UserFactory, UniverseFactory
from backend.app.models import User, Universe, UniverseAccess
from backend.app.security import generate_token, verify_token
from datetime import datetime, timedelta
import jwt
import pytest
from backend.app.models import PhysicsObject, Scene, Storyboard, Universe
from datetime import datetime
from sqlalchemy.exc import IntegrityError
import pytest
from backend.app.models import PhysicsConstraint, PhysicsObject, Scene, Storyboard, Universe
from datetime import datetime
from sqlalchemy.exc import IntegrityError
import pytest
from backend.app.models import Scene, PhysicsObject, PhysicsConstraint
from datetime import datetime
from sqlalchemy.exc import IntegrityError
import pytest
from .factories import (
from backend.app import create_app, db
from backend.app.models import User
from flask import Flask
from flask.testing import FlaskClient
from flask_jwt_extended import create_access_token
import os
import pytest
from .factories import UserFactory, UniverseFactory
from backend.app.models import Universe, UniverseAccess, Collaborator
import pytest
from backend.app.models import Universe, Scene, Storyboard
import pytest
from .factories import UserFactory, ProfileFactory
from backend.app.models import User, Profile
from flask import url_for
import pytest
from backend.app import db
from backend.app.models import (
from factory.alchemy import SQLAlchemyModelFactory
import factory
from ..factories import UniverseFactory, UserFactory
from backend.app.models import Universe, Scene, User
from flask_socketio import SocketIO
import pytest
from .factories import (
from backend.app.models import Scene, PhysicsObject
from backend.app.websockets import socketio
import json
import pytest
from .factories import SceneFactory, PhysicsObjectFactory, PhysicsConstraintFactory
from backend.app.models import PhysicsObject, PhysicsConstraint
from backend.app.physics import PhysicsEngine, CollisionDetector, ForceGenerator
import math
import pytest
from .factories import (
from backend.app.models import Universe, Storyboard, Scene, PhysicsObject
import concurrent.futures
import pytest
import time
from .factories import UserFactory, UniverseFactory, StoryboardFactory
from backend.app.models import Universe, UniverseAccess, Collaborator, Activity
import pytest
from .factories import (
from backend.app.models import Scene, PhysicsObject, VisualEffect, AudioTrack
import pytest
from backend.app import create_app, socketio, db
from backend.app.models.universe import Universe
from backend.app.models.user import User
from flask_jwt_extended import create_access_token
from flask_socketio import SocketIOTestClient
import pytest
import threading
import time
from backend.app.models import Universe
from tests.factories import UniverseFactory, UserFactory
import json
import pytest
from backend.app.models import Scene
from tests.factories import SceneFactory, StoryboardFactory
import json
import pytest
from backend.app import db
from backend.app.models import User, Profile
from flask import url_for
from sqlalchemy import select
import pytest
from backend.app import create_app, socketio, db
from backend.app.models.universe import Universe
from backend.app.models.user import User
from flask_socketio import SocketIOTestClient
from tests.conftest import socketio_client  # Use absolute import
import json
import pytest
import time
from backend.app.models import VisualEffect, AudioTrack
from tests.factories import VisualEffectFactory, AudioTrackFactory, SceneFactory
import json
import pytest
from backend.app.models import Profile, User
from flask import url_for
import pytest
from backend.app import db
from backend.app.models.universe import Universe
from backend.app.models.user import User
import json
import pytest
from backend.app.models import Storyboard
from tests.factories import StoryboardFactory, UniverseFactory
import json
import pytest
from backend.app.extensions import db
from backend.app.models import Universe, User
from flask import url_for
from sqlalchemy import select
import pytest
from .factories import (
from backend.app.models import User, Universe, Storyboard, Scene, PhysicsObject
import pytest
from backend.app import create_app, db
from backend.app.models import (
from pathlib import Path
import os
import sys
from backend.app import create_app
from backend.app.models import db, User
import pytest
from .factories import UniverseFactory, StoryboardFactory, SceneFactory
from backend.app.models import Storyboard, Scene
import pytest
from ..factories import UniverseFactory, SceneFactory
from backend.app.models import Scene, Universe
import pytest
from .factories import SceneFactory, VisualEffectFactory, AudioTrackFactory
from backend.app.media import EffectProcessor, AudioProcessor
from backend.app.models import VisualEffect, AudioTrack
import pytest
from ..factories import UniverseFactory, StoryboardFactory
from backend.app.models import Storyboard, Universe
import pytest
from .utils import random_string
from backend.app.models import User, Universe, Scene
from factory import Factory, Faker, LazyAttribute, SubFactory
from backend.app.models import db
from datetime import datetime, timedelta
import random
import string
from backend.app.db.session import db_session as db
from backend.app.models import (
from backend.app.models.visualization.visualization import Visualization
from factory.alchemy import SQLAlchemyModelFactory
import factory
from backend.app.core.audio.midi_processor import MIDIProcessor
from backend.app.models.midi_event import MIDIEventType
from pathlib import Path
import json
import numpy as np
import pretty_midi
import pytest
from backend.app import crud, create_app
from backend.app.core.config import settings
from backend.app.models.audio_file import AudioFormat, AudioType
from backend.app.models.midi_event import MIDIEventType
from backend.app.schemas.audio_file import AudioFileCreate
from backend.app.schemas.midi_event import MIDIEventCreate, MIDIEventBatch
from backend.app.tests.utils.universe import create_random_universe
from backend.app.tests.utils.user import create_random_user
from backend.app.tests.utils.utils import random_lower_string
from flask.testing import FlaskClient
from pathlib import Path
from sqlalchemy.orm import Session
import os
import pytest
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
import time
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
from uuid import uuid4
import json
import pytest
import requests
from backend.app.core.audio.processor import AudioProcessor
from backend.app.models.audio_file import AudioFormat
from pathlib import Path
import json
import numpy as np
import pytest
import soundfile as sf
from backend.app import crud
from backend.app.core.config import settings
from backend.app.models.audio_file import AudioFormat, AudioType
from backend.app.schemas.audio_file import AudioFileCreate
from backend.app.tests.utils.universe import create_random_universe
from backend.app.tests.utils.user import create_random_user
from backend.app.tests.utils.utils import random_lower_string
from flask.testing import FlaskClient
from pathlib import Path
from sqlalchemy.orm import Session
import os
import pytest
from ..factories import UniverseFactory, SceneFactory, UserFactory
from concurrent.futures import ThreadPoolExecutor
import pytest
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
import pytest
from flask_socketio import SocketIOTestClient
import json
import pytest
import time
from backend.app import create_app, socketio, db
from backend.app.models.universe import Universe
from backend.app.models.user import User
from flask_socketio import SocketIOTestClient
import json
import pytest
import time
from backend.app import db
from backend.app.models.profile import Profile
from backend.app.models.universe import Universe
from backend.app.models.user import User
import json
import pytest
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
import pytest
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
import pytest
from backend.app.core.visualization.renderer import Renderer
from backend.app.models.visualization import RenderingMode, SceneObjectType
from flask_socketio import SocketIO
from unittest.mock import Mock, AsyncMock
import asyncio
import json
import pytest
from backend.app.core.visualization.timeline import TimelineManager
from backend.app.models.visualization import Timeline, Keyframe, Animation
from datetime import datetime, timedelta
from unittest.mock import Mock, AsyncMock
import asyncio
import json
import pytest
from PIL import Image
from backend.app.core.visualization.export import ExportManager
from backend.app.models.visualization import RenderingMode, SceneObjectType
from pathlib import Path
import asyncio
import ffmpeg
import json
import numpy as np
import pytest
from backend.app.models import db
from backend.app.models.physics_parameters import PhysicsParameters
from backend.app.models.universe import Universe
import pytest
from pprint import pprint
import json
import os
import requests
import sys
import time
import uuid
from backend.app.db.session import get_db
from backend.app.models.user import User
from backend.app.db.session import get_db
from backend.app.models.universe import Universe
import json
from backend.app import create_app
from backend.app.db.session import init_engine
from sqlalchemy import inspect
from backend.app.db.session import init_db, Base, engine
from backend.app.models.audio.audio_track import AudioTrack
from backend.app.models.audio.midi_sequence import MIDISequence
from backend.app.models.base import BaseModel
from backend.app.models.physics.physics_constraint import PhysicsConstraint
from backend.app.models.physics.physics_object import PhysicsObject
from backend.app.models.physics.physics_parameter import PhysicsParameter
from backend.app.models.universe.scene import Scene
from backend.app.models.universe.universe import Universe
from backend.app.models.user import User
import os
import sys
from backend.app.api.endpoints import auth, users, audio
from backend.app.db.base import db
from backend.app.models.audio_file import AudioFile
from backend.app.models.user import User  # Import each model directly
from collections import defaultdict
from dataclasses import dataclass
from datetime import datetime
from flask import Blueprint
from flask_sqlalchemy import SQLAlchemy
from pathlib import Path
from sqlalchemy import MetaData
from typing import Dict, List, NamedTuple, Set
import json
import re
import subprocess
import sys
from backend.app.utils import (
from datetime import datetime, timedelta
from pathlib import Path
import json
import logging
import os
import sys
from backend.app.db.session import engine
from datetime import datetime
from sqlalchemy import Table, Column, ForeignKey, String, DateTime, Boolean, Integer, JSON, Float
from sqlalchemy.dialects.postgresql import UUID, ARRAY
from sqlalchemy.ext.declarative import declarative_base
import os
import sys
import uuid
from backend.app.db.session import get_db
from backend.app.models.core.scene import Scene
from backend.app.models.core.universe import Universe
from backend.app.models.core.user import User
from backend.app.db.session import engine
from datetime import datetime
from sqlalchemy import Table, Column, ForeignKey, String, DateTime, Boolean, Integer, JSON, Float, Text
from sqlalchemy.dialects.postgresql import UUID, ARRAY, JSONB
from sqlalchemy.ext.declarative import declarative_base
import os
import sys
import uuid
import os
import sys
from backend.app.core.config import config
from backend.app.db.base_class import Base
from backend.app.db.session import engine, SessionLocal
from backend.app.models.user import User
import logging
import os
import sys
from backend.app import create_app
from backend.app.extensions import db
from backend.app.models.scene import Scene, RenderingMode
from config import Config
from sqlalchemy import create_engine
from sqlalchemy.exc import SQLAlchemyError
import sys
from datetime import datetime
from typing import List, Dict, Any
import logging
import os
import pytest
import subprocess
import sys
from pathlib import Path
from typing import List, Dict
import logging
import os
import subprocess
import sys
from alembic import command
from alembic.config import Config
from backend.app.core.config import settings
from backend.app.db.init_db import init_db
from backend.app.db.session import init_engine
from pathlib import Path
from sqlalchemy import create_engine, text, inspect
from sqlalchemy.exc import ProgrammingError, OperationalError
from sqlalchemy.orm import sessionmaker
from urllib.parse import urlparse
import click
import logging
import os
import sys
from datetime import datetime
from typing import List, Dict, Any
import argparse
import json
import logging
import os
import subprocess
import sys
from datetime import datetime
from typing import List, Dict, Any
import argparse
import json
import logging
import os
import shutil
import subprocess
import sys
import importlib.util
import os
import sys
from datetime import datetime
from sqlalchemy import create_engine, MetaData, Table, Column, String, Boolean, DateTime, ForeignKey
from sqlalchemy.dialects.postgresql import UUID
import os
import sys
import uuid
import importlib
import os
import sys
from pathlib import Path
import os
import shutil
import glob
import os
import shutil
from backend.app.db.session import Base, engine
from backend.app.models.ai.ai_model import AIModel
from backend.app.models.audio.audio_file import AudioFile
from backend.app.models.audio.audio_track import AudioTrack
from backend.app.models.audio.midi_sequence import MIDISequence
from backend.app.models.base import BaseModel
from backend.app.models.organization.organization import Organization, Project, Activity
from backend.app.models.physics.physics_constraint import PhysicsConstraint
from backend.app.models.physics.physics_object import PhysicsObject
from backend.app.models.physics.physics_parameter import PhysicsParameter
from backend.app.models.universe.scene import Scene
from backend.app.models.universe.universe import Universe
from backend.app.models.user import User
from backend.app.models.visualization import Visualization
from sqlalchemy import Table, Column, ForeignKey, String, DateTime, Boolean, Integer
from sqlalchemy.dialects.postgresql import UUID
import os
import sys
from pathlib import Path
from typing import Dict, List, Set, Tuple
import hashlib
import json
import logging
import os
import shutil
import subprocess
import sys
from flask import Blueprint
from pathlib import Path
from typing import List, Dict, Any
import os
import re
from backend.app.db.init_db import init_db
from backend.app.db.session import get_db
import os
import sys
from backend.app import create_app
from backend.app.seeds.demo_user import create_demo_user, verify_demo_user, get_demo_user
import click
import logging
from backend.app.db.session import engine
from datetime import datetime
from sqlalchemy import Table, Column, ForeignKey, String, DateTime, Boolean, Integer, JSON, Float, Text
from sqlalchemy.dialects.postgresql import UUID, ARRAY, JSONB
from sqlalchemy.ext.declarative import declarative_base
import os
import sys
import uuid
from backend.app.db.session import engine
from datetime import datetime
from sqlalchemy import Table, Column, ForeignKey, String, DateTime, Boolean, Integer, JSON, Float, Text
from sqlalchemy.dialects.postgresql import UUID, ARRAY, JSONB
from sqlalchemy.ext.declarative import declarative_base
import os
import sys
import uuid
from backend.app.core.config import config
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import logging
import psycopg2
import sys
from backend.app.db.init_db import init_db
from backend.app.db.session import get_db
from flask import Flask, jsonify, send_from_directory, request
from flask_cors import CORS
import os
from alembic import context
from backend.app.core.config import settings
from backend.app.db.base import Base
from logging.config import fileConfig
from sqlalchemy import engine_from_config
from sqlalchemy import pool
import os
from alembic import op
from sqlalchemy.dialects import postgresql
from typing import Sequence, Union
import sqlalchemy as sa
from backend.app.core.config import settings
from sqlalchemy import create_engine, inspect
import logging
import traceback
import logging
import os
import sys
from database import Base
from sqlalchemy import Column, String, Float, ForeignKey, DateTime, func
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from uuid import uuid4
from database import Base
from sqlalchemy import Column, String, Float, ForeignKey, DateTime, func
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import relationship
from uuid import uuid4
from database import Base
from sqlalchemy import Column, String, Boolean, ForeignKey, DateTime, func
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from uuid import uuid4
from sqlalchemy.orm import relationship
from database import Base
from sqlalchemy import Column, String, Float, Integer, ForeignKey, DateTime, func
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from uuid import uuid4
from database import Base
from sqlalchemy import Column, String, ForeignKey, DateTime, func
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from uuid import uuid4
from sqlalchemy.orm import relationship
from database import Base
from sqlalchemy import Column, String, Boolean, ForeignKey, DateTime, func
from sqlalchemy.dialects.postgresql import UUID, JSONB
from sqlalchemy.orm import relationship
from uuid import uuid4
from urllib.parse import urljoin
import logging
import os
import requests
import sys
from datetime import datetime
from pydantic import BaseModel
from typing import Optional, Dict, Any
from uuid import UUID
from datetime import datetime
from pydantic import BaseModel
from typing import Optional, Dict, Any
from uuid import UUID
from datetime import datetime
from pydantic import BaseModel, Field
from typing import Optional
from uuid import UUID
from datetime import datetime
from pydantic import BaseModel
from typing import Optional, Dict, Any
from uuid import UUID
from datetime import datetime
from pydantic import BaseModel
from typing import Optional, Dict, Any
from uuid import UUID
from datetime import datetime
from pydantic import BaseModel, Field
from typing import Optional
from uuid import UUID
from sqlalchemy import inspect
import logging
import os
import sys
from app import create_app
from port import get_port
import os
from flask import Flask, Response
import logging
import os
from app import app as application
from flask import Flask, send_from_directory, request, jsonify
import logging
import os
import sys
import json
import os
import platform
import requests
import socket
import sys
import importlib.util
import logging
import os
import sys
from datetime import datetime, timedelta
from flask import Flask
from models import db, User, Universe, Scene
from models.ai_model import AiModel
from models.audio_file import AudioFile
from models.audio_track import AudioTrack
from models.midi_sequence import MidiSequence
from models.physics_parameter import PhysicsParameter
from models.visualization import Visualization
from passlib.context import CryptContext
from sqlalchemy.orm import Session
from werkzeug.security import generate_password_hash
import os
import uuid
from setuptools import setup, find_packages
from urllib.parse import urlparse
import logging
import os
import sys
import traceback
import logging
import os
import requests
import signal
import subprocess
import sys
import time
import logging
import os
import sys
import logging
import os
import shutil
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import SQLAlchemyError
import logging
import os
import sqlalchemy
import sys
import logging
import os
from flask import Flask
from models import db, User, Universe, Scene
from sqlalchemy import create_engine, text
from sqlalchemy.exc import SQLAlchemyError
from werkzeug.security import generate_password_hash
import logging
import os
import sys
import logging
import multiprocessing
import os
from app import create_app
from flask import Flask, send_from_directory, jsonify, request
import datetime
import jwt
import logging
import os
import sys
from flask import Flask, render_template, jsonify
import datetime
import json
import os
import psutil
import requests
import threading
import time
from datetime import datetime
from flask import Flask, jsonify
import logging
import os
import sys
from app import create_app, db
from app.models import User, Universe
from pathlib import Path
import logging
import os
import shutil
import sys
import logging
import os
import requests
import sys
import time
from flask import Flask, jsonify, request
import datetime
import jwt
import logging
import os
import sys
from flask import Flask, send_from_directory, request, jsonify
import logging
import os
import sys
import logging
import os
import sys
from pathlib import Path
import logging
import os
import platform
import shutil
import sys
from datetime import datetime
from flask import Flask, jsonify
from pathlib import Path
import importlib
import inspect
import json
import logging
import os
import platform
import socket
import subprocess
import sys
import tempfile
import time
import traceback
import urllib.error
import urllib.request
from fastapi import FastAPI
from port import get_port
from routers import audio_tracks, visualizations, ai_models
from routers import auth, users, universes, scenes
from routers import physics_parameters, audio_files, midi_sequences
from starlette.middleware.cors import CORSMiddleware
from starlette.staticfiles import StaticFiles
import uvicorn
import logging
import os
import sys
from flask import request, Response, g
import os
import re
from pathlib import Path
import logging
import os
import shutil
import stat
import sys
from datetime import datetime
from sqlalchemy import create_engine, inspect, text
from sqlalchemy.engine import Engine
import importlib.util
import json
import logging
import os
import sys
import traceback
import json
import logging
import requests
import sys
import time
import os
import socket
import sys
import time
from psycopg2 import sql
import logging
import os
import psycopg2
import sys
from auth_utils import token_required
from datetime import datetime
from flask import Blueprint, request, jsonify, current_app
from models import Universe, Scene, db
from sqlalchemy.exc import SQLAlchemyError
import app
from sqlalchemy import create_engine, inspect, text
import logging
import os
import sys
from app import app as application
from flask import request, jsonify, Response, send_from_directory
import logging
import mimetypes
import os
import time
from dotenv import load_dotenv
from flask_migrate import Migrate
import logging
import os
import sys
from datetime import datetime
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
import logging
import os
import psycopg2
import sys
import time
from flask_migrate import Migrate
import os
