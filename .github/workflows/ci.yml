name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: harmonic_universe_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend
          python -m pip install -r requirements.txt
          python -m pip install pytest pytest-cov

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm run test:ci || true

      - name: Run Backend Tests
        run: |
          cd backend
          python -m pytest tests/ --cov=app --cov-report=json
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: harmonic_universe_test
          DB_USER: postgres
          DB_PASSWORD: postgres
          NODE_ENV: test

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./frontend/coverage/coverage-final.json,./backend/coverage/coverage-final.json

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend
          python -m pip install -r requirements.txt
          python -m pip install flake8

      - name: Lint Frontend
        run: |
          cd frontend
          npm run lint || true

      - name: Lint Backend
        run: |
          cd backend
          flake8 . || true

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend
          python -m pip install -r requirements.txt

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Build Backend
        run: |
          cd backend
          python -m pip install -e .

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/dist
