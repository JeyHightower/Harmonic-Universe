services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=harmonic_user
      - POSTGRES_PASSWORD=harmonic_password
      - POSTGRES_DB=harmonic_universe
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U harmonic_user -d harmonic_universe' ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://harmonic_user:harmonic_password@db:5432/harmonic_universe
      - SECRET_KEY=development_secret_key
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PORT=5001
      - PYTHONPATH=/app
    ports:
      - '5001:5001'
    volumes:
      - ./backend:/app
    command: /app/docker-entrypoint.sh

  frontend:
    image: node:18-alpine
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5001
      - HOST=0.0.0.0
      - NODE_OPTIONS=--max_old_space_size=2048
    depends_on:
      - backend
    working_dir: /app
    command: ./start.sh
    mem_limit: 2G
    restart: on-failure

volumes:
  postgres_data:
  frontend_node_modules:
