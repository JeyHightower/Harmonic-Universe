services:
  - type: web
    name: harmonic-universe
    env: python
    buildCommand: |
      cd backend && \
      pip install -r requirements.txt && \
      export FLASK_APP=app.py && \
      export PYTHONPATH=$PYTHONPATH:$(pwd) && \
      if [ -n "$DATABASE_URL" ]; then \
        # Replace postgres:// with postgresql://
        export FIXED_DATABASE_URL=$(echo $DATABASE_URL | sed 's/postgres:\/\//postgresql:\/\//') && \
        export DATABASE_URL=$FIXED_DATABASE_URL && \
        # Wait for DB to be ready
        echo "Waiting for database to be ready..." && \
        sleep 10 && \
        # Initialize DB with create_all() instead of migrations
        python -c "
        from app import app, db
        with app.app_context():
            db.create_all()
            print('Database tables created successfully')
        "
      else \
        echo "DATABASE_URL not set, skipping db setup"
      fi && \
      cd ../frontend && \
      npm install && \
      npm run build
    startCommand: cd backend && gunicorn --workers=2 app:app
    envVars:
      - key: FLASK_APP
        value: app.py
      - key: PYTHON_VERSION
        value: 3.11.0
      - fromGroup: harmonic-universe-env
    healthCheckPath: /api/health
    autoDeploy: true

databases:
  - name: harmonic_universe_db
    plan: free
    postgresMajorVersion: 15

envVarGroups:
  - name: harmonic-universe-env 