services:
  # Web service for frontend (changed from static to web with Node runtime)
  - type: web
    name: harmonic-universe-frontend
    runtime: node
    buildCommand: ./fix-render-build.sh
    startCommand: cd frontend && node serve.js
    envVars:
      - key: NODE_VERSION
        value: '18.19.0'
      - key: ROLLUP_SKIP_NODEJS_NATIVE_BUILD
        value: 'true'
      - key: ROLLUP_NATIVE_PURE_JS
        value: 'true'
      - key: ROLLUP_DISABLE_NATIVE
        value: 'true'
      - key: NODE_OPTIONS
        value: --max-old-space-size=4096 --experimental-vm-modules
      - key: NPM_CONFIG_LEGACY_PEER_DEPS
        value: 'true'
      - key: NPM_CONFIG_FUND
        value: 'false'
      - key: NPM_CONFIG_AUDIT
        value: 'false'
      - key: NPM_CONFIG_PREFER_OFFLINE
        value: 'false'
      - key: NPM_CONFIG_IGNORE_SCRIPTS
        value: 'false'
      - key: NPM_CONFIG_FORCE
        value: 'true'
      - key: NPM_CONFIG_NO_PACKAGE_LOCK
        value: 'true'
      - key: NPM_CONFIG_UNSAFE_PERM
        value: 'true'
      - key: PORT
        value: '10000'

  # Web service for backend
  - type: web
    name: harmonic-universe-backend
    runtime: python
    buildCommand: pip install -r requirements.txt && python -m pip install gunicorn
    startCommand: gunicorn wsgi:app
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.18
      - key: DATABASE_URL
        fromDatabase:
          name: harmonic-universe-db
          property: connectionString

# Database
databases:
  - name: harmonic-universe-db
    databaseName: harmonic_universe
    user: harmonic_user
