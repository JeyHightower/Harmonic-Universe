services:
  - type: web
    name: harmonic-universe
    env: python
    buildCommand: |
      cd backend && \
      pip install -r requirements.txt && \
      export FLASK_APP=app.py && \
      export PYTHONPATH=$PYTHONPATH:$(pwd) && \
      # Wait for the database to be ready
      echo "Waiting for database to be ready..." && \
      sleep 5 && \
      # Fix Postgres URL format if needed
      python -c "
      import os
      db_url = os.environ.get('DATABASE_URL', '')
      if db_url.startswith('postgres://'):
          os.environ['DATABASE_URL'] = db_url.replace('postgres://', 'postgresql://')
          print('Fixed DATABASE_URL format')
      " && \
      # Run migrations instead of create_all
      flask db upgrade && \
      echo "Database migrations completed successfully" && \
      cd ../frontend && \
      npm install && \
      npm run build
    startCommand: cd backend && gunicorn --workers=2 app:app
    envVars:
      - key: FLASK_APP
        value: app.py
      - key: PYTHON_VERSION
        value: 3.11.0
      - fromGroup: harmonic-universe-env
    healthCheckPath: /api/health
    autoDeploy: true

databases:
  - name: harmonic_universe_db
    plan: free
    postgresMajorVersion: 15

envVarGroups:
  - name: harmonic-universe-env 