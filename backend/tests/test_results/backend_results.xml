<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="7" failures="0" skipped="0" tests="7" time="2.993" timestamp="2025-01-31T10:24:17.454420-06:00" hostname="Jey-New-Mac.local"><testcase classname="" name="app.tests.test_audio.test_audio_crud" time="0.000"><error message="collection failure">app/tests/test_audio/test_audio_crud.py:7: in &lt;module&gt;
    from app import crud
app/crud/__init__.py:1: in &lt;module&gt;
    from .crud_user import user
app/crud/crud_user.py:6: in &lt;module&gt;
    from app.models.user import User
app/models/__init__.py:4: in &lt;module&gt;
    from .physics_parameter import PhysicsParameter
app/models/physics_parameter.py:9: in &lt;module&gt;
    class PhysicsParameter(Base):
app/db/base_class.py:34: in __init_subclass__
    super().__init_subclass__()
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_api.py:849: in __init_subclass__
    _as_declarative(cls._sa_registry, cls, cls.__dict__)
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:247: in _as_declarative
    return _MapperConfig.setup_mapping(registry, cls, dict_, None, {})
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:328: in setup_mapping
    return _ClassScanMapperConfig(
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:574: in __init__
    self._extract_mappable_attributes()
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:1507: in _extract_mappable_attributes
    raise exc.InvalidRequestError(
E   sqlalchemy.exc.InvalidRequestError: Attribute name 'metadata' is reserved when using the Declarative API.</error></testcase><testcase classname="" name="app.tests.test_audio.test_audio_processing" time="0.000"><error message="collection failure">ImportError while importing test module '/Users/jameshightower/Desktop/AppAcademy/capstone/projects/Harmonic-Universe/backend/app/tests/test_audio/test_audio_processing.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
../../../../../../.pyenv/versions/3.9.18/lib/python3.9/importlib/__init__.py:127: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/tests/test_audio/test_audio_processing.py:2: in &lt;module&gt;
    import numpy as np
E   ModuleNotFoundError: No module named 'numpy'</error></testcase><testcase classname="" name="app.tests.test_midi.test_midi_crud" time="0.000"><error message="collection failure">app/tests/test_midi/test_midi_crud.py:7: in &lt;module&gt;
    from app import crud
app/crud/__init__.py:4: in &lt;module&gt;
    from .crud_physics_parameter import physics_parameter
app/crud/crud_physics_parameter.py:6: in &lt;module&gt;
    from app.models.physics_parameter import PhysicsParameter
app/models/__init__.py:4: in &lt;module&gt;
    from .physics_parameter import PhysicsParameter
app/models/physics_parameter.py:9: in &lt;module&gt;
    class PhysicsParameter(Base):
app/db/base_class.py:34: in __init_subclass__
    super().__init_subclass__()
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_api.py:849: in __init_subclass__
    _as_declarative(cls._sa_registry, cls, cls.__dict__)
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:247: in _as_declarative
    return _MapperConfig.setup_mapping(registry, cls, dict_, None, {})
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:328: in setup_mapping
    return _ClassScanMapperConfig(
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:574: in __init__
    self._extract_mappable_attributes()
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:1507: in _extract_mappable_attributes
    raise exc.InvalidRequestError(
E   sqlalchemy.exc.InvalidRequestError: Attribute name 'metadata' is reserved when using the Declarative API.</error></testcase><testcase classname="" name="app.tests.test_midi.test_midi_processing" time="0.000"><error message="collection failure">ImportError while importing test module '/Users/jameshightower/Desktop/AppAcademy/capstone/projects/Harmonic-Universe/backend/app/tests/test_midi/test_midi_processing.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
../../../../../../.pyenv/versions/3.9.18/lib/python3.9/importlib/__init__.py:127: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/tests/test_midi/test_midi_processing.py:2: in &lt;module&gt;
    import numpy as np
E   ModuleNotFoundError: No module named 'numpy'</error></testcase><testcase classname="" name="app.tests.test_visualization.test_export" time="0.000"><error message="collection failure">ImportError while importing test module '/Users/jameshightower/Desktop/AppAcademy/capstone/projects/Harmonic-Universe/backend/app/tests/test_visualization/test_export.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
../../../../../../.pyenv/versions/3.9.18/lib/python3.9/importlib/__init__.py:127: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/tests/test_visualization/test_export.py:5: in &lt;module&gt;
    import numpy as np
E   ModuleNotFoundError: No module named 'numpy'</error></testcase><testcase classname="" name="app.tests.test_visualization.test_renderer" time="0.000"><error message="collection failure">ImportError while importing test module '/Users/jameshightower/Desktop/AppAcademy/capstone/projects/Harmonic-Universe/backend/app/tests/test_visualization/test_renderer.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
../../../../../../.pyenv/versions/3.9.18/lib/python3.9/importlib/__init__.py:127: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/tests/test_visualization/test_renderer.py:7: in &lt;module&gt;
    from app.core.visualization.renderer import Renderer
app/core/visualization/renderer.py:2: in &lt;module&gt;
    import numpy as np
E   ModuleNotFoundError: No module named 'numpy'</error></testcase><testcase classname="" name="app.tests.test_visualization.test_timeline" time="0.000"><error message="collection failure">app/tests/test_visualization/test_timeline.py:7: in &lt;module&gt;
    from app.core.visualization.timeline import TimelineManager
app/core/visualization/timeline.py:5: in &lt;module&gt;
    from app.models.visualization import Timeline, Keyframe, Animation
app/models/__init__.py:4: in &lt;module&gt;
    from .physics_parameter import PhysicsParameter
app/models/physics_parameter.py:9: in &lt;module&gt;
    class PhysicsParameter(Base):
app/db/base_class.py:34: in __init_subclass__
    super().__init_subclass__()
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_api.py:849: in __init_subclass__
    _as_declarative(cls._sa_registry, cls, cls.__dict__)
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:247: in _as_declarative
    return _MapperConfig.setup_mapping(registry, cls, dict_, None, {})
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:328: in setup_mapping
    return _ClassScanMapperConfig(
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:574: in __init__
    self._extract_mappable_attributes()
venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:1507: in _extract_mappable_attributes
    raise exc.InvalidRequestError(
E   sqlalchemy.exc.InvalidRequestError: Attribute name 'metadata' is reserved when using the Declarative API.</error></testcase></testsuite></testsuites>