"""initial migration

Revision ID: 099801fdecbf
Revises: 
Create Date: 2025-03-25 00:17:42.528734

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '099801fdecbf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scenes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sound_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('volume', sa.Float(), nullable=True),
    sa.Column('pitch', sa.Float(), nullable=True),
    sa.Column('pan', sa.Float(), nullable=True),
    sa.Column('reverb', sa.Float(), nullable=True),
    sa.Column('delay', sa.Float(), nullable=True),
    sa.Column('echo', sa.Float(), nullable=True),
    sa.Column('chorus', sa.Float(), nullable=True),
    sa.Column('distortion', sa.Float(), nullable=True),
    sa.Column('low_pass', sa.Float(), nullable=True),
    sa.Column('high_pass', sa.Float(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['scene_id'], ['scenes.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('universes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('sound_profile_id', sa.Integer(), nullable=True),
    sa.Column('is_2d', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sound_profile_id'], ['sound_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audio_samples',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('format', sa.String(length=10), nullable=True),
    sa.Column('sample_rate', sa.Integer(), nullable=True),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('has_physics', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_pieces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('tempo', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physics_2d',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('gravity', sa.Float(), nullable=True),
    sa.Column('air_resistance', sa.Float(), nullable=True),
    sa.Column('friction', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physics_3d',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('gravity_x', sa.Float(), nullable=True),
    sa.Column('gravity_y', sa.Float(), nullable=True),
    sa.Column('gravity_z', sa.Float(), nullable=True),
    sa.Column('air_resistance', sa.Float(), nullable=True),
    sa.Column('friction', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('harmonies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('progression', sa.String(length=255), nullable=True),
    sa.Column('key', sa.String(length=20), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('music_piece_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['music_piece_id'], ['music_pieces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('musical_themes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(length=20), nullable=True),
    sa.Column('tempo', sa.Integer(), nullable=True),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=True),
    sa.Column('scene_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['scene_id'], ['scenes.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physics_objects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('mass', sa.Float(), nullable=True),
    sa.Column('position_x', sa.Float(), nullable=True),
    sa.Column('position_y', sa.Float(), nullable=True),
    sa.Column('position_z', sa.Float(), nullable=True),
    sa.Column('velocity_x', sa.Float(), nullable=True),
    sa.Column('velocity_y', sa.Float(), nullable=True),
    sa.Column('velocity_z', sa.Float(), nullable=True),
    sa.Column('rotation_x', sa.Float(), nullable=True),
    sa.Column('rotation_y', sa.Float(), nullable=True),
    sa.Column('rotation_z', sa.Float(), nullable=True),
    sa.Column('angular_velocity_x', sa.Float(), nullable=True),
    sa.Column('angular_velocity_y', sa.Float(), nullable=True),
    sa.Column('angular_velocity_z', sa.Float(), nullable=True),
    sa.Column('restitution', sa.Float(), nullable=True),
    sa.Column('friction', sa.Float(), nullable=True),
    sa.Column('linear_damping', sa.Float(), nullable=True),
    sa.Column('angular_damping', sa.Float(), nullable=True),
    sa.Column('collision_margin', sa.Float(), nullable=True),
    sa.Column('is_static', sa.Boolean(), nullable=True),
    sa.Column('is_trigger', sa.Boolean(), nullable=True),
    sa.Column('physics_2d_id', sa.Integer(), nullable=True),
    sa.Column('physics_3d_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['physics_2d_id'], ['physics_2d.id'], ),
    sa.ForeignKeyConstraint(['physics_3d_id'], ['physics_3d.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physics_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parameter_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=True),
    sa.Column('max_value', sa.Float(), nullable=True),
    sa.Column('step', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('physics_2d_id', sa.Integer(), nullable=True),
    sa.Column('physics_3d_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['physics_2d_id'], ['physics_2d.id'], ),
    sa.ForeignKeyConstraint(['physics_3d_id'], ['physics_3d.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physics_constraints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('constraint_type', sa.String(length=50), nullable=False),
    sa.Column('object_a_id', sa.Integer(), nullable=False),
    sa.Column('object_b_id', sa.Integer(), nullable=False),
    sa.Column('pivot_a_x', sa.Float(), nullable=True),
    sa.Column('pivot_a_y', sa.Float(), nullable=True),
    sa.Column('pivot_a_z', sa.Float(), nullable=True),
    sa.Column('pivot_b_x', sa.Float(), nullable=True),
    sa.Column('pivot_b_y', sa.Float(), nullable=True),
    sa.Column('pivot_b_z', sa.Float(), nullable=True),
    sa.Column('axis_a_x', sa.Float(), nullable=True),
    sa.Column('axis_a_y', sa.Float(), nullable=True),
    sa.Column('axis_a_z', sa.Float(), nullable=True),
    sa.Column('axis_b_x', sa.Float(), nullable=True),
    sa.Column('axis_b_y', sa.Float(), nullable=True),
    sa.Column('axis_b_z', sa.Float(), nullable=True),
    sa.Column('max_force', sa.Float(), nullable=True),
    sa.Column('max_torque', sa.Float(), nullable=True),
    sa.Column('breaking_force', sa.Float(), nullable=True),
    sa.Column('breaking_torque', sa.Float(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['object_a_id'], ['physics_objects.id'], ),
    sa.ForeignKeyConstraint(['object_b_id'], ['physics_objects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('physics_constraints')
    op.drop_table('physics_parameters')
    op.drop_table('physics_objects')
    op.drop_table('notes')
    op.drop_table('musical_themes')
    op.drop_table('harmonies')
    op.drop_table('physics_3d')
    op.drop_table('physics_2d')
    op.drop_table('music_pieces')
    op.drop_table('characters')
    op.drop_table('audio_samples')
    op.drop_table('users')
    op.drop_table('universes')
    op.drop_table('sound_profiles')
    op.drop_table('scenes')
    # ### end Alembic commands ###
