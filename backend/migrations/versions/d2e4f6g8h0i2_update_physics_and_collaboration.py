"""update physics and collaboration

Revision ID: d2e4f6g8h0i2
Revises: c0b80b8a825e
Create Date: 2025-01-28 14:08:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd2e4f6g8h0i2'
down_revision = 'c0b80b8a825e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()

    # Drop physics_parameters table if it exists
    if 'physics_parameters' in tables:
        op.drop_table('physics_parameters')

    # Add music_parameters and visual_parameters columns to universes table
    with op.batch_alter_table('universes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('music_parameters', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('visual_parameters', sa.JSON(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('universes', schema=None) as batch_op:
        batch_op.drop_column('visual_parameters')
        batch_op.drop_column('music_parameters')

    # Recreate physics_parameters table
    op.create_table('physics_parameters',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('universe_id', sa.INTEGER(), nullable=False),
        sa.Column('gravity', sa.FLOAT(), nullable=True),
        sa.Column('elasticity', sa.FLOAT(), nullable=True),
        sa.Column('friction', sa.FLOAT(), nullable=True),
        sa.Column('air_resistance', sa.FLOAT(), nullable=True),
        sa.Column('density', sa.FLOAT(), nullable=True),
        sa.Column('time_dilation', sa.FLOAT(), nullable=False, server_default='1.0'),
        sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
