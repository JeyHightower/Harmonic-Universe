"""Add template relationship to Universe

Revision ID: 492c16b315ea
Revises: 
Create Date: 2025-01-19 13:18:55.303199

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '492c16b315ea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('physics_params', sa.JSON(), nullable=False),
    sa.Column('music_params', sa.JSON(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('universes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audio_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('waveform', sa.String(length=20), nullable=True),
    sa.Column('attack', sa.Float(), nullable=True),
    sa.Column('decay', sa.Float(), nullable=True),
    sa.Column('sustain', sa.Float(), nullable=True),
    sa.Column('release', sa.Float(), nullable=True),
    sa.Column('lfo_rate', sa.Float(), nullable=True),
    sa.Column('lfo_depth', sa.Float(), nullable=True),
    sa.Column('filter_cutoff', sa.Float(), nullable=True),
    sa.Column('filter_resonance', sa.Float(), nullable=True),
    sa.Column('reverb_amount', sa.Float(), nullable=True),
    sa.Column('delay_time', sa.Float(), nullable=True),
    sa.Column('delay_feedback', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('tempo', sa.Float(), nullable=False),
    sa.Column('key', sa.String(length=10), nullable=False),
    sa.Column('scale', sa.String(length=20), nullable=False),
    sa.Column('harmony', sa.Float(), nullable=False),
    sa.Column('rhythm_complexity', sa.Float(), nullable=False),
    sa.Column('melody_range', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physics_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('gravity', sa.Float(), nullable=False),
    sa.Column('elasticity', sa.Float(), nullable=False),
    sa.Column('friction', sa.Float(), nullable=False),
    sa.Column('air_resistance', sa.Float(), nullable=False),
    sa.Column('density', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storyboards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('visualization_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('background_color', sa.String(length=7), nullable=True),
    sa.Column('particle_color', sa.String(length=7), nullable=True),
    sa.Column('glow_color', sa.String(length=7), nullable=True),
    sa.Column('particle_count', sa.Integer(), nullable=True),
    sa.Column('particle_size', sa.Float(), nullable=True),
    sa.Column('particle_speed', sa.Float(), nullable=True),
    sa.Column('glow_intensity', sa.Float(), nullable=True),
    sa.Column('blur_amount', sa.Float(), nullable=True),
    sa.Column('trail_length', sa.Float(), nullable=True),
    sa.Column('animation_speed', sa.Float(), nullable=True),
    sa.Column('bounce_factor', sa.Float(), nullable=True),
    sa.Column('rotation_speed', sa.Float(), nullable=True),
    sa.Column('camera_zoom', sa.Float(), nullable=True),
    sa.Column('camera_rotation', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storyboard_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storyboard_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.Float(), nullable=False),
    sa.Column('harmony_value', sa.Float(), nullable=True),
    sa.Column('transition_duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('gravity', sa.Float(), nullable=True),
    sa.Column('friction', sa.Float(), nullable=True),
    sa.Column('elasticity', sa.Float(), nullable=True),
    sa.Column('air_resistance', sa.Float(), nullable=True),
    sa.Column('density', sa.Float(), nullable=True),
    sa.Column('waveform', sa.String(length=20), nullable=True),
    sa.Column('attack', sa.Float(), nullable=True),
    sa.Column('decay', sa.Float(), nullable=True),
    sa.Column('sustain', sa.Float(), nullable=True),
    sa.Column('release', sa.Float(), nullable=True),
    sa.Column('lfo_rate', sa.Float(), nullable=True),
    sa.Column('lfo_depth', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['storyboard_id'], ['storyboards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('storyboard_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['storyboard_id'], ['storyboards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('versions')
    op.drop_table('storyboard_points')
    op.drop_table('visualization_parameters')
    op.drop_table('storyboards')
    op.drop_table('physics_parameters')
    op.drop_table('music_parameters')
    op.drop_table('favorites')
    op.drop_table('comments')
    op.drop_table('audio_parameters')
    op.drop_table('universes')
    op.drop_table('templates')
    op.drop_table('users')
    # ### end Alembic commands ###
