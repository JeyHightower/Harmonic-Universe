"""add_genre_and_theme_to_universe

Revision ID: b7bf77c1b155
Revises: 671606b72edd
Create Date: 2025-04-18 17:14:40.858180

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b7bf77c1b155'
down_revision = '671606b72edd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('physics_parameters',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('universe_id', sa.Integer(), nullable=False),
    sa.Column('gravity_x', sa.Float(), nullable=False),
    sa.Column('gravity_y', sa.Float(), nullable=False),
    sa.Column('gravity_z', sa.Float(), nullable=False),
    sa.Column('fixed_timestep', sa.Float(), nullable=False),
    sa.Column('max_substeps', sa.Integer(), nullable=False),
    sa.Column('solver_iterations', sa.Integer(), nullable=False),
    sa.Column('collision_iterations', sa.Integer(), nullable=False),
    sa.Column('default_restitution', sa.Float(), nullable=False),
    sa.Column('default_friction', sa.Float(), nullable=False),
    sa.Column('default_linear_damping', sa.Float(), nullable=False),
    sa.Column('default_angular_damping', sa.Float(), nullable=False),
    sa.Column('continuous_collision_detection', sa.Boolean(), nullable=False),
    sa.Column('allow_sleep', sa.Boolean(), nullable=False),
    sa.Column('collision_margin', sa.Float(), nullable=False),
    sa.Column('air_density', sa.Float(), nullable=False),
    sa.Column('water_density', sa.Float(), nullable=False),
    sa.Column('use_aerodynamics', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('physics_parameters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_physics_parameters_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_physics_parameters_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_physics_parameters_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_physics_parameters_universe_id'), ['universe_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_physics_parameters_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_physics_parameters_user_id'), ['user_id'], unique=False)

    op.create_table('scene_notes',
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('scene_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('importance', sa.String(length=50), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['scene_id'], ['scenes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('scene_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_scene_notes_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_scene_notes_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_scene_notes_scene_id'), ['scene_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_scene_notes_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_scene_notes_updated_at'), ['updated_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('scene_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_scene_notes_updated_at'))
        batch_op.drop_index(batch_op.f('ix_scene_notes_title'))
        batch_op.drop_index(batch_op.f('ix_scene_notes_scene_id'))
        batch_op.drop_index(batch_op.f('ix_scene_notes_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_scene_notes_created_at'))

    op.drop_table('scene_notes')
    with op.batch_alter_table('physics_parameters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_physics_parameters_user_id'))
        batch_op.drop_index(batch_op.f('ix_physics_parameters_updated_at'))
        batch_op.drop_index(batch_op.f('ix_physics_parameters_universe_id'))
        batch_op.drop_index(batch_op.f('ix_physics_parameters_name'))
        batch_op.drop_index(batch_op.f('ix_physics_parameters_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_physics_parameters_created_at'))

    op.drop_table('physics_parameters')
    # ### end Alembic commands ###
