"""Add universe_access table

Revision ID: c0b80b8a825e
Revises:
Create Date: 2025-01-26 21:23:35.516301

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'c0b80b8a825e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()

    # Drop tables if they exist
    if 'storyboard_points' in tables:
        op.drop_table('storyboard_points')
    if 'music_parameters' in tables:
        op.drop_table('music_parameters')
    if 'templates' in tables:
        op.drop_table('templates')
    if 'audio_parameters' in tables:
        op.drop_table('audio_parameters')
    if 'visualization_parameters' in tables:
        op.drop_table('visualization_parameters')
    if 'comments' in tables:
        op.drop_table('comments')
    if 'analytics' in tables:
        with op.batch_alter_table('analytics', schema=None) as batch_op:
            batch_op.drop_index('ix_analytics_metric_name')
            batch_op.drop_index('ix_analytics_timestamp')
        op.drop_table('analytics')
    if 'storyboards' in tables:
        op.drop_table('storyboards')
    if 'user_preferences' in tables:
        op.drop_table('user_preferences')
    if 'versions' in tables:
        op.drop_table('versions')
    if 'favorites' in tables:
        op.drop_table('favorites')
    if 'notifications' in tables:
        op.drop_table('notifications')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), nullable=False),
    sa.Column('message', sa.VARCHAR(length=500), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('read', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorites',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('versions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('storyboard_id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['storyboard_id'], ['storyboards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('theme', sa.VARCHAR(length=20), nullable=True),
    sa.Column('notifications_enabled', sa.BOOLEAN(), nullable=True),
    sa.Column('notification_types', sqlite.JSON(), nullable=True),
    sa.Column('email_notifications', sa.BOOLEAN(), nullable=True),
    sa.Column('push_notifications', sa.BOOLEAN(), nullable=True),
    sa.Column('language', sa.VARCHAR(length=10), nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('date_format', sa.VARCHAR(length=20), nullable=True),
    sa.Column('time_format', sa.VARCHAR(length=20), nullable=True),
    sa.Column('accessibility', sqlite.JSON(), nullable=True),
    sa.Column('dashboard_layout', sqlite.JSON(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('storyboards',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analytics',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('metric_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('metric_value', sa.FLOAT(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('tags', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('analytics', schema=None) as batch_op:
        batch_op.create_index('ix_analytics_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('ix_analytics_metric_name', ['metric_name'], unique=False)

    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('visualization_parameters',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=False),
    sa.Column('background_color', sa.VARCHAR(length=7), nullable=True),
    sa.Column('particle_color', sa.VARCHAR(length=7), nullable=True),
    sa.Column('glow_color', sa.VARCHAR(length=7), nullable=True),
    sa.Column('particle_count', sa.INTEGER(), nullable=True),
    sa.Column('particle_size', sa.FLOAT(), nullable=True),
    sa.Column('particle_speed', sa.FLOAT(), nullable=True),
    sa.Column('glow_intensity', sa.FLOAT(), nullable=True),
    sa.Column('blur_amount', sa.FLOAT(), nullable=True),
    sa.Column('trail_length', sa.FLOAT(), nullable=True),
    sa.Column('animation_speed', sa.FLOAT(), nullable=True),
    sa.Column('bounce_factor', sa.FLOAT(), nullable=True),
    sa.Column('rotation_speed', sa.FLOAT(), nullable=True),
    sa.Column('camera_zoom', sa.FLOAT(), nullable=True),
    sa.Column('camera_rotation', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audio_parameters',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=False),
    sa.Column('waveform', sa.VARCHAR(length=20), nullable=True),
    sa.Column('attack', sa.FLOAT(), nullable=True),
    sa.Column('decay', sa.FLOAT(), nullable=True),
    sa.Column('sustain', sa.FLOAT(), nullable=True),
    sa.Column('release', sa.FLOAT(), nullable=True),
    sa.Column('lfo_rate', sa.FLOAT(), nullable=True),
    sa.Column('lfo_depth', sa.FLOAT(), nullable=True),
    sa.Column('filter_cutoff', sa.FLOAT(), nullable=True),
    sa.Column('filter_resonance', sa.FLOAT(), nullable=True),
    sa.Column('reverb_amount', sa.FLOAT(), nullable=True),
    sa.Column('delay_time', sa.FLOAT(), nullable=True),
    sa.Column('delay_feedback', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('templates',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), nullable=False),
    sa.Column('physics_params', sqlite.JSON(), nullable=False),
    sa.Column('music_params', sqlite.JSON(), nullable=False),
    sa.Column('creator_id', sa.INTEGER(), nullable=False),
    sa.Column('is_public', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('music_parameters',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('universe_id', sa.INTEGER(), nullable=False),
    sa.Column('tempo', sa.FLOAT(), nullable=False),
    sa.Column('key', sa.VARCHAR(length=10), nullable=False),
    sa.Column('scale', sa.VARCHAR(length=20), nullable=False),
    sa.Column('harmony', sa.FLOAT(), nullable=False),
    sa.Column('rhythm_complexity', sa.FLOAT(), nullable=False),
    sa.Column('melody_range', sa.FLOAT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['universe_id'], ['universes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storyboard_points',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('storyboard_id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('timestamp', sa.FLOAT(), nullable=False),
    sa.Column('harmony_value', sa.FLOAT(), nullable=True),
    sa.Column('transition_duration', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('gravity', sa.FLOAT(), nullable=True),
    sa.Column('friction', sa.FLOAT(), nullable=True),
    sa.Column('elasticity', sa.FLOAT(), nullable=True),
    sa.Column('air_resistance', sa.FLOAT(), nullable=True),
    sa.Column('density', sa.FLOAT(), nullable=True),
    sa.Column('waveform', sa.VARCHAR(length=20), nullable=True),
    sa.Column('attack', sa.FLOAT(), nullable=True),
    sa.Column('decay', sa.FLOAT(), nullable=True),
    sa.Column('sustain', sa.FLOAT(), nullable=True),
    sa.Column('release', sa.FLOAT(), nullable=True),
    sa.Column('lfo_rate', sa.FLOAT(), nullable=True),
    sa.Column('lfo_depth', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['storyboard_id'], ['storyboards.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
