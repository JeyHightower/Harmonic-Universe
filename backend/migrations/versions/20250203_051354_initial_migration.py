"""Initial migration

Revision ID: 5f4d7e1ac84c
Revises:
Create Date: 2025-02-03 05:13:54.691205+00:00

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from app.db.custom_types import GUID, JSONType

# revision identifiers, used by Alembic.
revision: str = "5f4d7e1ac84c"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ai_model",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column(
            "config",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "model_metadata",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ai_model")),
    )
    op.create_table(
        "audio_file",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("format", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("duration", sa.Float(), nullable=False),
        sa.Column("sample_rate", sa.Integer(), nullable=False),
        sa.Column("channels", sa.Integer(), nullable=False),
        sa.Column("bit_depth", sa.Integer(), nullable=False),
        sa.Column("file_path", sa.String(), nullable=False),
        sa.Column(
            "audio_metadata",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_audio_file")),
    )
    op.create_table(
        "scenes",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "settings",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "data", JSONType(), server_default="{}", nullable=False
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_scenes")),
    )
    op.create_table(
        "users",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=True),
        sa.Column("hashed_password", sa.Text(), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("last_login", sa.DateTime(timezone=True), nullable=True),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("verification_token", sa.String(length=255), nullable=True),
        sa.Column("reset_password_token", sa.String(length=255), nullable=True),
        sa.Column("reset_password_expires", sa.DateTime(timezone=True), nullable=True),
        sa.Column("display_name", sa.String(length=100), nullable=True),
        sa.Column("bio", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_full_name"), "users", ["full_name"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "ai_generations",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("model_id", GUID(length=32), nullable=False),
        sa.Column("user_id", GUID(length=32), nullable=False),
        sa.Column("prompt", sa.Text(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("is_saved", sa.Boolean(), nullable=False),
        sa.Column("error_message", sa.String(), nullable=True),
        sa.Column(
            "parameters",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "results",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "generation_metadata",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["ai_model.id"],
            name=op.f("fk_ai_generations_model_id_ai_model"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_ai_generations_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ai_generations")),
    )
    op.create_table(
        "exports",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("scene_id", GUID(length=32), nullable=False),
        sa.Column("format", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column(
            "settings",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("output_path", sa.String(), nullable=True),
        sa.Column("error_message", sa.String(), nullable=True),
        sa.Column("progress", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["scene_id"],
            ["scenes.id"],
            name=op.f("fk_exports_scene_id_scenes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exports")),
    )
    op.create_table(
        "midi_event",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("audio_file_id", GUID(length=32), nullable=False),
        sa.Column("event_type", sa.String(), nullable=False),
        sa.Column("timestamp", sa.Float(), nullable=False),
        sa.Column("channel", sa.Integer(), nullable=False),
        sa.Column("note", sa.Integer(), nullable=True),
        sa.Column("velocity", sa.Integer(), nullable=True),
        sa.Column("control", sa.Integer(), nullable=True),
        sa.Column("value", sa.Integer(), nullable=True),
        sa.Column(
            "event_metadata",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["audio_file_id"],
            ["audio_file.id"],
            name=op.f("fk_midi_event_audio_file_id_audio_file"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_midi_event")),
    )
    op.create_table(
        "physics_constraints",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "parameters",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("scene_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["scene_id"],
            ["scenes.id"],
            name=op.f("fk_physics_constraints_scene_id_scenes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_physics_constraints")),
    )
    op.create_table(
        "physics_objects",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "properties",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("scene_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["scene_id"],
            ["scenes.id"],
            name=op.f("fk_physics_objects_scene_id_scenes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_physics_objects")),
    )
    op.create_table(
        "scene_objects",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("scene_id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column(
            "properties",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "object_metadata",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["scene_id"],
            ["scenes.id"],
            name=op.f("fk_scene_objects_scene_id_scenes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_scene_objects")),
    )
    op.create_table(
        "timelines",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("duration", sa.Float(), nullable=False),
        sa.Column("scene_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["scene_id"],
            ["scenes.id"],
            name=op.f("fk_timelines_scene_id_scenes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_timelines")),
    )
    op.create_table(
        "universes",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "physics_parameters",
            postgresql.JSONB(astext_type=sa.Text()).with_variant(sa.JSON(), "sqlite"),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "music_parameters",
            postgresql.JSONB(astext_type=sa.Text()).with_variant(sa.JSON(), "sqlite"),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("creator_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("max_participants", sa.Integer(), nullable=False),
        sa.Column("collaborators_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"], ["users.id"], name=op.f("fk_universes_creator_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_universes")),
    )
    op.create_table(
        "visualizations",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("scene_id", GUID(length=32), nullable=False),
        sa.Column(
            "settings",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column(
            "data", JSONType(), server_default="{}", nullable=False
        ),
        sa.Column(
            "visualization_metadata",
            JSONType(),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["scene_id"],
            ["scenes.id"],
            name=op.f("fk_visualizations_scene_id_scenes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_visualizations")),
    )
    op.create_table(
        "animations",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("target_object", sa.String(), nullable=False),
        sa.Column("property_path", sa.String(), nullable=False),
        sa.Column("timeline_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["timeline_id"],
            ["timelines.id"],
            name=op.f("fk_animations_timeline_id_timelines"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_animations")),
    )
    op.create_table(
        "music_parameter",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("unit", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "metadata_json",
            postgresql.JSONB(astext_type=sa.Text()).with_variant(sa.JSON(), "sqlite"),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("universe_id", GUID(length=32), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["universe_id"],
            ["universes.id"],
            name=op.f("fk_music_parameter_universe_id_universes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_music_parameter")),
    )
    op.create_index(
        op.f("ix_music_parameter_id"), "music_parameter", ["id"], unique=False
    )
    op.create_table(
        "physics_parameter",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("unit", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "parameter_metadata",
            postgresql.JSONB(astext_type=sa.Text()).with_variant(sa.JSON(), "sqlite"),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("universe_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["universe_id"],
            ["universes.id"],
            name=op.f("fk_physics_parameter_universe_id_universes"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_physics_parameter")),
    )
    op.create_table(
        "storyboards",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("timeline_data", sa.JSON(), server_default="{}", nullable=False),
        sa.Column("scene_order", sa.JSON(), server_default="[]", nullable=False),
        sa.Column("transitions", sa.JSON(), server_default="{}", nullable=False),
        sa.Column("narrative", sa.JSON(), server_default="{}", nullable=False),
        sa.Column(
            "storyboard_metadata", sa.JSON(), server_default="{}", nullable=False
        ),
        sa.Column("universe_id", GUID(length=32), nullable=False),
        sa.Column("creator_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["creator_id"], ["users.id"], name=op.f("fk_storyboards_creator_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["universe_id"],
            ["universes.id"],
            name=op.f("fk_storyboards_universe_id_universes"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_storyboards")),
    )
    op.create_table(
        "keyframes",
        sa.Column("id", GUID(length=32), nullable=False),
        sa.Column("timestamp", sa.Float(), nullable=False),
        sa.Column(
            "data", JSONType(), server_default="{}", nullable=False
        ),
        sa.Column("storyboard_id", GUID(length=32), nullable=False),
        sa.Column("animation_id", GUID(length=32), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["animation_id"],
            ["animations.id"],
            name=op.f("fk_keyframes_animation_id_animations"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["storyboard_id"],
            ["storyboards.id"],
            name=op.f("fk_keyframes_storyboard_id_storyboards"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_keyframes")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("keyframes")
    op.drop_table("storyboards")
    op.drop_table("physics_parameter")
    op.drop_index(op.f("ix_music_parameter_id"), table_name="music_parameter")
    op.drop_table("music_parameter")
    op.drop_table("animations")
    op.drop_table("visualizations")
    op.drop_table("universes")
    op.drop_table("timelines")
    op.drop_table("scene_objects")
    op.drop_table("physics_objects")
    op.drop_table("physics_constraints")
    op.drop_table("midi_event")
    op.drop_table("exports")
    op.drop_table("ai_generations")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_full_name"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("scenes")
    op.drop_table("audio_file")
    op.drop_table("ai_model")
    # ### end Alembic commands ###
