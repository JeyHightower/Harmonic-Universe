version: '3.8'

services:
  backend:
    build:
      context: .
      target: ${DOCKER_TARGET:-development}
    volumes:
      - .:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - '5000:5000'
    environment:
      - FLASK_APP=app
      - FLASK_ENV=${FLASK_ENV:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-harmonic_universe}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-harmonic_universe}
    ports:
      - '5432:5432'
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - app-network

  celery:
    build:
      context: .
      target: ${DOCKER_TARGET:-development}
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-harmonic_universe}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - app-network

  celery-beat:
    build:
      context: .
      target: ${DOCKER_TARGET:-development}
    command: celery -A app.celery beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-harmonic_universe}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
