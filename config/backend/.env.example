# Flask Configuration
FLASK_APP=app
FLASK_ENV=development  # Change to 'production' in production
SECRET_KEY=your-secret-key-here  # Generate a secure random key in production
DEBUG=True  # Set to False in production

# Database Configuration
DATABASE_URL=sqlite:///dev.db  # Use PostgreSQL URL in production

# JWT Configuration
JWT_SECRET_KEY=your-jwt-secret-key  # Generate a secure random key in production
JWT_ACCESS_TOKEN_EXPIRES=3600  # 1 hour in seconds
JWT_REFRESH_TOKEN_EXPIRES=2592000  # 30 days in seconds

# Redis Configuration
REDIS_URL=redis://localhost:6379/0

# WebSocket Configuration
SOCKETIO_MESSAGE_QUEUE=redis://localhost:6379/0
SOCKETIO_PING_TIMEOUT=10
SOCKETIO_PING_INTERVAL=25

# Logging Configuration
LOG_LEVEL=DEBUG  # Set to INFO or WARNING in production
LOG_FILE=app.log
LOG_FORMAT=%(asctime)s [%(levelname)s] %(name)s: %(message)s
LOG_DATE_FORMAT=%Y-%m-%d %H:%M:%S
LOG_MAX_BYTES=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Security
CORS_ORIGINS=http://localhost:5173,http://localhost:3000  # Update with your frontend URLs in production

# Rate Limiting
RATELIMIT_ENABLED=True
RATELIMIT_DEFAULT=200/day;50/hour;1/second

# File Upload
MAX_CONTENT_LENGTH=16777216  # 16MB in bytes
UPLOAD_FOLDER=uploads

# Cache Configuration
CACHE_TYPE=simple  # Use 'redis' in production
CACHE_DEFAULT_TIMEOUT=300

# Mail Configuration
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-specific-password  # Use app-specific password for Gmail

# Instructions:
# 1. Copy this file to .env
# 2. Replace all placeholder values with your actual configuration
# 3. Generate secure random keys for SECRET_KEY and JWT_SECRET_KEY
# 4. Never commit the actual .env file to version control
