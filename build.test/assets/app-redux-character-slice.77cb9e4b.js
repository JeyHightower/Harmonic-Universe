import{a}from"./vendor-redux-toolkit.fa18e013.js";import{a as e,b as r,f as s,c as t,u as d,d as c}from"./app-redux-character-thunks.c46623e8.js";import{B as i}from"./app-utils.cd93f9c5.js";const n=a({name:"characters",initialState:{characters:[],currentCharacter:null,universeCharacters:{},status:"idle",error:null,isLoading:!1,success:!1,modalOpen:!1,modalType:null},reducers:{setCharacters:(a,e)=>{a.characters=e.payload,a.error=null},setCurrentCharacter:(a,e)=>{a.currentCharacter=e.payload,a.error=null},addCharacter:(a,e)=>{a.characters.push(e.payload),a.error=null},updateCharacterAction:(a,e)=>{var r;const s=a.characters.findIndex((a=>a.id===e.payload.id));-1!==s&&(a.characters[s]=e.payload),(null==(r=a.currentCharacter)?void 0:r.id)===e.payload.id&&(a.currentCharacter=e.payload),a.error=null},deleteCharacterAction:(a,e)=>{var r;a.characters=a.characters.filter((a=>a.id!==e.payload)),(null==(r=a.currentCharacter)?void 0:r.id)===e.payload&&(a.currentCharacter=null),a.error=null},openModal:(a,e)=>{a.modalOpen=!0,a.modalType=e.payload},closeModal:a=>{a.modalOpen=!1,a.modalType=null},clearError:a=>{a.error=null},clearSuccess:a=>{a.success=!1},clearCharacters:a=>{a.characters=[],a.universeCharacters={}},clearCurrentCharacter:a=>{a.currentCharacter=null}},extraReducers:a=>{a.addCase(e.pending,(a=>{a.status="loading",a.isLoading=!0})).addCase(e.fulfilled,((a,e)=>{a.status="succeeded",a.isLoading=!1,a.characters=e.payload||[]})).addCase(e.rejected,((a,e)=>{a.status="failed",a.isLoading=!1,a.error=e.payload,i&&(a.characters=[])})).addCase(r.pending,(a=>{a.status="loading",a.isLoading=!0})).addCase(r.fulfilled,((a,e)=>{a.status="succeeded",a.isLoading=!1;const r=e.meta.arg;r&&(a.universeCharacters[r]=e.payload||[])})).addCase(r.rejected,((a,e)=>{if(a.status="failed",a.isLoading=!1,a.error=e.payload,i){const r=e.meta.arg;r&&(a.universeCharacters[r]=[])}})).addCase(s.pending,(a=>{a.status="loading",a.isLoading=!0})).addCase(s.fulfilled,((a,e)=>{a.status="succeeded",a.isLoading=!1,a.currentCharacter=e.payload})).addCase(s.rejected,((a,e)=>{a.status="failed",a.isLoading=!1,a.error=e.payload,i&&(a.currentCharacter=null)})).addCase(t.pending,(a=>{a.status="loading",a.isLoading=!0})).addCase(t.fulfilled,((a,e)=>{if(a.status="succeeded",a.isLoading=!1,a.characters.push(e.payload),e.payload.universe_id){const r=e.payload.universe_id;a.universeCharacters[r]||(a.universeCharacters[r]=[]),a.universeCharacters[r].push(e.payload)}a.currentCharacter=e.payload})).addCase(t.rejected,((a,e)=>{if(a.status="failed",a.isLoading=!1,a.error=e.payload,i){const r={id:"demo-char-"+Math.random().toString(36).substring(2,10),name:e.meta.arg.name||"Mock Character",universe_id:e.meta.arg.universe_id,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString()};if(a.characters.push(r),a.currentCharacter=r,r.universe_id){const e=r.universe_id;a.universeCharacters[e]||(a.universeCharacters[e]=[]),a.universeCharacters[e].push(r)}a.status="succeeded",a.error=null}})).addCase(d.pending,(a=>{a.status="loading",a.isLoading=!0})).addCase(d.fulfilled,((a,e)=>{a.status="succeeded",a.isLoading=!1;const r=a.characters.findIndex((a=>a.id===e.payload.id));if(-1!==r&&(a.characters[r]=e.payload),e.payload.universe_id){const r=e.payload.universe_id;if(a.universeCharacters[r]){const s=a.universeCharacters[r].findIndex((a=>a.id===e.payload.id));-1!==s&&(a.universeCharacters[r][s]=e.payload)}}a.currentCharacter=e.payload})).addCase(d.rejected,((a,e)=>{if(a.status="failed",a.isLoading=!1,a.error=e.payload,i){const r=e.meta.arg.characterData,s=e.meta.arg.characterId;if(r&&s){const e={...r,id:s,updated_at:(new Date).toISOString()},t=a.characters.findIndex((a=>a.id===s));if(-1!==t&&(a.characters[t]=e),e.universe_id){const r=e.universe_id;if(a.universeCharacters[r]){const t=a.universeCharacters[r].findIndex((a=>a.id===s));-1!==t&&(a.universeCharacters[r][t]=e)}}a.currentCharacter=e,a.status="succeeded",a.error=null}}})).addCase(c.pending,(a=>{a.status="loading",a.isLoading=!0})).addCase(c.fulfilled,((a,e)=>{a.status="succeeded",a.isLoading=!1,a.characters=a.characters.filter((a=>a.id!==e.payload)),Object.keys(a.universeCharacters).forEach((r=>{a.universeCharacters[r]=a.universeCharacters[r].filter((a=>a.id!==e.payload))})),a.currentCharacter&&a.currentCharacter.id===e.payload&&(a.currentCharacter=null)})).addCase(c.rejected,((a,e)=>{if(a.status="failed",a.isLoading=!1,a.error=e.payload,i){const r=e.meta.arg;r&&(a.characters=a.characters.filter((a=>a.id!==r)),Object.keys(a.universeCharacters).forEach((e=>{a.universeCharacters[e]=a.universeCharacters[e].filter((a=>a.id!==r))})),a.currentCharacter&&a.currentCharacter.id===r&&(a.currentCharacter=null),a.status="succeeded",a.error=null)}}))}}),{setCharacters:l,setCurrentCharacter:u,addCharacter:o,updateCharacterAction:h,deleteCharacterAction:C,openModal:p,closeModal:f,clearError:g,clearSuccess:y,clearCharacters:v,clearCurrentCharacter:m}=n.actions,L=n.reducer;export{v as a,L as b,f as c,p as o};
