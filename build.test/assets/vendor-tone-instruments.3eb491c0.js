import"./vendor-tone-audio.70450c41.js";import{T as t,o as e,r as s,t as i,M as o,$ as a,Y as r,d as n,a0 as c,h,N as l,a1 as u,a2 as g,f as d,a3 as p,a4 as v,a5 as _,a6 as f}from"./vendor-tone-core-base.398f9a2a.js";import{V as y,f as m,E as x}from"./vendor-tone-components.680c7d7e.js";import{O as b,S as A,T as S}from"./vendor-tone-source.0b4b1ccd.js";import{_ as R}from"./vendor-tone-tslib.f5f62bcb.js";class k extends t{constructor(){super(e(k.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=t=>this._original_triggerRelease(t);const t=e(k.getDefaults(),arguments);this._volume=this.output=new y({context:this.context,volume:t.volume}),this.volume=this._volume.volume,s(this,"volume")}static getDefaults(){return Object.assign(t.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const s=this["_original_"+t]=this[t];this[t]=(...t)=>{const i=t[e],o=this.context.transport.schedule((i=>{t[e]=i,s.apply(this,t)}),i);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach((t=>this.context.transport.clear(t))),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,s,i){const o=this.toSeconds(s),a=this.toSeconds(e);return this.triggerAttack(t,o,i),this.triggerRelease(o+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class D extends k{constructor(){super(e(D.getDefaults(),arguments));const t=e(D.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(k.getDefaults(),{detune:0,onsilence:o,portamento:0})}triggerAttack(t,e,s=1){this.log("triggerAttack",t,e,s);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,s),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const s=this.toSeconds(e),i=t instanceof a?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const t=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,t,s)}else this.frequency.setValueAtTime(i,s);return this}}R([i(0)],D.prototype,"portamento",void 0);class V extends D{constructor(){super(e(V.getDefaults(),arguments)),this.name="Synth";const t=e(V.getDefaults(),arguments);this.oscillator=new b(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new m(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),s(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(D.getDefaults(),{envelope:Object.assign(r(x.getDefaults(),Object.keys(t.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(r(b.getDefaults(),[...Object.keys(A.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),0===this.envelope.sustain){const e=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+e+s)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class E extends V{constructor(){super(e(E.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=e(E.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,s(this,["oscillator","envelope"])}static getDefaults(){return c(D.getDefaults(),V.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const s=this.toSeconds(e),i=this.toFrequency(t instanceof a?t.toFrequency():t),o=i*this.octaves;return this.oscillator.frequency.setValueAtTime(o,s),this.oscillator.frequency.exponentialRampToValueAtTime(i,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}R([n(0)],E.prototype,"octaves",void 0),R([i(0)],E.prototype,"pitchDecay",void 0);class M extends k{constructor(){super(e(M.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=t=>this.releaseAll(t);const t=e(M.getDefaults(),arguments,["voice","options"]);h(!l(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const s=t.voice.getDefaults();this.options=Object.assign(s,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const i=this._voices.indexOf(this._dummyVoice);this._voices.splice(i,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(k.getDefaults(),{maxPolyphony:32,options:{},voice:V})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex((e=>e.voice===t));this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return h(t instanceof D,"Voice must extend Monophonic class"),t.connect(this.output),this._voices.push(t),t}u("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(.95*this._averageActiveVoices,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,s){t.forEach((t=>{const i=new g(this.context,t).toMidi(),o=this._getNextAvailableVoice();o&&(o.triggerAttack(t,e,s),this._activeVoices.push({midi:i,voice:o,released:!1}),this.log("triggerAttack",t,e))}))}_triggerRelease(t,e){t.forEach((t=>{const s=new g(this.context,t).toMidi(),i=this._activeVoices.find((({midi:t,released:e})=>t===s&&!e));i&&(i.voice.triggerRelease(e),i.released=!0,this.log("triggerRelease",t,e))}))}_scheduleEvent(t,e,s,i){h(!this.disposed,"Synth was already disposed"),s<=this.now()?"attack"===t?this._triggerAttack(e,s,i):this._triggerRelease(e,s):this.context.setTimeout((()=>{this.disposed||this._scheduleEvent(t,e,s,i)}),s-this.now())}triggerAttack(t,e,s){Array.isArray(t)||(t=[t]);const i=this.toSeconds(e);return this._scheduleEvent("attack",t,i,s),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const s=this.toSeconds(e);return this._scheduleEvent("release",t,s),this}triggerAttackRelease(t,e,s,i){const o=this.toSeconds(s);if(this.triggerAttack(t,o,i),d(e)){h(d(t),"If the duration is an array, the notes must also be an array");for(let s=0;s<t.length;s++){const i=e[Math.min(s,e.length-1)],a=this.toSeconds(i);h(a>0,"The duration must be greater than 0"),this.triggerRelease(t[s],o+a)}}else{const s=this.toSeconds(e);h(s>0,"The duration must be greater than 0"),this.triggerRelease(t,o+s)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(t){const e=r(t,["onsilence","context"]);return this.options=c(this.options,e),this._voices.forEach((t=>t.set(e))),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach((({voice:t})=>{t.triggerRelease(e)})),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach((t=>t.dispose())),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class O extends k{constructor(){super(e(O.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=e(O.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),s={};Object.keys(t.urls).forEach((e=>{const i=parseInt(e,10);if(h(p(e)||l(i)&&isFinite(i),`url key is neither a note or midi pitch: ${e}`),p(e)){const i=new a(this.context,e).toMidi();s[i]=t.urls[e]}else l(i)&&isFinite(i)&&(s[i]=t.urls[i])})),this._buffers=new v({urls:s,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(k.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:o,onerror:o,release:.1,urls:{}})}_findClosest(t){let e=0;for(;e<96;){if(this._buffers.has(t+e))return-e;if(this._buffers.has(t-e))return e;e++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,s=1){return this.log("triggerAttack",t,e,s),Array.isArray(t)||(t=[t]),t.forEach((t=>{const i=_(new a(this.context,t).toFrequency()),o=Math.round(i),r=i-o,n=this._findClosest(o),c=o-n,h=this._buffers.get(c),l=f(n+r),u=new S({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:l}).connect(this.output);u.start(e,0,h.duration/l,s),d(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(u),u.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const t=this._activeSources.get(o),e=t.indexOf(u);-1!==e&&t.splice(e,1)}}})),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach((t=>{const s=new a(this.context,t).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const t=this._activeSources.get(s);e=this.toSeconds(e),t.forEach((t=>{t.stop(e)})),this._activeSources.set(s,[])}})),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach((t=>{for(;t.length;){t.shift().stop(e)}})),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,s,i=1){const o=this.toSeconds(s);return this.triggerAttack(t,o,i),d(e)?(h(d(t),"notes must be an array when duration is array"),t.forEach(((t,s)=>{const i=e[Math.min(s,e.length-1)];this.triggerRelease(t,o+this.toSeconds(i))}))):this.triggerRelease(t,o+this.toSeconds(e)),this}add(t,e,s){if(h(p(t)||isFinite(t),`note must be a pitch or midi: ${t}`),p(t)){const i=new a(this.context,t).toMidi();this._buffers.add(i,e,s)}else this._buffers.add(t,e,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach((t=>{t.forEach((t=>t.dispose()))})),this._activeSources.clear(),this}}R([i(0)],O.prototype,"attack",void 0),R([i(0)],O.prototype,"release",void 0);export{M as P,V as S};
