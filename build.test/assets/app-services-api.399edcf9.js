import{a as e}from"./vendor-tone-lib.58935e90.js";import{B as t,A as r,H as o,l as s,J as n,K as a}from"./app-utils.cd93f9c5.js";import{e as i,g as d}from"./app-services-other.47edd63d.js";import"./vendor-tone-util.a79eb63f.js";import"./vendor-tone-helpers.07e4d08d.js";import"./vendor-tone-platform.4f06f964.js";import"./vendor-tone-browser.dd42b0e8.js";import"./vendor-tone-classes.909fbaba.js";import"./vendor-tone-core-base.398f9a2a.js";import"./vendor-tone-defaults.617853c7.js";import"./vendor-tone-cancel.b93f499f.js";import"./vendor-tone-adapters.ec1cb8a7.js";import"./vendor-tone-lodash.1d9c6a83.js";import"./vendor-mui-core.4359195f.js";import"./vendor-tone-useThemeProps.a5833127.js";import"./vendor-tone-esm.8edb30e2.js";import"./vendor-tone-type.9e20d569.js";import"./vendor-react-core.73efc664.js";import"./vendor-tone-classnames.ea5eadd4.js";import"./vendor-tone-dist.6485732f.js";import"./vendor-tone-module.5bbe5778.js";import"./vendor-emotion-core.fcf170e6.js";import"./vendor-tone-src.89c6b4f5.js";import"./vendor-react-dom.e7130502.js";import"./vendor-react-scheduler.c51d43b5.js";import"./vendor-tone-styled-engine.72d9b7d5.js";import"./vendor-emotion-styled.ae0fdb08.js";import"./vendor-tone-StyledEngineProvider.626b917c.js";import"./vendor-tone-GlobalStyles.58bf1e29.js";import"./vendor-tone-createTheme.6c673f08.js";import"./vendor-tone-styleFunctionSx.dbcb4226.js";import"./vendor-tone-audio.70450c41.js";import"./vendor-tone-events.9afa7530.js";import"./vendor-tone-source.0b4b1ccd.js";import"./vendor-tone-tslib.f5f62bcb.js";import"./vendor-tone-signal.648ab60f.js";import"./vendor-tone-components.680c7d7e.js";import"./vendor-tone-hooks.ee856eec.js";import"./vendor-tone-es.9387ac1c.js";import"./vendor-tone-dist-web.442e5e08.js";import"./vendor-tone-Selector.7ca3b0ed.js";import"./vendor-tone-TimePanel.ca272323.js";import"./vendor-tone-panels.35d19878.js";import"./vendor-tone-DatetimePanel.eb5b0baf.js";import"./vendor-tone-DatePanel.9f66ebd0.js";import"./vendor-tone-WeekPanel.896778be.js";import"./vendor-tone-MonthPanel.70b7688e.js";import"./vendor-tone-QuarterPanel.144363f0.js";import"./vendor-tone-YearPanel.b92617d1.js";import"./vendor-tone-DecadePanel.8c0dc02f.js";import"./vendor-tone-TabPanelList.10481429.js";import"./vendor-tone-TabNavList.2513addc.js";import"./vendor-tone-Dialog.2ffc21c8.js";import"./vendor-tone-Content.9808c346.js";import"./vendor-tone-context.2287e470.js";import"./vendor-tone-SubMenu.1b0c3984.js";import"./vendor-tone-Popup.9ff27a32.js";import"./vendor-tone-SingleObserver.ddf11abe.js";import"./vendor-tone-icons.388eb8da.js";import"./vendor-tone-asn.f94d41fd.js";import"./vendor-tone-message.06244fbe.js";import"./vendor-tone-config-provider.2fc53c46.js";import"./vendor-tone-form.6dd4e248.js";import"./vendor-tone-grid.9235ce83.js";import"./vendor-tone-locale-provider.8d53e5b8.js";import"./vendor-tone-modal.4772d80b.js";import"./vendor-tone-button.429dcaea.js";import"./vendor-tone-space.95ee87ca.js";import"./vendor-tone-locale.9bc1cdd3.js";import"./vendor-tone-useModal.b905cda5.js";import"./vendor-tone-tooltip.4e7d946d.js";import"./vendor-tone-FormItem.7dbdfc6f.js";import"./vendor-tone-notification.2961f1bd.js";import"./vendor-tone-empty.6f888680.js";import"./vendor-tone-channel.a150b5c9.js";import"./vendor-tone-menu.86d2dba0.js";import"./vendor-tone-layout.4cbd4c32.js";import"./vendor-tone-useMediaQuery.95247262.js";import"./vendor-mui-buttons.74e6c144.js";import"./vendor-tone-system.c96386b3.js";import"./vendor-mui-inputs.b77362ac.js";import"./vendor-tone-validation.226ee14c.js";import"./vendor-tone-LocalizationProvider.b505657c.js";import"./vendor-tone-locales.e8ab67da.js";import"./vendor-tone-RtlProvider.df0b182e.js";import"./vendor-tone-constants.d67dcaf6.js";import"./vendor-mui-dialogs.59185291.js";import"./vendor-tone-instruments.3eb491c0.js";import"./vendor-tone-effects.66f8dc4e.js";import"./vendor-mui-list.1c6188a6.js";import"./vendor-tone-Stack.f8b60d0c.js";import"./vendor-mui-menus.328affd2.js";import"./vendor-tone-DefaultPropsProvider.3d25d93b.js";import"./vendor-tone-env.26551821.js";import"./vendor-react-props.65efe0a6.js";import"./app-core.4fc76094.js";import"./vendor-react-router.6468192e.js";import"./vendor-react-redux.ca23f922.js";import"./vendor-tone-shim.e999ecad.js";import"./vendor-tone-cjs.5d603e0b.js";import"./vendor-tone-use-sync-external-store-shim.d3746bbc.js";import"./app-redux-core.93965072.js";import"./vendor-redux-toolkit.fa18e013.js";import"./vendor-redux-core.f9606c35.js";import"./vendor-redux-persist.1ece7284.js";import"./app-redux-auth-slice.749a10ad.js";import"./app-services-api.399edcf9.js";import"./app-redux-auth-thunks.3612091e.js";import"./app-redux-physics-slice.b0d37703.js";import"./app-redux-physics-thunks.c58b7b1a.js";import"./app-redux-scene-slice.81f21730.js";import"./app-redux-scene-thunks.d96f7130.js";import"./app-redux-character-slice.77cb9e4b.js";import"./app-redux-character-thunks.c46623e8.js";import"./app-redux-note-slice.2ed79aa2.js";import"./app-redux-note-thunks.e47bcfeb.js";import"./app-redux-other-slices.a7022ed8.js";import"./app-other-components.5e297c7e.js";import"./app-modals.11788519.js";import"./app-contexts.6347d155.js";import"./app-constants.4a812be2.js";import"./vendor-mui-card.3348f8fd.js";import"./vendor-mui-layout.b03fb29f.js";import"./vendor-tone-Container.5ed3ed7d.js";import"./vendor-mui-icons-other.bc15c9b6.js";import"./app-characters-components.a508a592.js";import"./vendor-tone-select.c6c7620f.js";import"./vendor-tone-spin.d13f75fd.js";import"./vendor-tone-avatar.122bfb6a.js";import"./vendor-tone-popover.9c9808a5.js";import"./vendor-tone-upload.27f9a3b5.js";import"./vendor-tone-UploadList.9372bedd.js";import"./vendor-tone-progress.cc741b51.js";import"./vendor-tone-card.8385b307.js";import"./vendor-tone-skeleton.45affeec.js";import"./vendor-tone-tabs.69cd71fe.js";import"./vendor-tone-switch.4218e0a6.js";import"./app-scenes-components.e3ba29e5.js";import"./app-scenes-form.07f7a30a.js";import"./vendor-tone-dayjs.54e2289e.js";import"./vendor-tone-alert.89362924.js";import"./vendor-tone-input.876080ec.js";import"./vendor-tone-divider.a6c32c3c.js";import"./vendor-tone-date-picker.3f71bbe3.js";import"./vendor-tone-tag.30f4ea2f.js";import"./vendor-tone-generate.3bd3dbc2.js";import"./vendor-tone-generatePicker.e957b148.js";import"./vendor-tone-radio.0de19148.js";import"./vendor-tone-typography.2404bb54.js";import"./vendor-tone-Base.81f829aa.js";import"./vendor-tone-copy-to-clipboard.e7f533f2.js";import"./vendor-tone-toggle-selection.c563a038.js";import"./app-physics-components.dcafff4c.js";import"./app-physics-list.9dc0d346.js";import"./app-routes.fd68d670.js";import"./vendor-tone-DatePicker.de25fe8c.js";import"./vendor-tone-DesktopDatePicker.f7be1484.js";import"./vendor-tone-dateViewRenderers.da97565f.js";import"./vendor-tone-DateCalendar.07d8b1f1.js";import"./vendor-tone-PickersDay.36f5e5b8.js";import"./vendor-tone-PickersCalendarHeader.d19a4873.js";import"./vendor-tone-YearCalendar.53b1f79c.js";import"./vendor-tone-MonthCalendar.110ab177.js";import"./vendor-tone-DateField.a7ba308d.js";import"./vendor-tone-useField.40869926.js";import"./vendor-tone-PickersTextField.1b1b2159.js";import"./vendor-tone-PickersInput.177ec5f5.js";import"./vendor-tone-PickersInputBase.b4cbf25e.js";import"./vendor-tone-PickersSectionList.b3696c3f.js";import"./vendor-tone-PickersFilledInput.ea55e758.js";import"./vendor-tone-PickersOutlinedInput.cd7d73be.js";import"./vendor-tone-useDesktopPicker.83b3e221.js";import"./vendor-tone-usePicker.425377a1.js";import"./vendor-tone-PickersLayout.80c91798.js";import"./vendor-tone-PickersActionBar.6bdc4ff9.js";import"./vendor-tone-PickersShortcuts.51e2ec2a.js";import"./vendor-tone-MobileDatePicker.51f93f0c.js";import"./vendor-tone-useMobilePicker.b0b52352.js";import"./vendor-tone-input-number.28372503.js";const c=()=>parseInt(sessionStorage.getItem("rate_limit_cooldown")||"0")>Date.now();(()=>{const e=1e4,r=t?20:10;let o=[];const s=new Map;setInterval((()=>{const t=Date.now();o=o.filter((r=>t-r<e)),0===o.length&&s.clear()}),5e3)})();const m=()=>o.BASE_URL,l=e=>{if(!e)return null;if(e.includes("/undefined")||e.includes("/null")){let t=e.replace(/\/[^\/]+\/undefined\//g,"/");if(t=t.replace(/\/[^\/]+\/null\//g,"/"),t=t.replace(/\/undefined($|\/)/g,"/"),t=t.replace(/\/null($|\/)/g,"/"),t=t.replace(/\/+/g,"/"),t.startsWith("/")||t.startsWith("http")||(t="/"+t),t.length>1&&t.endsWith("/")&&(t=t.slice(0,-1)),t.includes("undefined")||t.includes("null"))return null;e=t}if(e.startsWith("http"))return e;let r=e;if(r.includes("/api/api/")&&(r=r.replace("/api/api/","/api/")),t)return r.startsWith("/api/")||(r.startsWith("/")&&(r=r.substring(1)),r=`/api/${r}`),r;const o=m();if(r.startsWith("/api/")){if(o){return`${o}${r}`}return r}if(r.startsWith("/")||(r="/"+r),r.startsWith("/api/")||(r=`/api${r}`),o){return`${o}${r}`}return r},u=async(e,t,o=null,s={})=>{try{if(null===t||t.includes("undefined")||t.includes("null"))return Promise.resolve({data:{message:"Request prevented due to invalid parameters",error:"URL contains undefined or null values",[s.entityType||"data"]:s.defaultData||[],[s.entitySingular||"item"]:s.defaultItem||{}}});const n=l(t);if(null===n){const e=s.entityType||"data",t=s.entitySingular||"item";return Promise.resolve({data:{message:"Request prevented due to invalid parameters",error:"URL contains undefined or null values",[e]:s.defaultData||[],[t]:s.defaultItem||{}}})}const a=localStorage.getItem(r.TOKEN_KEY),i={"Content-Type":"application/json",...s.headers};if(a){let e=a;a.startsWith("Bearer ")||(e=`Bearer ${a}`),i.Authorization=e,a.startsWith("demo-")&&(i["X-Demo-Mode"]="true")}0;return await g({method:e,url:n,data:o,headers:i,...s})}catch(n){throw n}},p=m(),v={baseURL:p,headers:o.HEADERS,timeout:o.TIMEOUT,withCredentials:o.WITH_CREDENTIALS};v.timeout=2e4,v.maxRedirects=2,v.maxContentLength=2097152,v.decompress=!0;const g=e.create(v),f=()=>{const e=o.MOCK_ENABLED,t=localStorage.getItem(r.TOKEN_KEY),s=t&&t.toString().startsWith("demo-");return e||s},h=async()=>{if(f()){const e=`demo-${Date.now()}`,t=`demo-${e}-${Date.now()}-${Date.now()+36e5}`,o=`demo-refresh-${e}-${Date.now()}-${Date.now()+864e5}`,s={id:e,email:"demo@example.com",username:"DemoUser",is_demo:!0,created_at:(new Date).toISOString()};return localStorage.setItem(r.TOKEN_KEY,t),localStorage.setItem(r.REFRESH_TOKEN_KEY,o),localStorage.setItem(r.USER_KEY,JSON.stringify(s)),{data:{token:t,refreshToken:o,user:s}}}const t=localStorage.getItem(r.TOKEN_KEY),o=localStorage.getItem(r.REFRESH_TOKEN_KEY);if(t&&t.toString().startsWith("demo")){let e;try{const t=localStorage.getItem(r.USER_KEY);if(t){e=JSON.parse(t).id}}catch(s){}if(!e&&t){const r=t.split("-");r.length>1&&(e=r[1])}e=e||`demo-${Date.now()}`;const o=`demo-${e}-${Date.now()}-${Date.now()+36e5}`,n=`demo-refresh-${e}-${Date.now()}-${Date.now()+864e5}`,a={id:e,email:"demo@example.com",username:"DemoUser",is_demo:!0,created_at:(new Date).toISOString()};return localStorage.setItem(r.TOKEN_KEY,o),localStorage.setItem(r.REFRESH_TOKEN_KEY,n),localStorage.setItem(r.USER_KEY,JSON.stringify(a)),{data:{token:o,refreshToken:n,user:a}}}if(!t&&!o){const e=`demo-${Date.now()}`,t=`demo-${e}-${Date.now()}-${Date.now()+36e5}`,o=`demo-refresh-${e}-${Date.now()}-${Date.now()+864e5}`,s={id:e,email:"demo@example.com",username:"DemoUser",is_demo:!0,created_at:(new Date).toISOString()};return localStorage.setItem(r.TOKEN_KEY,t),localStorage.setItem(r.REFRESH_TOKEN_KEY,o),localStorage.setItem(r.USER_KEY,JSON.stringify(s)),{data:{token:t,refreshToken:o,user:s}}}if(t&&!o){const e=`refresh-${Date.now()}-${Date.now()+864e5}`;return localStorage.setItem(r.REFRESH_TOKEN_KEY,e),{data:{token:t,refreshToken:e}}}if(o)try{const t=await e.post(`${p}/api/auth/refresh`,{refresh_token:o},{baseURL:"",headers:{"Content-Type":"application/json"}});return t.data&&t.data.token&&(localStorage.setItem(r.TOKEN_KEY,t.data.token),t.data.refreshToken&&localStorage.setItem(r.REFRESH_TOKEN_KEY,t.data.refreshToken)),t}catch(n){const e=`demo-${Date.now()}`,t=`demo-${e}-${Date.now()}-${Date.now()+36e5}`,o=`demo-refresh-${e}-${Date.now()}-${Date.now()+864e5}`;return localStorage.setItem(r.TOKEN_KEY,t),localStorage.setItem(r.REFRESH_TOKEN_KEY,o),{data:{token:t,refreshToken:o}}}throw new Error("Unexpected state in refreshToken function")};g.interceptors.request.use((e=>{const t=localStorage.getItem(r.TOKEN_KEY);return t&&(e.headers.Authorization=`Bearer ${t}`),e}),(e=>Promise.reject(e))),g.interceptors.response.use((e=>e),(async e=>{if(e.config&&e.config._isRetry)return Promise.reject(e);if(e.response&&401===e.response.status){const o=e.config;if(o._isRetry=!0,(o.url.includes("/universes")||o.url.includes("/scenes")||o.url.includes("/characters"))&&f())return Promise.reject({...e,_useMockData:!0});try{const t=await h();return t&&t.data&&t.data.token?(o.headers.Authorization=`Bearer ${t.data.token}`,g(o)):Promise.reject(e)}catch(t){const o=localStorage.getItem(r.TOKEN_KEY);return o&&o.toString().startsWith("demo")||(localStorage.removeItem(r.TOKEN_KEY),localStorage.removeItem(r.REFRESH_TOKEN_KEY),"undefined"!=typeof window&&(window.location.href="/?login=true")),Promise.reject(e)}}return Promise.reject(e)}));const S={login:e=>g.post(d("auth","login","/api/auth/login"),e),register:e=>g.post(d("auth","register","/api/auth/signup"),e),demoLogin:async()=>{var e,t,o;try{if(!0||c()){const e={id:"demo-"+Math.random().toString(36).substring(2,10),username:"demo_user",email:"demo@harmonic-universe.com",firstName:"Demo",lastName:"User",role:"user",createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()},t="demo-token-"+Math.random().toString(36).substring(2,15);return localStorage.setItem(r.TOKEN_KEY,t),localStorage.setItem(r.USER_KEY,JSON.stringify(e)),localStorage.setItem(r.REFRESH_TOKEN_KEY,"demo-refresh-"+Math.random().toString(36).substring(2,15)),{data:{message:"Demo login successful (mock)",user:e,token:t},status:200}}const e=d("auth","demoLogin","/api/auth/demo-login"),t=await g.get(e);if(!t.data)throw new Error("Invalid response from server: missing data");if(!t.data.token)throw new Error("Invalid response from server: missing token");if(!t.data.user)throw new Error("Invalid response from server: missing user data");return localStorage.setItem(r.TOKEN_KEY,t.data.token),localStorage.setItem(r.USER_KEY,JSON.stringify(t.data.user)),t.data.refresh_token?localStorage.setItem(r.REFRESH_TOKEN_KEY,t.data.refresh_token):localStorage.setItem(r.REFRESH_TOKEN_KEY,"refresh-"+Math.random().toString(36).substring(2,15)),t}catch(s){if(s.response,429===(null==(e=s.response)?void 0:e.status)||401===(null==(t=s.response)?void 0:t.status)){const e={id:"demo-fallback-"+Math.random().toString(36).substring(2,10),username:"demo_user",email:"demo@harmonic-universe.com",firstName:"Demo",lastName:"User",role:"user",createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()},t="demo-token-"+Math.random().toString(36).substring(2,15);return localStorage.setItem(r.TOKEN_KEY,t),localStorage.setItem(r.USER_KEY,JSON.stringify(e)),localStorage.setItem(r.REFRESH_TOKEN_KEY,"demo-refresh-"+Math.random().toString(36).substring(2,15)),{data:{message:`Demo login successful (mock due to ${null==(o=s.response)?void 0:o.status})`,user:e,token:t},status:200}}throw s}},validateToken:async()=>{var e,t;try{const t=localStorage.getItem(r.TOKEN_KEY);if(!t)return Promise.reject({message:"No authentication token found"});if(t.startsWith("demo-")){let e,t=null;try{const o=localStorage.getItem(r.USER_KEY);if(o){const r=JSON.parse(o);t=r,e=r.id||`demo-${Date.now()}`}else e=`demo-${Date.now()}`}catch(o){e=`demo-${Date.now()}`}const s=`demo-${e}-${Date.now()}`;localStorage.setItem(r.TOKEN_KEY,s);const n=`demo-refresh-${e}-${Date.now()}`;localStorage.setItem(r.REFRESH_TOKEN_KEY,n);const a=t||{id:e,username:"demo_user",email:"demo@harmonic-universe.com",firstName:"Demo",lastName:"User",role:"user",is_demo:!0,createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()};return a.id=e,localStorage.setItem(r.USER_KEY,JSON.stringify(a)),{data:{user:a,message:"Demo token validated",token:s}}}const s=await u("get","/api/auth/validate");return(null==(e=null==s?void 0:s.data)?void 0:e.user)&&localStorage.setItem(r.USER_KEY,JSON.stringify(s.data.user)),{data:s.data}}catch(s){try{const e=localStorage.getItem(r.USER_KEY),t=localStorage.getItem(r.TOKEN_KEY);if(e&&t&&t.startsWith("demo-")){const t=JSON.parse(e),o=(null==t?void 0:t.id)||`demo-${Date.now()}`,s=`demo-${o}-${Date.now()}`,n=`demo-refresh-${o}-${Date.now()}`,a={...t,id:o,is_demo:!0,updatedAt:(new Date).toISOString()};return localStorage.setItem(r.TOKEN_KEY,s),localStorage.setItem(r.REFRESH_TOKEN_KEY,n),localStorage.setItem(r.USER_KEY,JSON.stringify(a)),{data:{user:a,message:"Using refreshed demo session",token:s}}}if(e){return{data:{user:JSON.parse(e),message:"Using stored user data"}}}}catch(o){}if(401===(null==(t=s.response)?void 0:t.status)){const e=localStorage.getItem(r.TOKEN_KEY);e&&e.startsWith("demo-")||(localStorage.removeItem(r.TOKEN_KEY),localStorage.removeItem(r.REFRESH_TOKEN_KEY),localStorage.removeItem(r.USER_KEY))}throw s}},refreshToken:async()=>{const e=localStorage.getItem(r.TOKEN_KEY),t=localStorage.getItem(r.REFRESH_TOKEN_KEY);if(e&&e.toString().startsWith("demo")){const e=`demo-token-${Date.now()}`,t=`demo-refresh-${Date.now()}`;return localStorage.setItem(r.TOKEN_KEY,e),localStorage.setItem(r.REFRESH_TOKEN_KEY,t),{data:{token:e,refresh_token:t,message:"Token refreshed successfully (mock)"},status:200}}if(!t)throw new Error("No refresh token available");return g.post(d("auth","refresh","/api/auth/refresh"),{refresh_token:t})},logout:async()=>{const e=localStorage.getItem(r.TOKEN_KEY);return e&&e.startsWith("demo-")?(localStorage.removeItem(r.TOKEN_KEY),localStorage.removeItem(r.REFRESH_TOKEN_KEY),localStorage.removeItem(r.USER_KEY),{data:{message:"Demo user logged out successfully"},status:200}):g.post(d("auth","logout","/api/auth/logout"),{},{headers:{Authorization:`Bearer ${e}`}})},checkAuth:async()=>{var e;try{return{data:{message:"Authentication check successful",user:(await g.get(d("user","profile","/api/user/profile"))).data.profile}}}catch(t){throw s("api","Auth check failed",{error:t.message,response:null==(e=t.response)?void 0:e.data}),t}},getUserProfile:async()=>{var e,t,r;try{const r=n.get(a.USER_PROFILE.key);if(r)return s("api","Using cached user profile",{profile:r}),{data:{message:"User profile retrieved from cache",profile:r}};const o=await g.get(d("user","profile","/api/user/profile"));s("api","Raw user profile response",{response:o});let i=null;if(null==(e=null==o?void 0:o.data)?void 0:e.profile)i=o.data.profile;else if(null==(t=null==o?void 0:o.data)?void 0:t.user)i=o.data.user;else if("object"==typeof(null==o?void 0:o.data)&&null!==o.data){const{message:e,error:t,...r}=o.data;(r.id||r.username||r.email)&&(i=r)}if(!i)throw new Error("Could not extract valid profile data from response");return n.set(a.USER_PROFILE.key,i,a.USER_PROFILE.ttl),s("api","Processed user profile data",{profileData:i}),{data:{message:"User profile retrieved successfully",profile:i}}}catch(o){throw s("api","Error fetching user profile",{error:o.message,response:null==(r=o.response)?void 0:r.data,stack:o.stack}),o}},updateUserProfile:e=>g.put(d("user","profile","/api/user/profile"),e),updateUserSettings:e=>g.put(d("user","settings","/api/user/settings"),e),clearUserProfileCache:()=>n.clear(a.USER_PROFILE.key),getUniverses:async(e={})=>{var t;const o=localStorage.getItem(r.TOKEN_KEY),s=localStorage.getItem(r.USER_KEY);let n=null,a=null;try{s&&(a=JSON.parse(s),n=a.id)}catch(i){}if(o&&o.toString().startsWith("demo-")||n&&n.toString().includes("demo")){n||(n=`demo-${Date.now()}`,a={id:n,username:"demo_user",email:"demo@harmonic-universe.com",firstName:"Demo",lastName:"User",role:"user",is_demo:!0},localStorage.setItem(r.USER_KEY,JSON.stringify(a)));return{data:{message:"Mock universes retrieved successfully",universes:[{id:1001,user_id:n,name:"Demo Universe 1",description:"A sample universe for exploring the application",is_public:!0,created_at:new Date(Date.now()-864e5).toISOString(),updated_at:(new Date).toISOString()},{id:1002,user_id:n,name:"Demo Universe 2",description:"Another sample universe with different properties",is_public:!1,created_at:new Date(Date.now()-1728e5).toISOString(),updated_at:new Date(Date.now()-864e5).toISOString()}]},status:200}}try{const t=l("/api/universes");return await u("get",t,null,{params:e})}catch(d){if(401===(null==(t=d.response)?void 0:t.status)&&o)try{await h();const t=l("/api/universes");return await u("get",t,null,{params:e})}catch(c){return{data:{message:"Could not authenticate user",universes:[]},status:200}}return{data:{message:d.message||"Error fetching universes",universes:[]},status:200}}},createUniverse:async e=>{var t,r,o,s,n;const a=d("universes","create","/universes"),i=l(a);try{return await g.post(i,e)}catch(c){if("localhost"===window.location.hostname){return{status:201,data:{message:"Universe created successfully (mock)",universe:{id:Math.floor(1e4*Math.random()),name:e.name,description:e.description||"",is_public:void 0===e.is_public||e.is_public,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),user_id:1}}}}const a=(null==(r=null==(t=c.response)?void 0:t.data)?void 0:r.message)||"Error creating universe";return{status:(null==(o=c.response)?void 0:o.status)||500,data:{error:(null==(n=null==(s=c.response)?void 0:s.data)?void 0:n.error)||c.message,message:a}}}},getUniverse:(e,t={})=>{if(null==e||"undefined"===e||"null"===e||""===e){const t=localStorage.getItem("lastViewedUniverseId");if(!t||isNaN(parseInt(t,10)))return Promise.resolve({data:{universe:{},message:"No universe selected",recovered:!1}});e=parseInt(t,10)}if(""===e||isNaN(parseInt(e,10))||parseInt(e,10)<=0)return Promise.resolve({data:{universe:{},message:`Invalid universe ID format: ${e}`,error:"Invalid ID format"}});const r=parseInt(e,10);if(isNaN(r)||r<=0)return Promise.resolve({data:{universe:{},message:`Invalid universe ID value: ${r}`,error:"Invalid ID value"}});let o;localStorage.setItem("lastViewedUniverseId",r.toString());try{const e=d("universes","get",`/universes/${r}`);if("function"==typeof e)o=e(r);else{if(!e)throw new Error(`No valid endpoint for universe ${r}`);o=e}if(!o||o.includes("undefined")||o.includes("null"))throw new Error(`Invalid URL generated: ${o}`);o=l(o)}catch(s){return Promise.resolve({data:{universe:{},message:`Error generating API URL: ${s.message}`,error:"URL generation failed"}})}return u("get",o,null,{entityType:"universe",entitySingular:"universe",params:t,defaultData:{}}).then((e=>{if(!e||!e.data)return{data:{universe:null,message:"Empty response"}};if(e.data.universe&&e.data.message)return e;if(e.data.id&&!e.data.universe)return{data:{universe:e.data,message:"Universe retrieved successfully"}};if(e.data.message&&!e.data.universe&&e.universe)return{data:{universe:e.universe,message:e.data.message}};if(e.data.message&&e.data.universe)return e;for(const t in e.data)if(e.data[t]&&"object"==typeof e.data[t]&&!Array.isArray(e.data[t])&&(e.data[t].id||"universe"===t&&Object.keys(e.data[t]).length>0))return{data:{universe:e.data[t],message:e.data.message||"Universe retrieved"}};return e}))},updateUniverse:async(e,t)=>{try{const r=d("universes","update",`/universes/${e}`),o="function"==typeof r?r(e):r,s=l(o);return await g.put(s,t)}catch(r){throw r}},deleteUniverse:async e=>{try{const t=d("universes","delete",`/universes/${e}`),r="function"==typeof t?t(e):t,o=l(r);return await g.delete(o)}catch(t){throw t}},getUniverseScenes:e=>{if("undefined"!==e&&"null"!==e||(e=void 0),null==e||""===e){const t=localStorage.getItem("lastViewedUniverseId");if(!t||isNaN(parseInt(t,10)))return Promise.resolve({status:200,data:{scenes:[],message:"No universe selected",error:"Invalid universe ID"}});e=parseInt(t,10)}const t="string"!=typeof e||isNaN(parseInt(e,10))?e:parseInt(e,10);t&&"number"==typeof t&&localStorage.setItem("lastViewedUniverseId",t.toString());const r=[`/scenes/universe/${t}`,`/universes/${t}/scenes`,`/universes/${t}?include_scenes=true`,`/scenes?universe_id=${t}`];return new Promise((e=>{const t=o=>{if(o>=r.length)return e({status:200,data:{scenes:[],message:"No scenes found for this universe",_debug_info:"All scene endpoints failed"}});const s=l(r[o]);u("get",s).then((r=>{var n;let a=[];if(!r)return void t(o+1);const i=r.data||r;if(Array.isArray(i))a=i;else if((null==i?void 0:i.scenes)&&Array.isArray(i.scenes))a=i.scenes;else if((null==i?void 0:i.data)&&Array.isArray(i.data))a=i.data;else if((null==(n=null==i?void 0:i.universe)?void 0:n.scenes)&&Array.isArray(i.universe.scenes))a=i.universe.scenes;else if(i&&"object"==typeof i)for(const[e,t]of Object.entries(i))if(Array.isArray(t)&&t.length>0&&(e.includes("scene")||t[0]&&(t[0].universe_id||t[0].name))){a=t;break}if(a&&a.length>0)return e({status:200,data:{scenes:a,message:"Scenes retrieved successfully",_debug_endpoint:s}});t(o+1)})).catch((e=>{t(o+1)}))};t(0)}))},updateUniversePhysics:(e,t)=>{const r=l(`/universes/${e}/physics`);return g.put(r,{physics_params:t})},updateUniverseHarmony:(e,t)=>{const r=l(`/universes/${e}/harmony`);return g.put(r,{harmony_params:t})},getScenes:(e={})=>{var t;const o=null==(t=localStorage.getItem(r.TOKEN_KEY))?void 0:t.startsWith("demo-"),s=c(),n=parseInt(sessionStorage.getItem("last_scene_throttle")||"0"),a=Date.now()-n<3e4;let i=null;if("string"==typeof e||"number"==typeof e?i=e:e.universeId&&(i=e.universeId),o||s||a||"1001"===i||1001===i){const e=localStorage.getItem(r.USER_KEY);let t="demo-user";try{if(e){t=JSON.parse(e).id||t}}catch(v){}const o=[{id:2001,name:"Demo Scene 1",description:"Introduction to the universe",content:"This is the content of the first demo scene",universe_id:i||1001,user_id:t,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),order:1,status:"draft",scene_type:"default"},{id:2002,name:"Demo Scene 2",description:"Continuation of the story",content:"This is the content of the second demo scene",universe_id:i||1001,user_id:t,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),order:2,status:"draft",scene_type:"default"}];return Promise.resolve({status:200,data:{scenes:o,message:"Scenes retrieved successfully (mock)"}})}const m=new URLSearchParams;"string"==typeof e||"number"==typeof e?m.append("universe_id",e):e.universeId&&m.append("universe_id",e.universeId);const u=`${d("scenes","list","/scenes")}?${m.toString()}`,p=l(u);return new Promise((t=>{g.get(p).then((e=>{t(e)})).catch((o=>{var s,n,a;if("Request throttled to prevent rate limits"===o.message&&sessionStorage.setItem("last_scene_throttle",Date.now().toString()),"Request throttled to prevent rate limits"===o.message||"Request rejected due to rate limit cooldown"===o.message||401===(null==(s=o.response)?void 0:s.status)||429===(null==(n=o.response)?void 0:n.status)||(null==(a=localStorage.getItem(r.TOKEN_KEY))?void 0:a.startsWith("demo-"))||"1001"===i||1001===i){const e=localStorage.getItem(r.USER_KEY);let o="demo-user";try{if(e){o=JSON.parse(e).id||o}}catch(v){}const s=[{id:2001,name:"Demo Scene 1",description:"Introduction to the universe",content:"This is the content of the first demo scene",universe_id:i||1001,user_id:o,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),order:1,status:"draft",scene_type:"default"},{id:2002,name:"Demo Scene 2",description:"Continuation of the story",content:"This is the content of the second demo scene",universe_id:i||1001,user_id:o,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),order:2,status:"draft",scene_type:"default"}];return t({status:200,data:{scenes:s,message:"Scenes retrieved successfully (mock after error)"}})}const i="string"==typeof e||"number"==typeof e?e:e.universeId;t({status:200,data:{scenes:[],message:"No scenes found"}})}))}))},getScene:async e=>{if(!e||"new"===e)throw new Error("Invalid scene ID");const t=l(`/scenes/${e}`);try{const e=await g.get(t);if(e.data&&e.data.scene)return e;if(e.data&&"object"==typeof e.data&&e.data.id)return{...e,data:{scene:e.data,message:"Scene retrieved successfully"}};if(e.data&&"object"==typeof e.data)for(const t in e.data)if(e.data[t]&&"object"==typeof e.data[t]&&(e.data[t].id||"scene"===t))return{...e,data:{scene:e.data[t],message:e.data.message||"Scene retrieved successfully"}};throw new Error("Invalid response format - missing scene data")}catch(r){throw r}},createScene:async e=>{if(!e||"object"!=typeof e)throw new Error("Invalid scene data: must be an object");if(!e.name||""===e.name.trim())throw new Error("Scene name is required");if(!e.universe_id)throw new Error("universe_id is required for scene creation");const t={...e};t.is_deleted=!1,t.timeOfDay&&!t.time_of_day&&(t.time_of_day=t.timeOfDay,delete t.timeOfDay),t.characterIds&&!t.character_ids&&(t.character_ids=t.characterIds,delete t.characterIds),t.dateOfScene&&!t.date_of_scene&&(t.date_of_scene=t.dateOfScene,delete t.dateOfScene),t.notesText&&!t.notes_text&&(t.notes_text=t.notesText,delete t.notesText),t.summary=(t.summary||t.description||"").toString(),t.content=(t.content||"").toString(),t.description=(t.description||"").toString(),t.name=t.name.toString();["name","title","description","summary","content","notes","location","scene_type","significance","status","time_of_day"].forEach((e=>{e in t?void 0===t[e]||null===t[e]?t[e]="":"string"!=typeof t[e]&&(t[e]=String(t[e])):t[e]=""}));try{const e=l("/scenes"),r=JSON.parse(JSON.stringify(t)),o=await g.post(e,r);return o.data&&(o.data.scene?o.data.scene.is_deleted=!1:"object"==typeof o.data&&(o.data.is_deleted=!1)),o}catch(r){if(r.response&&r.response.data&&r.response.data.message&&(r.message=`Scene creation failed: ${r.response.data.message}`),r.response&&401===r.response.status&&S.isDemoEnvironment()){return{data:{scene:{id:`demo-${Date.now()}`,...t,created_at:(new Date).toISOString(),updated_at:(new Date).toISOString(),is_deleted:!1},message:"Scene created successfully (Demo mode)"}}}throw r}},updateScene:async(e,t)=>{if(!e)throw new Error("Scene ID is required for update");if(!t||"object"!=typeof t)throw new Error("Invalid scene data: must be an object");if(void 0!==t.name&&(!t.name||""===t.name.trim()))throw new Error("Scene name cannot be empty");const r={...t};r.is_deleted=!1,r.timeOfDay&&!r.time_of_day&&(r.time_of_day=r.timeOfDay,delete r.timeOfDay),r.characterIds&&!r.character_ids&&(r.character_ids=r.characterIds,delete r.characterIds),r.dateOfScene&&!r.date_of_scene&&(r.date_of_scene=r.dateOfScene,delete r.dateOfScene),r.notesText&&!r.notes_text&&(r.notes_text=r.notesText,delete r.notesText),("summary"in r||"description"in r)&&(r.summary=(r.summary||r.description||"").toString()),"content"in r&&(r.content=(r.content||"").toString()),"description"in r&&(r.description=(r.description||"").toString()),"name"in r&&(r.name=r.name.toString());["name","title","description","summary","content","notes","location","scene_type","significance","status","time_of_day"].forEach((e=>{e in r&&(void 0===r[e]||null===r[e]?r[e]="":"string"!=typeof r[e]&&(r[e]=String(r[e])))}));try{const t=l(`/scenes/${e}`),o=JSON.parse(JSON.stringify(r)),s=await g.put(t,o);return s.data&&s.data.scene&&(s.data.scene.is_deleted=!1),s}catch(o){if(o.response&&o.response.data&&o.response.data.message&&(o.message=`Scene update failed: ${o.response.data.message}`),o.response&&(401===o.response.status||403===o.response.status)&&S.isDemoEnvironment())return{data:{message:"Scene updated successfully (Demo mode)",scene:{...r,id:e,updated_at:(new Date).toISOString(),is_deleted:!1}}};throw o}},deleteScene:async e=>{if(!e)throw new Error("Scene ID is required for deletion");try{const t=l(`/scenes/${e}`),r=await g.delete(t);return{...r,data:{...r.data,id:e}}}catch(t){if(t.response&&t.response.data&&t.response.data.message&&(t.message=`Scene deletion failed: ${t.response.data.message}`),t.response&&(401===t.response.status||403===t.response.status)&&S.isDemoEnvironment())return{data:{message:"Scene deleted successfully (Demo mode)",id:e}};throw t}},updateSceneHarmony:(e,t)=>{const r=l(`/scenes/${e}/harmony`);return g.put(r,{harmony_params:t})},getCharacters:async()=>{var e;try{if(null==(e=localStorage.getItem(r.TOKEN_KEY))?void 0:e.startsWith("demo-"))return{data:{message:"Characters retrieved successfully (mock)",characters:[]}};const t=d("characters","list","/api/characters"),o=await g.get(t);return{data:{characters:Array.isArray(o.data)?o.data:o.data.characters||[],message:"Characters retrieved successfully"}}}catch(t){return{data:{characters:[],message:"Error fetching characters"}}}},getCharactersByUniverse:e=>{if(!e||null==e||"undefined"===e||"null"===e)return Promise.reject(new Error(`Invalid universe ID: ${e}`));const t="string"==typeof e?parseInt(e,10):e;if(isNaN(t)||t<=0)return Promise.reject(new Error(`Invalid universe ID format: ${e}`));const r=l(`/api/universes/${t}/characters`);return g.get(r)},createCharacter:async e=>{var t,r;if(!e.name)throw new Error("Character name is required");if(!e.universe_id)throw new Error("Universe ID is required");if(!e.scene_id)throw new Error("Scene ID is required");const o={...e,is_deleted:!1,description:e.description||null,image_url:e.image_url||null,gender:e.gender||null,occupation:e.occupation||null,personality:e.personality||null,background:e.background||null,goals:e.goals||null,relationships:e.relationships||null,notes:e.notes||null,status:e.status||"active"};try{const e=l("/api/characters");return await g.post(e,o)}catch(s){if(null==(r=null==(t=s.response)?void 0:t.data)?void 0:r.message)throw new Error(`Character creation failed: ${s.response.data.message}`);throw s}},getCharacter:async e=>{try{const t=l(`/api/characters/${e}`);return await g.get(t)}catch(t){throw t}},updateCharacter:async(e,t)=>{try{const r=l(`/api/characters/${e}`);return await g.put(r,t)}catch(r){throw r}},deleteCharacter:async e=>{try{const t=l(`/api/characters/${e}`);return await g.delete(t)}catch(t){throw t}},getNotes:(e={})=>{const t=new URLSearchParams;"string"==typeof e||"number"==typeof e?t.append("universe_id",e):e.universeId?t.append("universe_id",e.universeId):e.sceneId?t.append("scene_id",e.sceneId):e.characterId&&t.append("character_id",e.characterId);const r=`${d("notes","list","/api/notes")}?${t.toString()}`;return g.get(r)},getNotesByUniverse:e=>u("get",`/api/universes/${e}/notes`),getNotesByScene:e=>u("get",`/api/scenes/${e}/notes`),getNotesByCharacter:e=>u("get",`/api/characters/${e}/notes`),getNote:e=>u("get",`/api/notes/${e}`),createNote:e=>{const t={...e};if(!t.universe_id&&!t.scene_id&&!t.character_id)throw new Error("At least one parent ID (universe_id, scene_id, or character_id) is required to create a note");return u("post","/api/notes",t)},updateNote:async(e,t)=>{try{if(!t.title)throw new Error("Note title is required");const r={...t},o=`/api/notes/${e}`;return await u("put",o,r)}catch(r){throw r}},deleteNote:async e=>{try{const t=`/api/notes/${e}`;return await u("delete",t)}catch(t){throw t}},isDemoEnvironment:()=>{const e=localStorage.getItem(r.TOKEN_KEY);return e&&e.startsWith("demo-")||!1},createOrRefreshDemoUser:(e=null)=>{const t=e||`demo-${Date.now()}`,o={id:t,username:"demo_user",email:"demo@harmonic-universe.com",firstName:"Demo",lastName:"User",role:"user",is_demo:!0,createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()},s=`demo-${t}-${Date.now()}`,n=`demo-refresh-${t}-${Date.now()}`;return localStorage.setItem(r.TOKEN_KEY,s),localStorage.setItem(r.REFRESH_TOKEN_KEY,n),localStorage.setItem(r.USER_KEY,JSON.stringify(o)),{user:o,token:s,refreshToken:n}},shouldUseMockData:f};export{S as default};
