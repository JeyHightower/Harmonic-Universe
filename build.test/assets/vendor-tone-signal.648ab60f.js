import{o as t,a8 as e,P as s,T as a,a9 as r,f as i,aa as n,h as u,G as o}from"./vendor-tone-core-base.398f9a2a.js";import{D as p}from"./vendor-tone-source.0b4b1ccd.js";import"./vendor-tone-audio.70450c41.js";class h extends p{constructor(){super(t(h.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const a=t(h.getDefaults(),arguments,["offset"]);e(this._source,this._gainNode),this.offset=new s({context:this.context,convert:a.convert,param:this._source.offset,units:a.units,value:a.offset,minValue:a.minValue,maxValue:a.maxValue})}static getDefaults(){return Object.assign(p.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),"started"===this.state&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class c extends a{constructor(){super(t(c.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const e=t(c.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new h({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(a.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,s=0){return l(this,t,e,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,s){return this._param.exponentialRampTo(t,e,s),this}linearRampTo(t,e,s){return this._param.linearRampTo(t,e,s),this}targetRampTo(t,e,s){return this._param.targetRampTo(t,e,s),this}exponentialApproachValueAtTime(t,e,s){return this._param.exponentialApproachValueAtTime(t,e,s),this}setTargetAtTime(t,e,s){return this._param.setTargetAtTime(t,e,s),this}setValueCurveAtTime(t,e,s,a){return this._param.setValueCurveAtTime(t,e,s,a),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,s){return this._param.rampTo(t,e,s),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function l(t,a,i,n){(a instanceof s||r(a)||a instanceof c&&a.override)&&(a.cancelScheduledValues(0),a.setValueAtTime(0,0),a instanceof c&&(a.overridden=!0)),e(t,a,i,n)}class m extends a{constructor(){super(Object.assign(t(m.getDefaults(),arguments,["context"])))}connect(t,e=0,s=0){return l(this,t,e,s),this}}class _ extends m{constructor(){super(Object.assign(t(_.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=t(_.getDefaults(),arguments,["mapping","length"]);i(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):n(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(c.getDefaults(),{length:1024})}setMap(t,e=1024){const s=new Float32Array(e);for(let a=0,r=e;a<r;a++){const e=a/(r-1)*2-1;s[a]=t(e,a)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some((e=>e.includes(t)));u(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class g extends m{constructor(){super(Object.assign(t(g.getDefaults(),arguments,["value"]))),this.name="Pow";const e=t(g.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new _({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(m.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class d extends m{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new _({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class v extends c{constructor(){super(Object.assign(t(v.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const e=t(v.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new o({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(c.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}export{d as A,v as M,g as P,c as S,_ as W,l as c};
