def should_skip_migrations():
    """Check if migrations should be skipped"""
    import os
    if os.environ.get('RENDER') == 'true' and os.path.exists('.SKIP_MIGRATIONS'):
        print("RENDER DEPLOYMENT: Skipping automatic migrations")
        return True

    # Safety check for existing tables
    connection = config.attributes.get('connection', None)
    if connection:
        from sqlalchemy import inspect
        inspector = inspect(connection)
        tables = inspector.get_table_names()
        if 'users' in tables:
            # Tables exist, stamp the current revision instead of running migrations
            from alembic.command import stamp
            from alembic.config import Config
            alembic_cfg = Config("migrations/alembic.ini")
            stamp(alembic_cfg, "head")
            print("Existing tables found: stamping current migration state instead of migrating")
            return True

    return False

def run_migrations_online():
    """Run migrations in 'online' mode."""

    if should_skip_migrations():
        return

    # Rest of your existing function...
