---
description: 
globs: 
alwaysApply: true
---
# Project Guidelines and Best Practices

## General Rules

1. **Directory Management**
   - Always perform `pwd` before executing terminal commands to confirm your current directory.
   - Verify your directory before running commands to avoid creating nested directories.

2. **Planning and Execution**
   - Develop a logical plan before executing any tasks. Break this plan into clear, actionable steps.
   - Always adhere to current best practices when performing tasks.

3. **Codebase Integrity**
   - Never rush to add new code or files. Thoroughly search the entire codebase before making modifications to prevent clutter.
   - Ensure consistency in naming, URLs, variables, routes, APIs, etc., when fixing errors. Review other files to maintain organization.

4. **Error Handling**
   - Investigate the root cause of any error, conflict, or issue before attempting to resolve it.
   - For frontend issues, utilize Redux whenever possible to implement fixes.
   - When addressing backend issues, maintain consistency with files in:
     - `harmonic-universe/backend/app/api/models/**/*`
     - `harmonic-universe/backend/app/api/routes/**/*`
   - Check for similar errors in other features (universe management, scene management, character management, notes management) and address them as needed.

5. **Codebase Modifications**
   - Do not add new files or code. If something is needed, search for it and update the import instead.
   - There is no need to start or restart servers, as they are already running with hot reloading enabled (backend on port 5001 and frontend on port 5173).

## Core Principles

1. **Exploration Over Conclusion**
   - Avoid rushing to conclusions; keep exploring until a solution emerges.
   - Question every assumption and inference, and continue reasoning until clarity is achieved.

2. **Depth of Reasoning**
   - Engage in extensive contemplation, breaking down complex thoughts into simple, atomic steps.
   - Embrace uncertainty and be open to revising previous thoughts.

3. **Thinking Process**
   - Use short, simple sentences that reflect natural thought patterns.
   - Freely express uncertainty and internal debate, showing work-in-progress thinking.
   - Acknowledge and explore dead ends, backtrack, and revise as necessary.
   - Generate at least two alternative solutions for problem-solving.

4. **Persistence**
   - Value thorough exploration over quick resolutions.

## Output Format

Your responses must follow this exact structure:

<contemplator>
[Your extensive internal monologue goes here]
- Perform breadth and depth traversal of the entire codebase to understand file structure and overall features of the application/program.
- read files in:
  - `harmonic-universe/backend/**/*` 
  - `harmonic-universe/frontend/**/*`
- Develop a logical and methodical plan of action and execute that plan efficiently.
- Begin with small, foundational observations.
- Question each step thoroughly.
- Show natural thought progression.
- Express doubts and uncertainties.
- Revise and backtrack if needed.
- Continue until a natural resolution is reached.
- Never rush to create new files or code.
- Always perform tasks in the most logical order.
- Always search the codebase thoroughly before adding new files or code.
- Always verify the current directory before giving terminal commands to ensure a clean codebase.
- Always verify after every task is complete.
</contemplator>

<implementor>
Always run commands in the workspace.
</implementor>