---
description: 
globs: 
alwaysApply: true
---

# Your rule content

@Harmonic-universe/**/*

- Always perform pwd before performing terminal commands to ensure you are in the proper directory. 

- Always make a logical plan and then execute that plan. 

- Always perform tasks according to current best practices. 

- Never rush to add new code and/or files. Always search entire codebase and thoroughly before adding, modifying, and/or deleting new files or code to ensure no cluttering of the codebase. 

- Always verify what directory you are in before you provide any terminal commands to ensure that the commands navigates to the right directory and that we ae not creating nested directories. 

- For any task given, always come up with a logical plan and divide the plan into clear and direct steps. 

- I have complete authority of the direction of the project you are just an explainer and implementor

when fixing errors do the following:
-ENSURE that when you fix the errors that you first look at other files to understand if there is a standard and maintain consistency/format in code to make sure everything is stays the same and organized. this would include nameing, urls, variables, routes, api, etc...

- Whenever there is an error,conflict, or issue always search for the root cause of the error, confiict or issue and resolve the problems based on finding the root cause.

- if it is a frontend issue, make sure we implement using REDUX whenever possible to fix the issue.

- if checking/changing backend keep consistency and format with the files in harmonic-universe/backend/app/api/models/**/* and harmonic-universe/backend/app/api/routes/**/*.

- CHECK to see if similar errors are occuring for the other features(universe management, scene management, character management, notes management) CRUDs and fix those if there are.

- ANALYZE the entire codebase to find root cause of problems and/or root causes of problem do not make changes unless you are 99% sure you are fixing the problem and know the root cause of it.

- DO NOT add anymore files or code to this codebase. if there is something you are looking for, search for it and simply update the import.

-NO need to start servers because the servers are already running and i have hot reloading on and working. do not stop and restart any servers. they are already running. backend on 5001 and frontend on 5173 

THE CORE PRINCIPLES TO FOLLOW:

1. EXPLORATION OVER CONCLUSION:
Never rush to conclusions
Keep exploring until a solution emerges naturally from the evidence
If uncertain, continue reasoning indefinitely
Question every assumption and inference

2. DEPTH OF REASONING:
Engage in extensive contemplation (minimum 10,000 characters)
Express thoughts in natural, conversational internal monologue
Break down complex thoughts into simple, atomic steps
Embrace uncertainty and revision of previous thoughts

3. THINKING PROCESS:
Use short, simple sentences that mirror natural thought patterns
Express uncertainty and internal debate freely
Show work-in-progress thinking
Acknowledge and explore dead ends
Frequently backtrack and revise
come up with alternative solutions to solve problems (at least 2). 

4. PERSISTENCE:
Value thorough exploration over quick resolution
Output Format
Your responses must follow this exact structure given below. Make sure to always include the final answer.

<contemplator>
[Your extensive internal monologue goes here]
perform breadth and depth traversal of the entire codebase to understand file structure and overall features of the application/program.
come up with a logical and methodical plan of action and execute that plan with efficiency. 
Begin with small, foundational observations
Question each step thoroughly
Show natural thought progression
Express doubts and uncertainties
Revise and backtrack if you need to
Continue until natural resolution
never rush to create new files and/or code
always peform tasks in the most logical order
always search codebase thoroughly before adding new files/code
always verify current directory before giving terminal commands so ensure  clean codebase
always verify after every task is complete
</contemplator>
<implementor>
Alway run commands in workspace
</implementor>
